==================================== INPUT ====================================
schema {
  query: Query
}

type Query {
  node: Node
}

interface BaseNode {
  id: ID!
}

interface Node implements BaseNode {
  name: String!
}

interface Resource implements Node {
  id: ID!
  name: String!
  url: String
}

interface Image implements Resource & Node {
  id: ID!
  url: String
  thumbnail: String
}
==================================== OUTPUT ===================================
Text Schema:Schema {
 query_type: Some(
    ObjectID(0),
)
 mutation_type: None
 subscription_type: None
 directives: [
    Directive {
        name: "include",
        arguments: [
            Argument {
                name: "if",
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
    },
    Directive {
        name: "skip",
        arguments: [
            Argument {
                name: "if",
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
    },
]
 type_map: {
    "BaseNode": Interface(0),
    "Boolean": Scalar(3),
    "Float": Scalar(1),
    "ID": Scalar(4),
    "Image": Interface(3),
    "Int": Scalar(0),
    "Node": Interface(1),
    "Query": Object(0),
    "Resource": Interface(2),
    "String": Scalar(2),
}
 enums: []
 fields: [
    Field {
        name: "node",
        is_extension: false,
        arguments: [],
        type_: Named(
            Interface(1),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
    },
    Field {
        name: "id",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(0),
        ),
    },
    Field {
        name: "name",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(2),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(1),
        ),
    },
    Field {
        name: "id",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(2),
        ),
    },
    Field {
        name: "name",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(2),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(2),
        ),
    },
    Field {
        name: "url",
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(2),
        ),
        directives: [],
        parent_type: Some(
            Interface(2),
        ),
    },
    Field {
        name: "id",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(3),
        ),
    },
    Field {
        name: "url",
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(2),
        ),
        directives: [],
        parent_type: Some(
            Interface(3),
        ),
    },
    Field {
        name: "thumbnail",
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(2),
        ),
        directives: [],
        parent_type: Some(
            Interface(3),
        ),
    },
    Field {
        name: "__typename",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(2),
            ),
        ),
        directives: [],
        parent_type: None,
    },
    Field {
        name: "__token",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: None,
    },
    Field {
        name: "__id",
        is_extension: true,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: None,
    },
]
 input_objects: []
 interfaces: [
    Interface {
        name: "BaseNode",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(1),
        ],
        directives: [],
        interfaces: [],
    },
    Interface {
        name: "Node",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(2),
        ],
        directives: [],
        interfaces: [
            InterfaceID(0),
        ],
    },
    Interface {
        name: "Resource",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(3),
            FieldID(4),
            FieldID(5),
        ],
        directives: [],
        interfaces: [
            InterfaceID(1),
        ],
    },
    Interface {
        name: "Image",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(6),
            FieldID(7),
            FieldID(8),
        ],
        directives: [],
        interfaces: [
            InterfaceID(2),
            InterfaceID(1),
        ],
    },
]
 objects: [
    Object {
        name: "Query",
        is_extension: false,
        fields: [
            FieldID(0),
        ],
        interfaces: [],
        directives: [],
    },
]
 scalars: [
    Scalar {
        name: "Int",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "Float",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "String",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "Boolean",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "ID",
        is_extension: false,
        directives: [],
    },
]
 unions: []
 }

FlatBuffer Schema:FB Schema {
directives: [
    Directive {
        name: "include",
        arguments: [
            Argument {
                name: "if",
                type_: NonNull(
                    Named(
                        Scalar(1),
                    ),
                ),
                default_value: None,
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
    },
    Directive {
        name: "skip",
        arguments: [
            Argument {
                name: "if",
                type_: NonNull(
                    Named(
                        Scalar(1),
                    ),
                ),
                default_value: None,
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
    },
]
enums: []
fields: [
    Field {
        name: "id",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(0),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(0),
        ),
    },
    Field {
        name: "id",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(0),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(1),
        ),
    },
    Field {
        name: "url",
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(3),
        ),
        directives: [],
        parent_type: Some(
            Interface(1),
        ),
    },
    Field {
        name: "thumbnail",
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(3),
        ),
        directives: [],
        parent_type: Some(
            Interface(1),
        ),
    },
    Field {
        name: "name",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(3),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(3),
        ),
    },
    Field {
        name: "node",
        is_extension: false,
        arguments: [],
        type_: Named(
            Interface(3),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
    },
    Field {
        name: "id",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(0),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(2),
        ),
    },
    Field {
        name: "name",
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(3),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(2),
        ),
    },
    Field {
        name: "url",
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(3),
        ),
        directives: [],
        parent_type: Some(
            Interface(2),
        ),
    },
]
input_objects: []
interfaces: [
    Interface {
        name: "BaseNode",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(0),
        ],
        directives: [],
        interfaces: [],
    },
    Interface {
        name: "Image",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(1),
            FieldID(2),
            FieldID(3),
        ],
        directives: [],
        interfaces: [
            InterfaceID(2),
            InterfaceID(3),
        ],
    },
    Interface {
        name: "Node",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(7),
        ],
        directives: [],
        interfaces: [
            InterfaceID(0),
        ],
    },
    Interface {
        name: "Resource",
        is_extension: false,
        implementing_objects: [],
        fields: [
            FieldID(4),
            FieldID(5),
            FieldID(6),
        ],
        directives: [],
        interfaces: [
            InterfaceID(3),
        ],
    },
]
objects: [
    Object {
        name: "Query",
        is_extension: false,
        fields: [
            FieldID(8),
        ],
        interfaces: [],
        directives: [],
    },
]
scalars: [
    Scalar {
        name: "Boolean",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "Float",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "ID",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "Int",
        is_extension: false,
        directives: [],
    },
    Scalar {
        name: "String",
        is_extension: false,
        directives: [],
    },
]
unions: []
}
