// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RelayDirectiveTransform matches expected output: plural-fragment.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PluralFragment on User @relay(plural: true) {
  name
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
Fragment {
  directives: [],
  loc: Source {
    start: 0,
    end: 63,
    source: {
      "body": "fragment PluralFragment on User @relay(plural: true) {\\n  name\\n}\\n",
      "name": "GraphQL request",
      "locationOffset": {
        "line": 1,
        "column": 1,
      },
    },
  },
  metadata: {
    "mask": undefined,
    "plural": true,
  },
  name: "PluralFragment",
  selections: [
    ScalarField {
      alias: "name",
      args: [],
      directives: [],
      handles: null,
      loc: Source {
        start: 57,
        end: 61,
        source: {
          "body": "fragment PluralFragment on User @relay(plural: true) {\\n  name\\n}\\n",
          "name": "GraphQL request",
          "locationOffset": {
            "line": 1,
            "column": 1,
          },
        },
      },
      metadata: null,
      name: "name",
      type: "String",
    },
  ],
  type: "User",
  argumentDefinitions: [],
}
`;

exports[`RelayDirectiveTransform matches expected output: unmasked-spread.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment UserProfile on User {
  profilePicture {
    ...PhotoFragment @relay(mask: false)
  }
}

fragment PhotoFragment on Image {
  uri
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
Fragment {
  directives: [],
  loc: Source {
    start: 0,
    end: 96,
    source: {
      "body": "fragment UserProfile on User {\\n  profilePicture {\\n    ...PhotoFragment @relay(mask: false)\\n  }\\n}\\n\\nfragment PhotoFragment on Image {\\n  uri\\n}\\n",
      "name": "GraphQL request",
      "locationOffset": {
        "line": 1,
        "column": 1,
      },
    },
  },
  metadata: null,
  name: "UserProfile",
  selections: [
    LinkedField {
      alias: "profilePicture",
      args: [],
      connection: false,
      directives: [],
      handles: null,
      loc: Source {
        start: 33,
        end: 94,
        source: {
          "body": "fragment UserProfile on User {\\n  profilePicture {\\n    ...PhotoFragment @relay(mask: false)\\n  }\\n}\\n\\nfragment PhotoFragment on Image {\\n  uri\\n}\\n",
          "name": "GraphQL request",
          "locationOffset": {
            "line": 1,
            "column": 1,
          },
        },
      },
      metadata: null,
      name: "profilePicture",
      selections: [
        FragmentSpread {
          args: [],
          metadata: {
            "mask": false,
          },
          loc: Source {
            start: 54,
            end: 90,
            source: {
              "body": "fragment UserProfile on User {\\n  profilePicture {\\n    ...PhotoFragment @relay(mask: false)\\n  }\\n}\\n\\nfragment PhotoFragment on Image {\\n  uri\\n}\\n",
              "name": "GraphQL request",
              "locationOffset": {
                "line": 1,
                "column": 1,
              },
            },
          },
          name: "PhotoFragment",
          directives: [],
        },
      ],
      type: "Image",
    },
  ],
  type: "User",
  argumentDefinitions: [],
}
Fragment {
  directives: [],
  loc: Source {
    start: 98,
    end: 139,
    source: {
      "body": "fragment UserProfile on User {\\n  profilePicture {\\n    ...PhotoFragment @relay(mask: false)\\n  }\\n}\\n\\nfragment PhotoFragment on Image {\\n  uri\\n}\\n",
      "name": "GraphQL request",
      "locationOffset": {
        "line": 1,
        "column": 1,
      },
    },
  },
  metadata: null,
  name: "PhotoFragment",
  selections: [
    ScalarField {
      alias: "uri",
      args: [],
      directives: [],
      handles: null,
      loc: Source {
        start: 134,
        end: 137,
        source: {
          "body": "fragment UserProfile on User {\\n  profilePicture {\\n    ...PhotoFragment @relay(mask: false)\\n  }\\n}\\n\\nfragment PhotoFragment on Image {\\n  uri\\n}\\n",
          "name": "GraphQL request",
          "locationOffset": {
            "line": 1,
            "column": 1,
          },
        },
      },
      metadata: null,
      name: "uri",
      type: "String",
    },
  ],
  type: "Image",
  argumentDefinitions: [],
}
`;
