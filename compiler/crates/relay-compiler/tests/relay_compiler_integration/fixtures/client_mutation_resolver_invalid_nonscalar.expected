==================================== INPUT ====================================
//- foo.js
/**
 * @RelayResolver Mutation.foo_mutation: Person
 */

/**
 * @RelayResolver Mutation.baz_mutation: [Person]
 */

/**
 * @RelayResolver Mutation.quux_mutation: [Person!]
 */

//- bar.js
graphql`mutation barMutation {
   foo_mutation {
      name
   }
   baz_mutation {
      name
   }
   quux_mutation {
      name
   }
}`

//- relay.config.json
{
   "language": "flow",
   "schema": "./schema.graphql",
   "eagerEsModules": true,
   "featureFlags": {
      "enable_relay_resolver_transform": true,
      "enable_relay_resolver_mutations": true
   },
   "schemaExtensions": [
      "./extensions.graphql"
   ]
}

//- schema.graphql

type Mutation

//- extensions.graphql

type Person {
   name: String!
   age: Int!
}
==================================== OUTPUT ===================================
✖︎ Mutation resolver foo_mutation must return a scalar or enum type, got Person

  foo.js:1:3
    1 │ *
      │ ^
    2 │  * @RelayResolver Mutation.foo_mutation: Person
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    3 │  

✖︎ Mutation resolver baz_mutation must return a scalar or enum type, got [Person]

  foo.js:5:3
    5 │ *
      │ ^
    6 │  * @RelayResolver Mutation.baz_mutation: [Person]
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    7 │  

✖︎ Mutation resolver quux_mutation must return a scalar or enum type, got [Person!]

  foo.js:9:3
    9 │ *
      │ ^
   10 │  * @RelayResolver Mutation.quux_mutation: [Person!]
      │ ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   11 │
