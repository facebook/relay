==================================== INPUT ====================================
query ExampleQuery($id: ID!, $condition: Boolean!) @raw_response_type {
  node(id: $id) {
    ...FriendFragment
  }
}

fragment FriendFragment on User {
  ... @include(if: $condition) {
    name
    lastName
    feedback {
      id
      name
    }
  }
}
==================================== OUTPUT ===================================
import type { FriendFragment$ref } from "FriendFragment.graphql";
export type ExampleQueryVariables = {|
  id: string,
  condition: boolean,
|};
export type ExampleQueryResponse = {|
  +node: ?{|
    +$fragmentRefs: FriendFragment$ref
  |}
|};
export type ExampleQueryRawResponse = {|
  +node: ?({|
    +__typename: "User",
    +id: string,
    +name: ?string,
    +lastName: ?string,
    +feedback: ?{|
      +id: string,
      +name: ?string,
    |},
  |} | {|
    +__typename: string,
    +id: string,
  |})
|};
export type ExampleQuery = {|
  variables: ExampleQueryVariables,
  response: ExampleQueryResponse,
  rawResponse: ExampleQueryRawResponse,
|};
-------------------------------------------------------------------------------
import { FragmentReference } from "relay-runtime";
export type FriendFragment$ref = FragmentReference & { _: "FriendFragment$ref" };
export type FriendFragment$fragmentType = FriendFragment$ref & { _: "FriendFragment$fragmentType" };
export type FriendFragment = {
  readonly name?: string,
  readonly lastName?: string,
  readonly feedback?: {
    readonly id: string,
    readonly name?: string,
  },
  readonly $refType: FriendFragment$ref,
};
export type FriendFragment$data = FriendFragment;
export type FriendFragment$key = {
  readonly $data?: FriendFragment$data,
  readonly $fragmentRefs: FriendFragment$ref,
};
