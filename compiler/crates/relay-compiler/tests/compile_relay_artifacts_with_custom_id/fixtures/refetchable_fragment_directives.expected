==================================== INPUT ====================================
fragment refetchableFragmentDirectives on Node
@refetchable(
  queryName: "refetchableFragmentDirectivesQuery"
  directives: ["@live_query(polling_interval:10)"]
) {
  global_id
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "global_id"
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "refetchableFragmentDirectivesQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "global_id",
            "variableName": "global_id"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "refetchableFragmentDirectives"
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "global_id"
      }
    ],
    "kind": "Operation",
    "name": "refetchableFragmentDirectivesQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "global_id",
            "variableName": "global_id"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "kind": "TypeDiscriminator",
            "abstractKey": "__isNode"
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "global_id",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {
      "live": {
        "polling_interval": 10
      }
    },
    "name": "refetchableFragmentDirectivesQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query refetchableFragmentDirectivesQuery(
  $global_id: ID!
) @live_query(polling_interval: 10) {
  node(global_id: $global_id) {
    __typename
    ...refetchableFragmentDirectives
    global_id
  }
}

fragment refetchableFragmentDirectives on Node {
  __isNode: __typename
  global_id
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": {
    "refetch": {
      "connection": null,
      "fragmentPathInResult": [
        "node"
      ],
      "operation": require('refetchableFragmentDirectivesQuery.graphql'),
      "identifierField": "global_id"
    }
  },
  "name": "refetchableFragmentDirectives",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "global_id",
      "storageKey": null
    }
  ],
  "type": "Node",
  "abstractKey": "__isNode"
}
