==================================== INPUT ====================================
fragment Foo on Node {
  ... on User {
    __typename
  }
  ... on Comment {
    alias: __typename
  }
  ... on Feedback {
    foo: __typename
  }
}
==================================== OUTPUT ===================================
import type { FragmentType } from "relay-runtime";
declare export opaque type Foo$fragmentType: FragmentType;
export type Foo$data = {|
  +__typename: "User",
  +$fragmentType: Foo$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +alias: "%other",
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +foo: "%other",
  +$fragmentType: Foo$fragmentType,
|} | {|
  +alias: "Comment",
  +$fragmentType: Foo$fragmentType,
|} | {|
  +foo: "Feedback",
  +$fragmentType: Foo$fragmentType,
|};
export type Foo$key = {
  +$data?: Foo$data,
  +$fragmentSpreads: Foo$fragmentType,
  ...
};
