==================================== INPUT ====================================
query ExampleQuery($id: ID!) {
  node(id: $id) {
    id
  }
}

fragment ExampleFragment on User {
  id
}

mutation TestMutation($input: CommentCreateInput!) {
  commentCreate(input: $input) {
    comment {
      id
    }
  }
}

subscription TestSubscription($input: FeedbackLikeInput) {
  feedbackLikeSubscribe(input: $input) {
    feedback {
      id
    }
  }
}
==================================== OUTPUT ===================================
export type ExampleQuery$variables = {|
  id: string,
|};
export type ExampleQuery$data = {|
  +node: ?{|
    +id: string,
  |},
|};
export type ExampleQuery = {|
  variables: ExampleQuery$variables,
  response: ExampleQuery$data,
|};
-------------------------------------------------------------------------------
export type CommentCreateInput = {|
  clientMutationId?: ?string,
  feedbackId?: ?string,
  feedback?: ?CommentfeedbackFeedback,
|};
export type CommentfeedbackFeedback = {|
  comment?: ?FeedbackcommentComment,
|};
export type FeedbackcommentComment = {|
  feedback?: ?CommentfeedbackFeedback,
|};
export type TestMutation$variables = {|
  input: CommentCreateInput,
|};
export type TestMutation$data = {|
  +commentCreate: ?{|
    +comment: ?{|
      +id: string,
    |},
  |},
|};
export type TestMutation = {|
  variables: TestMutation$variables,
  response: TestMutation$data,
|};
-------------------------------------------------------------------------------
export type FeedbackLikeInput = {|
  clientMutationId?: ?string,
  feedbackId?: ?string,
|};
export type TestSubscription$variables = {|
  input?: ?FeedbackLikeInput,
|};
export type TestSubscription$data = {|
  +feedbackLikeSubscribe: ?{|
    +feedback: ?{|
      +id: string,
    |},
  |},
|};
export type TestSubscription = {|
  variables: TestSubscription$variables,
  response: TestSubscription$data,
|};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type ExampleFragment$fragmentType: FragmentType;
export type ExampleFragment$data = {|
  +id: string,
  +$fragmentType: ExampleFragment$fragmentType,
|};
export type ExampleFragment$key = {
  +$data?: ExampleFragment$data,
  +$fragmentSpreads: ExampleFragment$fragmentType,
  ...
};
