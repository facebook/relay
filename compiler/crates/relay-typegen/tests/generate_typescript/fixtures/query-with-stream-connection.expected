==================================== INPUT ====================================
query TestDefer @raw_response_type {
  node(id: "1") {
    ... on User {
      name
      friends(first: 10)
        @stream_connection(key: "TestDefer_friends", initial_count: 0) {
        edges {
          node {
            actor {
              name
            }
          }
        }
      }
    }
  }
}
==================================== OUTPUT ===================================
export type TestDefer$variables = {};
export type TestDefer$data = {
  readonly node: {
    readonly friends?: {
      readonly edges: ReadonlyArray<{
        readonly node: {
          readonly actor: {
            readonly name: string | null;
          } | null;
        } | null;
      } | null> | null;
    } | null;
    readonly name?: string | null;
  } | null;
};
export type TestDefer$rawResponse = {
  readonly node: {
    readonly __typename: "User";
    readonly friends: {
      readonly edges: ReadonlyArray<{
        readonly cursor: string | null;
        readonly node: {
          readonly __typename: "User";
          readonly actor: {
            readonly __typename: string;
            readonly id: string;
            readonly name: string | null;
          } | null;
          readonly id: string;
        } | null;
      } | null> | null;
      readonly pageInfo: {
        readonly endCursor: string | null;
        readonly hasNextPage: boolean | null;
      } | null;
    } | null;
    readonly id: string;
    readonly name: string | null;
  } | {
    readonly __typename: string;
    readonly id: string;
  } | null;
};
export type TestDefer = {
  rawResponse: TestDefer$rawResponse;
  response: TestDefer$data;
  variables: TestDefer$variables;
};
