// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RelayMatchTransform matches expected output: invalid-match-type.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...User_user @module(name: "User.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment User_user on User {
  __typename
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: RelayMatchTransform: Unsupported type 'User' in the list of matches in the @match. Type "User" does not belong to the union "UserNameRenderer".
`;

exports[`RelayMatchTransform matches expected output: invalid-no-matches.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer @match
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: GraphQLParser: Encountered 1 error(s):
- Expected at least one selection for non-scalar field 'nameRenderer' on type 'UserNameRenderer'. Source: document \`NameRendererFragment\` file: \`GraphQL request\`.
  
  GraphQL request (3:3)
  2:   id
  3:   nameRenderer @match
       ^
  4: }
  
`;

exports[`RelayMatchTransform matches expected output: invalid-non-empty-selections.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    __typename
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: RelayMatchTransform: all selections in a @match field should be fragment spreads, got 'ScalarField'.
`;

exports[`RelayMatchTransform matches expected output: relay-match-transform.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    ...PlainUserNameRenderer_name
    ... on PlainUserNameRenderer {
      __match_component: js(module: "PlainUserNameRenderer.react")
      __match_fragment: js(module: "PlainUserNameRenderer_name$normalization.graphql")
    }
    ...MarkdownUserNameRenderer_name
    ... on MarkdownUserNameRenderer {
      __match_component: js(module: "MarkdownUserNameRenderer.react")
      __match_fragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

`;
