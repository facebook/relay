==================================== INPUT ====================================
# prefer_fetchable_in_refetch_queries

fragment refetchableFragmentOnNodeAndFetchable_RefetchableFragment on FetchableType
  @refetchable(queryName: "RefetchableFragmentQuery") {
  id
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "id"
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "RefetchableFragmentQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "fetch_id",
            "variableName": "id"
          }
        ],
        "concreteType": "FetchableType",
        "kind": "LinkedField",
        "name": "fetch__FetchableType",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "refetchableFragmentOnNodeAndFetchable_RefetchableFragment"
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "id"
      }
    ],
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "fetch_id",
            "variableName": "id"
          }
        ],
        "concreteType": "FetchableType",
        "kind": "LinkedField",
        "name": "fetch__FetchableType",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "fetch_id",
            "storageKey": null
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__token",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "cacheID": "31dcd57f42128b8d975e6224202a17c9",
    "id": null,
    "metadata": {},
    "name": "RefetchableFragmentQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query RefetchableFragmentQuery(
  $id: ID!
) {
  fetch__FetchableType(fetch_id: $id) {
    ...refetchableFragmentOnNodeAndFetchable_RefetchableFragment
    id
  }
}

fragment refetchableFragmentOnNodeAndFetchable_RefetchableFragment on FetchableType {
  id
  fetch_id
  __token
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": {
    "refetch": {
      "connection": null,
      "fragmentPathInResult": [
        "fetch__FetchableType"
      ],
      "operation": require('RefetchableFragmentQuery.graphql'),
      "identifierInfo": {
        "identifierField": "fetch_id",
        "identifierQueryVariableName": "id"
      }
    }
  },
  "name": "refetchableFragmentOnNodeAndFetchable_RefetchableFragment",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "fetch_id",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "__token",
      "storageKey": null
    }
  ],
  "type": "FetchableType",
  "abstractKey": null
}
