Input:
var Relay = require('react-relay');
var x = Relay.QL`
  query {
    node(id: 123) @include(if: $foo) {
      ... on User @include(if: $bar) {
        name @skip(if: $baz)
      }
    }
  }
`;

Output:
var Relay = require('react-relay');
var x = (function () {
  return {
    calls: [{
      kind: 'Call',
      metadata: {},
      name: 'id',
      value: {
        kind: 'CallValue',
        callValue: 123
      }
    }],
    children: [{
      fieldName: 'id',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'String'
    }, {
      fieldName: '__typename',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'String'
    }, {
      children: [{
        directives: [{
          kind: 'Directive',
          name: 'skip',
          args: [{
            name: 'if',
            value: {
              kind: 'CallVariable',
              callVariableName: 'baz'
            }
          }]
        }],
        fieldName: 'name',
        kind: 'Field',
        metadata: {},
        type: 'String'
      }, {
        fieldName: 'id',
        kind: 'Field',
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: 'String'
      }],
      directives: [{
        kind: 'Directive',
        name: 'include',
        args: [{
          name: 'if',
          value: {
            kind: 'CallVariable',
            callVariableName: 'bar'
          }
        }]
      }],
      id: 'OucjrEJhDOCC:13',
      kind: 'Fragment',
      metadata: {},
      name: 'User',
      type: 'User'
    }],
    directives: [{
      kind: 'Directive',
      name: 'include',
      args: [{
        name: 'if',
        value: {
          kind: 'CallVariable',
          callVariableName: 'foo'
        }
      }]
    }],
    fieldName: 'node',
    kind: 'Query',
    metadata: {
      isAbstract: true,
      identifyingArgName: 'id'
    },
    name: 'QueryWithDirectives',
    type: 'Node'
  };
})();
