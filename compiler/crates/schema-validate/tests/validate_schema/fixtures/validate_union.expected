==================================== INPUT ====================================
directive @fetchable(field_name: String) on OBJECT

interface Hominid {
  pet: Pet
}

interface Canine {
  owner: Human
}

type Pet implements Canine @fetchable(field_name: "id") {
  id: ID
  owner: Human
  type: PetType
  fur: FurType
}

type Human implements Hominid @fetchable(field_name: "id") {
  id: ID
  pet: Pet
  friends(location: Location): [Human]
}

type Query {
  fetch__Human(id: ID!): Human
  user: Human
}

enum PetType {
  DOG
  CAT
}

input Location {
  lat: String
  lon: String
}

union FurType = Hair | Fur

union EmptyFurType

union InvalidFurType = Hair | Fur | Hair

type Hair {
  color: String
}

type Fur {
  color: String
}
==================================== OUTPUT ===================================
✖︎ Union type EmptyFurType must define one or more member types.

  validate_union.graphql:41:7
   40 │ 
   41 │ union EmptyFurType
      │       ^^^^^^^^^^^^
   42 │ 

✖︎ Union can only include member Hair once.

  validate_union.graphql:43:7
   42 │ 
   43 │ union InvalidFurType = Hair | Fur | Hair
      │       ^^^^^^^^^^^^^^
   44 │
