#!/bin/sh

set +x

export ROOT_DIR="$(dirname $(realpath $(dirname $0)))"
export PACKAGES_DIR="$ROOT_DIR/packages"
export PACKAGES=$(ls $PACKAGES_DIR)
export NEW_VERSION=$1

node <<SCRIPT
var path = require('path');
var fs = require('fs');

var ROOT_DIR = process.env.ROOT_DIR;
var packagesDir = process.env.PACKAGES_DIR;
var packages = process.env.PACKAGES.split('\n');
var NEW_VERSION = process.env.NEW_VERSION;

if (!NEW_VERSION || !/^\d\.\d+\.\d+(\-[\d\w\.]+)?$/.test(NEW_VERSION)) {
  console.error(
    'Invalid version "' + NEW_VERSION + '".\n' +
    'USAGE:\n' +
    '  update_version 1.2.3\n' +
    '  update_version 1.2.3-rc.1'
  );
  process.exit(1);
}

updatePackageJson(path.join(ROOT_DIR, 'package.json'));
packages.forEach(function(package) {
  updatePackageJson(path.join(packagesDir, package, 'package.json'));
});

function updatePackageJson(packageJsonPath) {
  var packageJson = require(packageJsonPath);

  packageJson.version = NEW_VERSION;
  ['dependencies', 'peerDependencies'].forEach(dependenciesKey => {
    for (var dep in packageJson[dependenciesKey]) {
      if (packages.indexOf(dep) != -1) {
        packageJson[dependenciesKey][dep] = NEW_VERSION;
      }
    }
  });

  fs.writeFileSync(
    packageJsonPath,
    JSON.stringify(packageJson, null, 2) + '\n',
    'utf8'
  );
}
SCRIPT
