# expected-to-throw
query MultipleNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...FooNameRendererFragment
    ...BarNameRendererFragment
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer @match {
    ...MarkdownUserNameRenderer_name
      @module(name: "FooMarkdownUserNameRenderer.react")
  }
}

fragment BarNameRendererFragment on User {
  # same field and supported types as above but different selections:
  # should flatten together
  nameRenderer @match {
    ...MarkdownUserNameRenderer_name
      @module(name: "BarMarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
