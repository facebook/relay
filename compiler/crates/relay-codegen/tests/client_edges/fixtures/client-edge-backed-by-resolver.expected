==================================== INPUT ====================================
fragment Foo_user on User {
  best_friend @waterfall {
    name
  }
}

fragment BestFriendResolverFragment_name on User {
  __typename
}

# %extensions%

extend type User {
  best_friend: User @relay_resolver(fragment_name: "BestFriendResolverFragment_name", import_path: "BestFriendResolver")
}
==================================== OUTPUT ===================================
{
  "argumentDefinitions": [
    {
      "defaultValue": null,
      "kind": "LocalArgument",
      "name": "id"
    }
  ],
  "kind": "Operation",
  "name": "ClientEdgeQuery_Foo_user_best_friend",
  "selections": [
    {
      "alias": null,
      "args": [
        {
          "kind": "Variable",
          "name": "id",
          "variableName": "id"
        }
      ],
      "concreteType": null,
      "kind": "LinkedField",
      "name": "node",
      "plural": false,
      "selections": [
        {
          "args": null,
          "kind": "FragmentSpread",
          "name": "RefetchableClientEdgeQuery_Foo_user_best_friend"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "BestFriendResolverFragment_name",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "__typename",
      "storageKey": null
    }
  ],
  "type": "User",
  "abstractKey": null
}

{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": {
    "hasClientEdges": true
  },
  "name": "Foo_user",
  "selections": [
    {
      "kind": "ClientEdgeToServerObject",
      "operation": require('ClientEdgeQuery_Foo_user_best_friend.graphql'),
      "backingField": {
        "alias": null,
        "args": null,
        "fragment": {
          "args": null,
          "kind": "FragmentSpread",
          "name": "BestFriendResolverFragment_name"
        },
        "kind": "RelayResolver",
        "name": "best_friend",
        "resolverModule": require('BestFriendResolver'),
        "path": "best_friend"
      },
      "linkedField": {
        "alias": null,
        "args": null,
        "concreteType": "User",
        "kind": "LinkedField",
        "name": "best_friend",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "name",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    }
  ],
  "type": "User",
  "abstractKey": null
}

{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": {
    "refetch": {
      "connection": null,
      "fragmentPathInResult": [
        "node"
      ],
      "operation": require('ClientEdgeQuery_Foo_user_best_friend.graphql'),
      "identifierInfo": {
        "identifierField": "id",
        "identifierQueryVariableName": "id"
      }
    }
  },
  "name": "RefetchableClientEdgeQuery_Foo_user_best_friend",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "name",
      "storageKey": null
    }
  ],
  "type": "User",
  "abstractKey": null
}
