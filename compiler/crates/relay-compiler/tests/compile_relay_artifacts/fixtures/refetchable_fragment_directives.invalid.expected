==================================== INPUT ====================================
# expected-to-throw

fragment refetchableFragmentDirectivesNotLiteralList on Node
@refetchable(
  queryName: "refetchableFragmentDirectivesQuery"
  directives: $var
) {
  id
}

fragment refetchableFragmentDirectivesNotLiteralListValue on Node
@refetchable(
  queryName: "refetchableFragmentDirectivesQuery"
  directives: [$var]
) {
  id
}

fragment refetchableFragmentDirectivesInvalidSyntax on Node
@refetchable(
  queryName: "refetchableFragmentDirectivesQuery"
  directives: ["invalid syntax"]
) {
  id
}

fragment refetchableFragmentDirectivesNotADirective on Node
@refetchable(
  queryName: "refetchableFragmentDirectivesQuery"
  directives: ["@doesNotExit"]
) {
  id
}

fragment refetchableFragmentDirectivesNotValidOnQuery on Node
@refetchable(
  queryName: "refetchableFragmentDirectivesQuery"
  directives: ["@defer"] # invalid on queries
) {
  id
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž Directive 'defer' not supported in this location[0m

  [4mrefetchable_fragment_directives.invalid.graphql[0m[2m:38:15[0m
[1m   37 â”‚ [0m  queryName: "refetchableFragmentDirectivesQuery"
[1m   38 â”‚ [0m  directives: ["@d[31me[0m[31mf[0m[31me[0m[31mr[0m[31m"[0m[31m][0m # invalid on queries
      â”‚ [31m              ^^^^^^^^^^[0m
[1m   39 â”‚ [0m) {


[31mâœ–ï¸Ž Expected a at ('@')[0m

  [4mrefetchable_fragment_directives.invalid.graphql[0m[2m:22:15[0m
[1m   21 â”‚ [0m  queryName: "refetchableFragmentDirectivesQuery"
   22 â”‚   directives: ["invalid syntax"]
      â”‚               ^^^^^^^^^^^^^^^^^^
   23 â”‚ ) {


âœ–ï¸Ž Unknown directive 'doesNotExit'

  refetchable_fragment_directives.invalid.graphql:30:15
   29 â”‚   queryName: "refetchableFragmentDirectivesQuery"
   30 â”‚   directives: ["@doesNotExit"]
      â”‚               ^^^^^^^^^^^^^^^^
   31 â”‚ ) {


âœ–ï¸Ž When provided, the `directives` argument to `@refetchable` needs to be a list of literal strings. Each string should be a server directive valid on queries. Example: `@refetchable(queryName: "ExampleQuery", directives: ["@owner(name: \"an owner\")"])

  refetchable_fragment_directives.invalid.graphql:14:15
   13 â”‚   queryName: "refetchableFragmentDirectivesQuery"
   14 â”‚   directives: [$var]
      â”‚               ^^^^^^
   15 â”‚ ) {


âœ–ï¸Ž When provided, the `directives` argument to `@refetchable` needs to be a list of literal strings. Each string should be a server directive valid on queries. Example: `@refetchable(queryName: "ExampleQuery", directives: ["@owner(name: \"an owner\")"])

  refetchable_fragment_directives.invalid.graphql:6:15
    5 â”‚   queryName: "refetchableFragmentDirectivesQuery"
    6 â”‚   directives: $var
      â”‚               ^^^^
    7 â”‚ ) {
