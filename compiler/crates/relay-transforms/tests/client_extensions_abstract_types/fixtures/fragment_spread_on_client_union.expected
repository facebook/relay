==================================== INPUT ====================================
query Foo {
  client_type {
    ...MyFragment
  }
}

fragment MyFragment on ClientUnion {
  __typename
}

# %extensions%

extend type Query {
  client_type: ClientType
}

type ClientType {
  name: String
}

type OtherClientType {
  name: String
}

union ClientUnion = ClientType | OtherClientType
==================================== OUTPUT ===================================
fragment MyFragment on ClientUnion {
  __typename
}

query Foo @__ClientExtensionAbstractTypeMetadataDirective
# ClientExtensionAbstractTypeMetadataDirective {
#     abstract_types: [
#         AbstractTypeImplements {
#             name: "__isClientUnion",
#             concrete: [
#                 "ClientType",
#                 "OtherClientType",
#             ],
#         },
#     ],
# }
 {
  client_type {
    ...MyFragment
  }
}
