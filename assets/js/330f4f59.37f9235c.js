"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[44806],{3905:(e,r,n)=>{n.r(r),n.d(r,{MDXContext:()=>u,MDXProvider:()=>d,mdx:()=>f,useMDXComponents:()=>g,withMDXComponents:()=>m});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(){return i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},i.apply(this,arguments)}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=t.createContext({}),m=function(e){return function(r){var n=g(r.components);return t.createElement(e,i({},r,{components:n}))}},g=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},d=function(e){var r=g(e.components);return t.createElement(u.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=g(n),d=a,p=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?t.createElement(p,o(o({ref:r},u),{},{components:n})):t.createElement(p,o({ref:r},u))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},23599:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>m,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>g});var t=n(83117),a=n(80102),i=(n(67294),n(3905)),s=["components"],o={id:"field-arguments",title:"Field Arguments",slug:"/guides/relay-resolvers/field-arguments/",description:"Defining field arguments for resolver fields"},l=void 0,u={unversionedId:"guides/relay-resolvers/field-arguments",id:"version-v20.0.0/guides/relay-resolvers/field-arguments",title:"Field Arguments",description:"Defining field arguments for resolver fields",source:"@site/versioned_docs/version-v20.0.0/guides/relay-resolvers/field-arguments.md",sourceDirName:"guides/relay-resolvers",slug:"/guides/relay-resolvers/field-arguments/",permalink:"/docs/v20.0.0/guides/relay-resolvers/field-arguments/",draft:!1,editUrl:"https://github.com/facebook/relay/tree/main/website/versioned_docs/version-v20.0.0/guides/relay-resolvers/field-arguments.md",tags:[],version:"v20.0.0",frontMatter:{id:"field-arguments",title:"Field Arguments",slug:"/guides/relay-resolvers/field-arguments/",description:"Defining field arguments for resolver fields"},sidebar:"docs",previous:{title:"Return Types",permalink:"/docs/v20.0.0/guides/relay-resolvers/return-types/"},next:{title:"Context",permalink:"/docs/v20.0.0/guides/relay-resolvers/context"}},m={},g=[{value:"Runtime Arguments",id:"runtime-arguments",level:2},{value:"Passing Arguments to your @rootFragment",id:"passing-arguments-to-your-rootfragment",level:2}],d={toc:g};function c(e){var r=e.components,n=(0,a.Z)(e,s);return(0,i.mdx)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,i.mdx)("h2",{id:"runtime-arguments"},"Runtime Arguments"),(0,i.mdx)("p",null,"If your resolver needs access to argument data at runtime, you can simply define arguments in the field definition of your resolver's docblock, and then read the argument as a property on the second argument to your resolver function."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-tsx"},"/**\n * @RelayResolver User.greet(salutation: String!): String\n */\nexport function greet(user: UserModel, args: { salutation: string }): string {\n  return `${args.salutation}, ${user.name}!`;\n}\n")),(0,i.mdx)("p",null,"Consuming this field will require passing the argument to the field in your GraphQL query:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-graphql"},"query MyQuery($salutation: String!) {\n  me {\n    greet(salutation: $salutation)\n  }\n}\n")),(0,i.mdx)("p",null,"This, in turn will require passing the argument when you fetch the query."),(0,i.mdx)("h2",{id:"passing-arguments-to-your-rootfragment"},"Passing Arguments to your @rootFragment"),(0,i.mdx)("p",null,"If you are defining a ",(0,i.mdx)("a",{parentName:"p",href:"/docs/v20.0.0/guides/relay-resolvers/derived-fields/"},"derived resolver")," and one of the fields in its root fragment requires arguments, you must define an explicit fragment argument using ",(0,i.mdx)("a",{parentName:"p",href:"/docs/v20.0.0/api-reference/graphql-and-directives/#argumentdefinitions"},"@argumentDefinitions")," in your fragment definition. Your resolver field will then expect this argument to be passed as a field argument."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-tsx"},'/**\n * @RelayResolver User.fancyGreeting: String\n * @rootFragment UserFancyGreetingFragment\n */\nexport function fancyGreeting(key: UserFancyGreetingFragment$key): string {\n  const user = readFragment(graphql`\n    fragment UserFancyGreetingFragment on User @argumentDefinitions(\n      salutation: {type: "String"},\n    ) {\n      name\n      greet(salutation: $salutation)\n    }\n  `, key);\n  return `${user.name} says ${user.greet}`;\n}\n')),(0,i.mdx)("p",null,"Consuming this field will require passing the argument to the field in your GraphQL query:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-graphql"},"query MyQuery($salutation: String!) {\n  me {\n    fancyGreeting(salutation: $salutation)\n  }\n}\n")))}c.isMDXComponent=!0}}]);