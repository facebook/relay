# typegen_config.use_import_type_syntax = true

fragment Foo_user on User {
  poppy: pop_star_name {
    name
  }
}

fragment PopStarNameResolverFragment_name on User {
  name
  address {
    street
  }
  parents {
    lastName
  }
}

# %extensions%

interface ClientInterface {
  name: String
}

type ClientType implements ClientInterface {
  name: String
  __relay_model_instance: RelayResolverValue @relay_resolver(import_path: "ClientTypeResolver" fragment_name: "ClientType__id", generated_fragment: true, inject_fragment_data: "id", import_name: "ClientType")
}

type ClientTypeWithNestedInterface {
  client_interface: ClientInterface
}

extend type User {
  pop_star_name: ClientInterface @relay_resolver(fragment_name: "PopStarNameResolverFragment_name", import_path: "PopStarNameResolver", has_output_type: true)
  pop_star_game: ClientTypeWithNestedInterface @relay_resolver(fragment_name: "PopStarNameResolverFragment_name", import_path: "PopStarNameResolver", has_output_type: true)
}
