==================================== INPUT ====================================
mutation CommentCreateMutation(
  $input: CommentCreateInput!
  $first: Int
  $orderBy: [String!]
) @raw_response_type {
  commentCreate(input: $input) {
    comment {
      friends(first: $first, orderby: $orderBy) {
        edges {
          node {
            lastName
            ...FriendFragment
          }
        }
      }
    }
  }
}

fragment FriendFragment on User {
  name
  lastName
  feedback {
    ...FeedbackFragment
  }
}

fragment FeedbackFragment on Feedback {
  id
  name
}
==================================== OUTPUT ===================================
import { FragmentRefs } from "relay-runtime";
export type CommentCreateInput = {
  /**
   * The ID of the feedback to comment on
   * @deprecated not used anymore
   */
  client_mutation_id: string;
  feedback?: CommentfeedbackFeedback | null | undefined;
  /**
   * The text of the comment
   */
  feedbackId?: string | null | undefined;
};
export type CommentfeedbackFeedback = {
  comment?: FeedbackcommentComment | null | undefined;
};
export type FeedbackcommentComment = {
  feedback?: CommentfeedbackFeedback | null | undefined;
};
export type CommentCreateMutation$variables = {
  first?: number | null | undefined;
  input: CommentCreateInput;
  orderBy?: ReadonlyArray<string> | null | undefined;
};
export type CommentCreateMutation$data = {
  readonly commentCreate: {
    /**
     * A comment
     */
    readonly comment: {
      readonly friends: {
        readonly edges: ReadonlyArray<{
          readonly node: {
            readonly lastName: string | null | undefined;
            readonly " $fragmentSpreads": FragmentRefs<"FriendFragment">;
          } | null | undefined;
        } | null | undefined> | null | undefined;
      } | null | undefined;
    } | null | undefined;
  } | null | undefined;
};
export type CommentCreateMutation$rawResponse = {
  readonly commentCreate: {
    readonly comment: {
      readonly friends: {
        readonly edges: ReadonlyArray<{
          readonly node: {
            readonly feedback: {
              readonly id: string;
              readonly name: string | null | undefined;
            } | null | undefined;
            readonly id: string;
            readonly lastName: string | null | undefined;
            readonly name: string | null | undefined;
          } | null | undefined;
        } | null | undefined> | null | undefined;
      } | null | undefined;
      readonly id: string;
    } | null | undefined;
  } | null | undefined;
};
export type CommentCreateMutation = {
  rawResponse: CommentCreateMutation$rawResponse;
  response: CommentCreateMutation$data;
  variables: CommentCreateMutation$variables;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type FeedbackFragment$data = {
  readonly id: string;
  readonly name: string | null | undefined;
  readonly " $fragmentType": "FeedbackFragment";
};
export type FeedbackFragment$key = {
  readonly " $data"?: FeedbackFragment$data;
  readonly " $fragmentSpreads": FragmentRefs<"FeedbackFragment">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type FriendFragment$data = {
  readonly feedback: {
    readonly " $fragmentSpreads": FragmentRefs<"FeedbackFragment">;
  } | null | undefined;
  readonly lastName: string | null | undefined;
  /**
   * The user's name (first, last)
   */
  readonly name: string | null | undefined;
  readonly " $fragmentType": "FriendFragment";
};
export type FriendFragment$key = {
  readonly " $data"?: FriendFragment$data;
  readonly " $fragmentSpreads": FragmentRefs<"FriendFragment">;
};
