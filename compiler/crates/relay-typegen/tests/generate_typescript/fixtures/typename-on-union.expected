==================================== INPUT ====================================
fragment TypenameInside on Actor {
  ... on User {
    __typename
    firstName
  }
  ... on Page {
    __typename
    username
  }
}

fragment TypenameOutside on Actor {
  __typename
  ... on User {
    firstName
  }
  ... on Page {
    username
  }
}

fragment TypenameOutsideWithAbstractType on Node {
  __typename
  ... on User {
    firstName
    address {
      street # only here
      city # common
    }
  }
  ... on Actor {
    username
    address {
      city # common
      country # only here
    }
  }
}

fragment TypenameWithoutSpreads on User {
  __typename
  firstName
}

fragment TypenameWithoutSpreadsAbstractType on Node {
  __typename
  id
}

fragment TypenameWithCommonSelections on Actor {
  __typename
  name
  ... on User {
    firstName
  }
  ... on Page {
    username
  }
}

fragment TypenameAlias on Actor {
  _typeAlias: __typename
  ... on User {
    firstName
  }
  ... on Page {
    username
  }
}

fragment TypenameAliases on Actor {
  _typeAlias1: __typename
  _typeAlias2: __typename
  ... on User {
    firstName
  }
  ... on Page {
    username
  }
}
==================================== OUTPUT ===================================
import { FragmentRefs } from "relay-runtime";
export type TypenameAlias$data = {
  readonly _typeAlias: "User";
  readonly firstName: string | null | undefined;
  readonly " $fragmentType": "TypenameAlias";
} | {
  readonly _typeAlias: "Page";
  readonly username: string | null | undefined;
  readonly " $fragmentType": "TypenameAlias";
} | {
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  readonly _typeAlias: "%other";
  readonly " $fragmentType": "TypenameAlias";
};
export type TypenameAlias$key = {
  readonly " $data"?: TypenameAlias$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameAlias">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameAliases$data = {
  readonly _typeAlias1: "User";
  readonly _typeAlias2: "User";
  readonly firstName: string | null | undefined;
  readonly " $fragmentType": "TypenameAliases";
} | {
  readonly _typeAlias1: "Page";
  readonly _typeAlias2: "Page";
  readonly username: string | null | undefined;
  readonly " $fragmentType": "TypenameAliases";
} | {
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  readonly _typeAlias1: "%other";
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  readonly _typeAlias2: "%other";
  readonly " $fragmentType": "TypenameAliases";
};
export type TypenameAliases$key = {
  readonly " $data"?: TypenameAliases$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameAliases">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameInside$data = {
  readonly __typename: "Page";
  readonly username: string | null | undefined;
  readonly " $fragmentType": "TypenameInside";
} | {
  readonly __typename: "User";
  readonly firstName: string | null | undefined;
  readonly " $fragmentType": "TypenameInside";
} | {
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  readonly __typename: "%other";
  readonly " $fragmentType": "TypenameInside";
};
export type TypenameInside$key = {
  readonly " $data"?: TypenameInside$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameInside">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameOutside$data = {
  readonly __typename: "Page";
  readonly username: string | null | undefined;
  readonly " $fragmentType": "TypenameOutside";
} | {
  readonly __typename: "User";
  readonly firstName: string | null | undefined;
  readonly " $fragmentType": "TypenameOutside";
} | {
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  readonly __typename: "%other";
  readonly " $fragmentType": "TypenameOutside";
};
export type TypenameOutside$key = {
  readonly " $data"?: TypenameOutside$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameOutside">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameOutsideWithAbstractType$data = {
  readonly __typename: string;
  readonly address?: {
    readonly city: string | null | undefined;
    readonly country: string | null | undefined;
    readonly street?: string | null | undefined;
  } | null | undefined;
  readonly firstName?: string | null | undefined;
  readonly username?: string | null | undefined;
  readonly " $fragmentType": "TypenameOutsideWithAbstractType";
};
export type TypenameOutsideWithAbstractType$key = {
  readonly " $data"?: TypenameOutsideWithAbstractType$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameOutsideWithAbstractType">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameWithCommonSelections$data = {
  readonly __typename: string;
  readonly firstName?: string | null | undefined;
  readonly name: string | null | undefined;
  readonly username?: string | null | undefined;
  readonly " $fragmentType": "TypenameWithCommonSelections";
};
export type TypenameWithCommonSelections$key = {
  readonly " $data"?: TypenameWithCommonSelections$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameWithCommonSelections">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameWithoutSpreads$data = {
  readonly __typename: "User";
  readonly firstName: string | null | undefined;
  readonly " $fragmentType": "TypenameWithoutSpreads";
};
export type TypenameWithoutSpreads$key = {
  readonly " $data"?: TypenameWithoutSpreads$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameWithoutSpreads">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type TypenameWithoutSpreadsAbstractType$data = {
  readonly __typename: string;
  readonly id: string;
  readonly " $fragmentType": "TypenameWithoutSpreadsAbstractType";
};
export type TypenameWithoutSpreadsAbstractType$key = {
  readonly " $data"?: TypenameWithoutSpreadsAbstractType$data;
  readonly " $fragmentSpreads": FragmentRefs<"TypenameWithoutSpreadsAbstractType">;
};
