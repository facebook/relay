==================================== INPUT ====================================
fragment NameRendererFragment on Persona {
  id
  basicUser {
    ...ClientUser_Fragment @module(name: "ClientUser.react")
    ...SpecialUser_Fragment @module(name: "SpecialUser.react")
  }
}

fragment ClientUser_Fragment on ClientUser {
  id
  userInfo {
    data
  }
}

fragment SpecialUser_Fragment on SpecialUser {
  id
  userInfo {
    data
  }
}

%extensions%
union BasicUser = ClientUser | SpecialUser

interface UserInfo {
    data: String
}

type Persona implements Named {
  id: ID!
  name: String
  basicUser: BasicUser
}

type ClientUser @__RelayResolverModel {
  id: ID!
  userInfo: UserInfo @relay_resolver(fragment_name: "ClientUser_Fragment", import_path: "ClientUserInfoResolver")
}

type SpecialUser @__RelayResolverModel {
  id: ID!
  userInfo: UserInfo @relay_resolver(fragment_name: "SpecialUser_Fragment", import_path: "SpecialUserInfoResolver")
}
==================================== OUTPUT ===================================
fragment ClientUser_Fragment on ClientUser {
  id
  userInfo {
    data
  }
}

fragment NameRendererFragment on Persona {
  id
  basicUser {
    ... on ClientUser {
      ... on ClientUser @__ModuleMetadata
      # ModuleMetadata {
      #     location: client-3D-module-on-union-parent-type.graphql:89:96,
      #     key: "NameRendererFragment",
      #     module_id: "NameRendererFragment.basicUser",
      #     module_name: "ClientUser.react",
      #     source_document_name: FragmentDefinitionName(
      #         FragmentDefinitionName(
      #             "NameRendererFragment",
      #         ),
      #     ),
      #     read_time_resolvers: true,
      #     fragment_name: FragmentDefinitionName(
      #         "ClientUser_Fragment",
      #     ),
      #     fragment_source_location: client-3D-module-on-union-parent-type.graphql:202:221,
      #     no_inline: false,
      # }
       {
        ...ClientUser_Fragment
      }
    }
    ... on SpecialUser {
      ... on SpecialUser @__ModuleMetadata
      # ModuleMetadata {
      #     location: client-3D-module-on-union-parent-type.graphql:151:158,
      #     key: "NameRendererFragment",
      #     module_id: "NameRendererFragment.basicUser",
      #     module_name: "SpecialUser.react",
      #     source_document_name: FragmentDefinitionName(
      #         FragmentDefinitionName(
      #             "NameRendererFragment",
      #         ),
      #     ),
      #     read_time_resolvers: true,
      #     fragment_name: FragmentDefinitionName(
      #         "SpecialUser_Fragment",
      #     ),
      #     fragment_source_location: client-3D-module-on-union-parent-type.graphql:281:301,
      #     no_inline: false,
      # }
       {
        ...SpecialUser_Fragment
      }
    }
  }
}

fragment SpecialUser_Fragment on SpecialUser {
  id
  userInfo {
    data
  }
}
