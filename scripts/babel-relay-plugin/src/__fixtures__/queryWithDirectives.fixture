Input:
var Relay = require('react-relay');
var x = Relay.QL`
  query {
    node(id: 123) @include(if: $foo) {
      ... on User @include(if: $bar) {
        name @skip(if: $baz)
      }
    }
  }
`;

Output:
var Relay = require('react-relay');
var x = (function () {
  var GraphQL = Relay.QL.__GraphQL;
  return new GraphQL.Query('node', new GraphQL.CallValue(123), [new GraphQL.Field('id', null, null, null, null, null, {
    parentType: 'Node',
    generated: true,
    requisite: true
  }), new GraphQL.Field('__typename', null, null, null, null, null, {
    parentType: 'Node',
    generated: true,
    requisite: true
  })], [new GraphQL.QueryFragment('User', 'User', [new GraphQL.Field('name', null, null, null, null, null, {
    parentType: 'User'
  }, [{
    name: 'skip',
    arguments: [{
      name: 'if',
      value: new GraphQL.CallVariable('baz')
    }]
  }]), new GraphQL.Field('id', null, null, null, null, null, {
    parentType: 'User',
    generated: true,
    requisite: true
  })], null, null, [{
    name: 'include',
    arguments: [{
      name: 'if',
      value: new GraphQL.CallVariable('bar')
    }]
  }])], {
    identifyingArgName: 'id'
  }, 'QueryWithDirectives', [{
    name: 'include',
    arguments: [{
      name: 'if',
      value: new GraphQL.CallVariable('foo')
    }]
  }]);
})();