Input:
var foo = Relay.QL`
  query Args {
    node(id: 123) {
      ... on User {
        friends(
          first: 10
          orderby: "Name"
          find: "cursor1"
          isViewerFriend: true
          gender: MALE
        ) {
          edges {
            node {
              id
              firstName(if: true, unless: false)
            }
          }
        }
      }
    }
  }
`;

Output:
"use strict";

var foo = function () {
  return {
    calls: [{
      kind: "Call",
      metadata: {
        type: "ID!"
      },
      name: "id",
      value: {
        kind: "CallValue",
        callValue: 123
      }
    }],
    children: [{
      fieldName: "id",
      kind: "Field",
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: "String"
    }, {
      fieldName: "__typename",
      kind: "Field",
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: "String"
    }, {
      children: [{
        calls: [{
          kind: "Call",
          metadata: {
            type: "Int"
          },
          name: "first",
          value: {
            kind: "CallValue",
            callValue: 10
          }
        }, {
          kind: "Call",
          metadata: {},
          name: "orderby",
          value: {
            kind: "CallValue",
            callValue: "Name"
          }
        }, {
          kind: "Call",
          metadata: {},
          name: "find",
          value: {
            kind: "CallValue",
            callValue: "cursor1"
          }
        }, {
          kind: "Call",
          metadata: {},
          name: "isViewerFriend",
          value: {
            kind: "CallValue",
            callValue: true
          }
        }, {
          kind: "Call",
          metadata: {
            type: "Gender"
          },
          name: "gender",
          value: {
            kind: "CallValue",
            callValue: "MALE"
          }
        }],
        children: [{
          children: [{
            children: [{
              fieldName: "id",
              kind: "Field",
              metadata: {
                isRequisite: true
              },
              type: "String"
            }, {
              calls: [{
                kind: "Call",
                metadata: {},
                name: "if",
                value: {
                  kind: "CallValue",
                  callValue: true
                }
              }, {
                kind: "Call",
                metadata: {},
                name: "unless",
                value: {
                  kind: "CallValue",
                  callValue: false
                }
              }],
              fieldName: "firstName",
              kind: "Field",
              metadata: {},
              type: "String"
            }],
            fieldName: "node",
            kind: "Field",
            metadata: {
              canHaveSubselections: true,
              inferredRootCallName: "node",
              inferredPrimaryKey: "id",
              isRequisite: true
            },
            type: "User"
          }, {
            fieldName: "cursor",
            kind: "Field",
            metadata: {
              isGenerated: true,
              isRequisite: true
            },
            type: "String"
          }],
          fieldName: "edges",
          kind: "Field",
          metadata: {
            canHaveSubselections: true,
            isPlural: true
          },
          type: "UserConnectionEdge"
        }, {
          children: [{
            fieldName: "hasNextPage",
            kind: "Field",
            metadata: {
              isGenerated: true,
              isRequisite: true
            },
            type: "Boolean"
          }, {
            fieldName: "hasPreviousPage",
            kind: "Field",
            metadata: {
              isGenerated: true,
              isRequisite: true
            },
            type: "Boolean"
          }],
          fieldName: "pageInfo",
          kind: "Field",
          metadata: {
            canHaveSubselections: true,
            isGenerated: true,
            isRequisite: true
          },
          type: "PageInfo"
        }],
        fieldName: "friends",
        kind: "Field",
        metadata: {
          canHaveSubselections: true,
          isConnection: true,
          isFindable: true
        },
        type: "UserConnection"
      }, {
        fieldName: "id",
        kind: "Field",
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: "String"
      }],
      id: Relay.QL.__id(),
      kind: "Fragment",
      metadata: {},
      name: "User",
      type: "User"
    }],
    fieldName: "node",
    kind: "Query",
    metadata: {
      isAbstract: true,
      identifyingArgName: "id",
      identifyingArgType: "ID!"
    },
    name: "Args",
    type: "Node"
  };
}();
