/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule Compat
 */

'use strict';

const graphql = require('graphql');
const CompatProfilePic = require('CompatProfilePic');

const CompatViewerQuery = {
  modern: function () {
    return require('CompatViewerQuery.graphql');
  },
  classic: function (RelayQL_GENERATED) {
    const CompatProfilePic_user = CompatProfilePic.getFragment('user');
    return {
      kind: 'OperationDefinition',
      argumentDefinitions: [{
        defaultValue: null,
        kind: 'LocalArgument',
        name: 'id'
      }, {
        defaultValue: 1.5,
        kind: 'LocalArgument',
        name: 'scale'
      }],
      name: 'CompatViewerQuery',
      operation: 'query',
      node: function () {
        return {
          children: [{
            calls: [{
              kind: 'Call',
              metadata: {},
              name: 'id',
              value: {
                kind: 'CallVariable',
                callVariableName: 'id'
              }
            }],
            children: [{
              fieldName: 'id',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'ID'
            }, {
              fieldName: '__typename',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'String'
            }, {
              children: [].concat.apply([], [{
                fieldName: 'id',
                kind: 'Field',
                metadata: {
                  isRequisite: true
                },
                type: 'ID'
              }, RelayQL_GENERATED.__frag(CompatProfilePic_user)]),
              id: RelayQL_GENERATED.__id(),
              kind: 'Fragment',
              metadata: {},
              name: 'User',
              type: 'User'
            }],
            fieldName: 'node',
            kind: 'Field',
            metadata: {
              canHaveSubselections: true,
              inferredRootCallName: 'node',
              inferredPrimaryKey: 'id',
              isAbstract: true
            },
            type: 'Node'
          }],
          id: RelayQL_GENERATED.__id(),
          kind: 'Fragment',
          metadata: {},
          name: 'CompatViewerQuery',
          type: 'Query'
        };
      }()
    };
  }
};
