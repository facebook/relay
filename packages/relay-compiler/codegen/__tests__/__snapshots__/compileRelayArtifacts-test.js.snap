// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compileRelayArtifacts matches expected output: client-conditions.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id
  name @include(if: $shouldInclude)

  client_nickname @include(if: $shouldInclude)

  ... on ClientNamed @include(if: $shouldInclude) {
    client_name
    client_name_2
  }

  ... on Actor @include(if: $shouldInclude) {
    client_actor_field
    address {
      city
      client_street_address_field(arg: $arg) # nested client field
    }
  }
}

extend type User {
  client_nickname: String
  client_actor_field: String
}

extend type StreetAddress {
  client_street_address_field(arg: String): String
}

extend interface Actor {
  client_actor_field: String
}

extend type Page {
  client_actor_field: String
}

interface ClientNamed {
  client_name: String
  client_name_2: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "shouldInclude",
      "type": "Boolean!"
    },
    {
      "kind": "RootArgument",
      "name": "arg",
      "type": "String"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "Condition",
      "passingValue": true,
      "condition": "shouldInclude",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "address",
          "storageKey": null,
          "args": null,
          "concreteType": "StreetAddress",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "city",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ClientExtension",
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "client_street_address_field",
                  "args": [
                    {
                      "kind": "Variable",
                      "name": "arg",
                      "variableName": "arg"
                    }
                  ],
                  "storageKey": null
                }
              ]
            }
          ]
        },
        {
          "kind": "ClientExtension",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_nickname",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name_2",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_actor_field",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-fields-in-inline-fragments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  ... on Actor {
    client_actor_field
    address {
      city
      client_street_address_field(arg: $arg) # nested client field
    }
  }
}

extend type StreetAddress {
  client_street_address_field(arg: String): String
}

extend type User {
  client_actor_field: String
}

extend interface Actor {
  client_actor_field: String
}

extend type Page {
  client_actor_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "arg",
      "type": "String"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "address",
      "storageKey": null,
      "args": null,
      "concreteType": "StreetAddress",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "city",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ClientExtension",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_street_address_field",
              "args": [
                {
                  "kind": "Variable",
                  "name": "arg",
                  "variableName": "arg"
                }
              ],
              "storageKey": null
            }
          ]
        }
      ]
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_actor_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-fields-of-client-type.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  client_foo {
    client_name
    profile_picture(scale: 2) {
      uri
    }
  }
}

extend type User {
  client_foo: Foo
}

type Foo {
  client_name: String
  profile_picture(scale: Float): Image
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_foo",
          "storageKey": null,
          "args": null,
          "concreteType": "Foo",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "profile_picture",
              "storageKey": "profile_picture(scale:2)",
              "args": [
                {
                  "kind": "Literal",
                  "name": "scale",
                  "value": 2
                }
              ],
              "concreteType": "Image",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "uri",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-fields-on-roots.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query FooQuery($id: ID!, $arg: String) {
  client_root_field

  node(id: $id) {
    id
  }
}

mutation FooMutation($input: UnfriendInput) {
  client_root_field
  unfriend(input: $input) {
    clientMutationId
  }
}

subscription FooSubscription($input: FeedbackLikeInput) {
  client_root_field
  feedbackLikeSubscribe(input: $input) {
    clientSubscriptionId
  }
}

extend type Query {
  client_root_field: String
}

extend type Mutation {
  client_root_field: String
}

extend type Subscription {
  client_root_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "arg",
        "type": "String",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "arg",
        "type": "String",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query FooQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
  }
}


{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooMutation",
    "type": "Mutation",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "UnfriendInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "unfriend",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "UnfriendResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientMutationId",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooMutation",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "UnfriendInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "unfriend",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "UnfriendResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientMutationId",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

mutation FooMutation(
  $input: UnfriendInput
) {
  unfriend(input: $input) {
    clientMutationId
  }
}


{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooSubscription",
    "type": "Subscription",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "FeedbackLikeInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "feedbackLikeSubscribe",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "FeedbackLikeResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientSubscriptionId",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooSubscription",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "input",
        "type": "FeedbackLikeInput",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "feedbackLikeSubscribe",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "input",
            "variableName": "input"
          }
        ],
        "concreteType": "FeedbackLikeResponsePayload",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "clientSubscriptionId",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "ClientExtension",
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "client_root_field",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

subscription FooSubscription(
  $input: FeedbackLikeInput
) {
  feedbackLikeSubscribe(input: $input) {
    clientSubscriptionId
  }
}

`;

exports[`compileRelayArtifacts matches expected output: client-fragment-spreads.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  ...ClientTypeFragment # include fragment on client-only type
}

fragment ClientTypeFragment on ClientType {
  client_field
}

type ClientType {
  client_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "FragmentSpread",
          "name": "ClientTypeFragment",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ClientTypeFragment",
  "type": "ClientType",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-fragment-spreads-in-query.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query FooQuery($id: ID!) {
  node(id: $id) {
    ...Foo_user
  }
}

fragment Foo_user on User {
  id

  ...ClientTypeFragment
}

fragment ClientTypeFragment on ClientType {
  client_field
}

type ClientType {
  client_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "Foo_user",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "InlineFragment",
                    "type": "ClientType",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "client_field",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query FooQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...Foo_user
    id
  }
}

fragment Foo_user on User {
  id
}


{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "FragmentSpread",
          "name": "ClientTypeFragment",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ClientTypeFragment",
  "type": "ClientType",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-inline-fragments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  ... on ClientNamed {
    client_name
  }
}

interface ClientNamed {
  client_name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "ClientNamed",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-inline-fragments-in-query.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query FooQuery($id: ID!) {
  node(id: $id) {
    ...Foo_user
  }
}

fragment Foo_user on User {
  id

  ... on ClientNamed {
    client_name
  }
}

interface ClientNamed {
  client_name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "Foo_user",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "InlineFragment",
                    "type": "ClientNamed",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "client_name",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query FooQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...Foo_user
    id
  }
}

fragment Foo_user on User {
  id
}


{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "ClientNamed",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-linked-fields.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  client_friends {
    edges {
      client_friend_edge_field # nested client field, should not create new ClientExtension node
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

extend type User {
  client_friends: FriendsConnection
}

extend type FriendsEdge {
  client_friend_edge_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "client_friend_edge_field",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: client-scalar-fields.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id

  client_nickname # client field
  friends {
    count
    client_friends_connection_field # nested client field
  }
}

extend type User {
  client_nickname: String
}

extend type FriendsConnection {
  client_friends_connection_field: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "friends",
      "storageKey": null,
      "args": null,
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "count",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ClientExtension",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_friends_connection_field",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_nickname",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: complex-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query TestQuery($date: String) {
  items(filter: {date: $date}) {
    date
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

ReaderCodeGenerator: Complex argument values (Lists or InputObjects with nested variables) are not supported.

Source: GraphQL request (3:17)
2: query TestQuery($date: String) {
3:   items(filter: {date: $date}) {
                   ^
4:     date

`;

exports[`compileRelayArtifacts matches expected output: connection.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery($id: ID!) {
  node(id: $id) {
    id
    ... on Story {
      comments(first: 10) @connection(key: "NodeQuery_comments") {
        edges {
          node {
            actor {
              name
              friends(first: 10) @connection(key: "NodeQuery_friends") {
                edges {
                  node {
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "comments",
                "name": "__NodeQuery_comments_connection",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "LinkedField",
                                "alias": "friends",
                                "name": "__NodeQuery_friends_connection",
                                "storageKey": null,
                                "args": null,
                                "concreteType": "FriendsConnection",
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "edges",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "FriendsEdge",
                                    "plural": true,
                                    "selections": [
                                      {
                                        "kind": "LinkedField",
                                        "alias": null,
                                        "name": "node",
                                        "storageKey": null,
                                        "args": null,
                                        "concreteType": "User",
                                        "plural": false,
                                        "selections": [
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "name",
                                            "args": null,
                                            "storageKey": null
                                          },
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "__typename",
                                            "args": null,
                                            "storageKey": null
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "cursor",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "pageInfo",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "PageInfo",
                                    "plural": false,
                                    "selections": [
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "endCursor",
                                        "args": null,
                                        "storageKey": null
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "hasNextPage",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "LinkedField",
                                "alias": null,
                                "name": "friends",
                                "storageKey": "friends(first:10)",
                                "args": [
                                  {
                                    "kind": "Literal",
                                    "name": "first",
                                    "value": 10
                                  }
                                ],
                                "concreteType": "FriendsConnection",
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "edges",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "FriendsEdge",
                                    "plural": true,
                                    "selections": [
                                      {
                                        "kind": "LinkedField",
                                        "alias": null,
                                        "name": "node",
                                        "storageKey": null,
                                        "args": null,
                                        "concreteType": "User",
                                        "plural": false,
                                        "selections": [
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "name",
                                            "args": null,
                                            "storageKey": null
                                          },
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "id",
                                            "args": null,
                                            "storageKey": null
                                          },
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "__typename",
                                            "args": null,
                                            "storageKey": null
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "cursor",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "pageInfo",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "PageInfo",
                                    "plural": false,
                                    "selections": [
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "endCursor",
                                        "args": null,
                                        "storageKey": null
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "hasNextPage",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "LinkedHandle",
                                "alias": null,
                                "name": "friends",
                                "args": [
                                  {
                                    "kind": "Literal",
                                    "name": "first",
                                    "value": 10
                                  }
                                ],
                                "handle": "connection",
                                "key": "NodeQuery_friends",
                                "filters": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "handle": "connection",
                "key": "NodeQuery_comments",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ... on Story {
      comments(first: 10) {
        edges {
          node {
            actor {
              __typename
              name
              friends(first: 10) {
                edges {
                  node {
                    name
                    id
                    __typename
                  }
                  cursor
                }
                pageInfo {
                  endCursor
                  hasNextPage
                }
              }
              id
            }
            id
            __typename
          }
          cursor
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: connection-resolver-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithConnectionField($id: ID!) {
  feedback: node(id: $id) {
    ...FeedbackComments_feedback
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) @connection_resolver(label: "FeedbackComments_feedback") {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithConnectionField",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "feedback",
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "FeedbackComments_feedback",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithConnectionField",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "feedback",
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Feedback",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "Connection",
                    "label": "FeedbackComments_feedback",
                    "name": "comments",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "first",
                        "value": 10
                      }
                    ],
                    "edges": {
                      "kind": "LinkedField",
                      "alias": null,
                      "name": "edges",
                      "storageKey": null,
                      "args": null,
                      "concreteType": "CommentsEdge",
                      "plural": true,
                      "selections": [
                        {
                          "kind": "LinkedField",
                          "alias": null,
                          "name": "node",
                          "storageKey": null,
                          "args": null,
                          "concreteType": "Comment",
                          "plural": false,
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "id",
                              "args": null,
                              "storageKey": null
                            },
                            {
                              "kind": "ClientExtension",
                              "selections": [
                                {
                                  "kind": "ScalarField",
                                  "alias": null,
                                  "name": "__id",
                                  "args": null,
                                  "storageKey": null
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "kind": "ClientExtension",
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "__id",
                              "args": null,
                              "storageKey": null
                            }
                          ]
                        }
                      ]
                    },
                    "pageInfo": {
                      "kind": "LinkedField",
                      "alias": null,
                      "name": "pageInfo",
                      "storageKey": null,
                      "args": null,
                      "concreteType": "PageInfo",
                      "plural": false,
                      "selections": [
                        {
                          "kind": "ScalarField",
                          "alias": null,
                          "name": "hasNextPage",
                          "args": null,
                          "storageKey": null
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithConnectionField(
  $id: ID!
) {
  feedback: node(id: $id) {
    __typename
    ...FeedbackComments_feedback
    id
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}


{
  "kind": "Fragment",
  "name": "FeedbackComments_feedback",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "comments",
      "storageKey": null,
      "args": null,
      "concreteType": "CommentsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "Connection",
          "label": "FeedbackComments_feedback",
          "name": "comments",
          "args": [
            {
              "kind": "Literal",
              "name": "first",
              "value": 10
            }
          ],
          "edges": {
            "kind": "LinkedField",
            "alias": null,
            "name": "edges",
            "storageKey": null,
            "args": null,
            "concreteType": "CommentsEdge",
            "plural": true,
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "node",
                "storageKey": null,
                "args": null,
                "concreteType": "Comment",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "id",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ClientExtension",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__id",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__id",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          },
          "pageInfo": {
            "kind": "LinkedField",
            "alias": null,
            "name": "pageInfo",
            "storageKey": null,
            "args": null,
            "concreteType": "PageInfo",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "hasNextPage",
                "args": null,
                "storageKey": null
              }
            ]
          }
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: connection-resolver-field-different-label.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithConnectionField($id: ID!) {
  feedback: node(id: $id) {
    ...FeedbackComments_feedback
    ...FeedbackTopComments_feedback
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10)
    @connection_resolver(label: "FeedbackComments_feedback$one") {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

fragment FeedbackTopComments_feedback on Feedback {
  comments(first: 10)
    @connection_resolver(label: "FeedbackTopComments_feedback$two") {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithConnectionField",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "feedback",
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "FeedbackComments_feedback",
            "args": null
          },
          {
            "kind": "FragmentSpread",
            "name": "FeedbackTopComments_feedback",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithConnectionField",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "feedback",
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Feedback",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "Connection",
                    "label": "FeedbackComments_feedback$one",
                    "name": "comments",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "first",
                        "value": 10
                      }
                    ],
                    "edges": {
                      "kind": "LinkedField",
                      "alias": null,
                      "name": "edges",
                      "storageKey": null,
                      "args": null,
                      "concreteType": "CommentsEdge",
                      "plural": true,
                      "selections": [
                        {
                          "kind": "LinkedField",
                          "alias": null,
                          "name": "node",
                          "storageKey": null,
                          "args": null,
                          "concreteType": "Comment",
                          "plural": false,
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "id",
                              "args": null,
                              "storageKey": null
                            },
                            {
                              "kind": "ClientExtension",
                              "selections": [
                                {
                                  "kind": "ScalarField",
                                  "alias": null,
                                  "name": "__id",
                                  "args": null,
                                  "storageKey": null
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "kind": "ClientExtension",
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "__id",
                              "args": null,
                              "storageKey": null
                            }
                          ]
                        }
                      ]
                    },
                    "pageInfo": {
                      "kind": "LinkedField",
                      "alias": null,
                      "name": "pageInfo",
                      "storageKey": null,
                      "args": null,
                      "concreteType": "PageInfo",
                      "plural": false,
                      "selections": [
                        {
                          "kind": "ScalarField",
                          "alias": null,
                          "name": "hasNextPage",
                          "args": null,
                          "storageKey": null
                        }
                      ]
                    }
                  },
                  {
                    "kind": "Connection",
                    "label": "FeedbackTopComments_feedback$two",
                    "name": "comments",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "first",
                        "value": 10
                      }
                    ],
                    "edges": {
                      "kind": "LinkedField",
                      "alias": null,
                      "name": "edges",
                      "storageKey": null,
                      "args": null,
                      "concreteType": "CommentsEdge",
                      "plural": true,
                      "selections": [
                        {
                          "kind": "LinkedField",
                          "alias": null,
                          "name": "node",
                          "storageKey": null,
                          "args": null,
                          "concreteType": "Comment",
                          "plural": false,
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "id",
                              "args": null,
                              "storageKey": null
                            },
                            {
                              "kind": "ClientExtension",
                              "selections": [
                                {
                                  "kind": "ScalarField",
                                  "alias": null,
                                  "name": "__id",
                                  "args": null,
                                  "storageKey": null
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "kind": "ClientExtension",
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "__id",
                              "args": null,
                              "storageKey": null
                            }
                          ]
                        }
                      ]
                    },
                    "pageInfo": {
                      "kind": "LinkedField",
                      "alias": null,
                      "name": "pageInfo",
                      "storageKey": null,
                      "args": null,
                      "concreteType": "PageInfo",
                      "plural": false,
                      "selections": [
                        {
                          "kind": "ScalarField",
                          "alias": null,
                          "name": "hasNextPage",
                          "args": null,
                          "storageKey": null
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithConnectionField(
  $id: ID!
) {
  feedback: node(id: $id) {
    __typename
    ...FeedbackComments_feedback
    ...FeedbackTopComments_feedback
    id
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

fragment FeedbackTopComments_feedback on Feedback {
  comments(first: 10) {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}


{
  "kind": "Fragment",
  "name": "FeedbackComments_feedback",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "comments",
      "storageKey": null,
      "args": null,
      "concreteType": "CommentsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "Connection",
          "label": "FeedbackComments_feedback$one",
          "name": "comments",
          "args": [
            {
              "kind": "Literal",
              "name": "first",
              "value": 10
            }
          ],
          "edges": {
            "kind": "LinkedField",
            "alias": null,
            "name": "edges",
            "storageKey": null,
            "args": null,
            "concreteType": "CommentsEdge",
            "plural": true,
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "node",
                "storageKey": null,
                "args": null,
                "concreteType": "Comment",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "id",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ClientExtension",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__id",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__id",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          },
          "pageInfo": {
            "kind": "LinkedField",
            "alias": null,
            "name": "pageInfo",
            "storageKey": null,
            "args": null,
            "concreteType": "PageInfo",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "hasNextPage",
                "args": null,
                "storageKey": null
              }
            ]
          }
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FeedbackTopComments_feedback",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "comments",
      "storageKey": null,
      "args": null,
      "concreteType": "CommentsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "Connection",
          "label": "FeedbackTopComments_feedback$two",
          "name": "comments",
          "args": [
            {
              "kind": "Literal",
              "name": "first",
              "value": 10
            }
          ],
          "edges": {
            "kind": "LinkedField",
            "alias": null,
            "name": "edges",
            "storageKey": null,
            "args": null,
            "concreteType": "CommentsEdge",
            "plural": true,
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "node",
                "storageKey": null,
                "args": null,
                "concreteType": "Comment",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "id",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ClientExtension",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__id",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__id",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          },
          "pageInfo": {
            "kind": "LinkedField",
            "alias": null,
            "name": "pageInfo",
            "storageKey": null,
            "args": null,
            "concreteType": "PageInfo",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "hasNextPage",
                "args": null,
                "storageKey": null
              }
            ]
          }
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: connection-resolver-field-duplicate-explicit-label.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query QueryWithConnectionField($id: ID!) {
  feedback: node(id: $id) {
    ...FeedbackComments_feedback
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) @connection_resolver(label: "FeedbackComments_feedback") {
    edges {
      # error: plural
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
  ... {
    comments(first: 10)
      @connection_resolver(label: "FeedbackComments_feedback") {
      #error: same label
      count
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Invalid use of @connection_resolver, the provided label is not unique. Specify a unique 'label' as a literal string.
  
  Source: GraphQL request (22:28)
  21:     comments(first: 10)
  22:       @connection_resolver(label: "FeedbackComments_feedback") {
                                 ^
  23:       #error: same label
  
  Source: GraphQL request (9:44)
   8: fragment FeedbackComments_feedback on Feedback {
   9:   comments(first: 10) @connection_resolver(label: "FeedbackComments_feedback") {
                                                 ^
  10:     edges {
  
`;

exports[`compileRelayArtifacts matches expected output: connection-resolver-field-missing-label.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query QueryWithConnectionField($id: ID!) {
  feedback: node(id: $id) {
    ...FeedbackComments_feedback
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) @connection_resolver {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Invalid usage of @connection_resolver, expected a static string 'label'. Labels may be the document name ('FeedbackComments_feedback') or be prefixed with the document name ('FeedbackComments_feedback$<name>')
  
  Source: GraphQL request (9:23)
   8: fragment FeedbackComments_feedback on Feedback {
   9:   comments(first: 10) @connection_resolver {
                            ^
  10:     edges {
  
`;

exports[`compileRelayArtifacts matches expected output: connection-resolver-field-on-plural.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query QueryWithConnectionField($id: ID!) {
  feedback: node(id: $id) {
    ...FeedbackComments_feedback
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) {
    edges @connection_resolver(label: "FeedbackComments_feedback") {
      # error: plural
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- @connection_resolver fields must return a single value, not a list, found '[CommentsEdge]'
  
  Source: GraphQL request (10:5)
   9:   comments(first: 10) {
  10:     edges @connection_resolver(label: "FeedbackComments_feedback") {
          ^
  11:       # error: plural
  
`;

exports[`compileRelayArtifacts matches expected output: connection-resolver-field-on-scalar.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query QueryWithConnectionField($id: ID!) {
  feedback: node(id: $id) {
    ...FeedbackComments_feedback
  }
}

fragment FeedbackComments_feedback on Feedback {
  id @connection_resolver(label: "FeedbackComments_feedback") # error: scalar
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- The @connection_resolver direction is not supported on scalar fields, only fields returning an object/interface/union
  
  Source: GraphQL request (9:6)
   8: fragment FeedbackComments_feedback on Feedback {
   9:   id @connection_resolver(label: "FeedbackComments_feedback") # error: scalar
           ^
  10: }
  
`;

exports[`compileRelayArtifacts matches expected output: connection-with-aliased-edges-pageInfo.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery($id: ID!) {
  node(id: $id) {
    id
    ... on Story {
      comments(first: 10) @connection(key: "NodeQuery_comments") {
        commentEdges: edges {
          node {
            actor {
              name
            }
          }
        }
        commentPageInfo: pageInfo {
          hasNextPage
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "comments",
                "name": "__NodeQuery_comments_connection",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": "commentEdges",
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "commentPageInfo",
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": "commentEdges",
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "commentPageInfo",
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "handle": "connection",
                "key": "NodeQuery_comments",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ... on Story {
      comments(first: 10) {
        commentEdges: edges {
          node {
            actor {
              __typename
              name
              id
            }
            id
          }
        }
        commentPageInfo: pageInfo {
          hasNextPage
        }
        edges {
          cursor
          node {
            __typename
            id
          }
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: connection-with-dynamic-key.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query FeedbackQuery($id: ID!, $commentsKey: String) {
  node(id: $id) {
    ...FeedbackFragment
  }
}

query PaginationQuery(
  $id: ID!
  $commentsKey: String
  $count: Int!
  $cursor: ID!
) {
  node(id: $id) {
    ...FeedbackFragment @arguments(count: $count, cursor: $cursor)
  }
}

fragment FeedbackFragment on Feedback
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 2}
    cursor: {type: "ID"}
  ) {
  id
  comments(after: $cursor, first: $count, orderby: "date")
    @connection(
      key: "FeedbackFragment_comments"
      dynamicKey_UNSTABLE: $commentsKey
      filters: ["orderby"]
    ) {
    edges {
      node {
        id
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FeedbackQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "commentsKey",
        "type": "String",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "FeedbackFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FeedbackQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "commentsKey",
        "type": "String",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Feedback",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:2,orderby:\\"date\\")",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 2
                  },
                  {
                    "kind": "Literal",
                    "name": "orderby",
                    "value": "date"
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 2
                  },
                  {
                    "kind": "Literal",
                    "name": "orderby",
                    "value": "date"
                  }
                ],
                "handle": "connection",
                "key": "FeedbackFragment_comments",
                "filters": [
                  "orderby"
                ],
                "dynamicKey": {
                  "kind": "Variable",
                  "name": "__dynamicKey",
                  "variableName": "commentsKey"
                }
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query FeedbackQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...FeedbackFragment
    id
  }
}

fragment FeedbackFragment on Feedback {
  id
  comments(first: 2, orderby: "date") {
    edges {
      node {
        id
        __typename
      }
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}


{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "PaginationQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "commentsKey",
        "type": "String",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "FeedbackFragment",
            "args": [
              {
                "kind": "Variable",
                "name": "count",
                "variableName": "count"
              },
              {
                "kind": "Variable",
                "name": "cursor",
                "variableName": "cursor"
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "PaginationQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "commentsKey",
        "type": "String",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Feedback",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  },
                  {
                    "kind": "Literal",
                    "name": "orderby",
                    "value": "date"
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  },
                  {
                    "kind": "Literal",
                    "name": "orderby",
                    "value": "date"
                  }
                ],
                "handle": "connection",
                "key": "FeedbackFragment_comments",
                "filters": [
                  "orderby"
                ],
                "dynamicKey": {
                  "kind": "Variable",
                  "name": "__dynamicKey",
                  "variableName": "commentsKey"
                }
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query PaginationQuery(
  $id: ID!
  $count: Int!
  $cursor: ID!
) {
  node(id: $id) {
    __typename
    ...FeedbackFragment_1G22uz
    id
  }
}

fragment FeedbackFragment_1G22uz on Feedback {
  id
  comments(after: $cursor, first: $count, orderby: "date") {
    edges {
      node {
        id
        __typename
      }
      cursor
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}


{
  "kind": "Fragment",
  "name": "FeedbackFragment",
  "type": "Feedback",
  "metadata": {
    "connection": [
      {
        "count": "count",
        "cursor": "cursor",
        "direction": "forward",
        "path": [
          "comments"
        ]
      }
    ]
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "count",
      "type": "Int",
      "defaultValue": 2
    },
    {
      "kind": "LocalArgument",
      "name": "cursor",
      "type": "ID",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "commentsKey",
      "type": "String"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": "comments",
      "name": "__FeedbackFragment_comments_connection",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "__dynamicKey",
          "variableName": "commentsKey"
        },
        {
          "kind": "Literal",
          "name": "orderby",
          "value": "date"
        }
      ],
      "concreteType": "CommentsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "edges",
          "storageKey": null,
          "args": null,
          "concreteType": "CommentsEdge",
          "plural": true,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "node",
              "storageKey": null,
              "args": null,
              "concreteType": "Comment",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "id",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "__typename",
                  "args": null,
                  "storageKey": null
                }
              ]
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "cursor",
              "args": null,
              "storageKey": null
            }
          ]
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "pageInfo",
          "storageKey": null,
          "args": null,
          "concreteType": "PageInfo",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "endCursor",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "hasNextPage",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: connection-with-dynamic-key-missing-variable-definition.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query FeedbackQuery($id: ID!) {
  node(id: $id) {
    ...FeedbackFragment
  }
}

query PaginationQuery($id: ID!, $count: Int!, $cursor: ID!) {
  node(id: $id) {
    ...FeedbackFragment @arguments(count: $count, cursor: $cursor)
  }
}

fragment FeedbackFragment on Feedback
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 2}
    cursor: {type: "ID"}
  ) {
  id
  comments(after: $cursor, first: $count, orderby: "date")
    @connection(
      key: "FeedbackFragment_comments"
      dynamicKey_UNSTABLE: $commentsKey
      filters: ["orderby"]
    ) {
    edges {
      node {
        id
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 2 error(s):
- Operation 'FeedbackQuery' references undefined variable(s):
  - $commentsKey: String.
  
  Source (derived): GraphQL request (23:28)
  22:       key: "FeedbackFragment_comments"
  23:       dynamicKey_UNSTABLE: $commentsKey
                                 ^
  24:       filters: ["orderby"]
  
- Operation 'PaginationQuery' references undefined variable(s):
  - $commentsKey: String.
  
  Source (derived): GraphQL request (23:28)
  22:       key: "FeedbackFragment_comments"
  23:       dynamicKey_UNSTABLE: $commentsKey
                                 ^
  24:       filters: ["orderby"]
  
`;

exports[`compileRelayArtifacts matches expected output: defer-multiple-fragments-same-parent.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithMultipeDeferredFragmentsOnSameParent($id: ID!) {
  feedback: node(id: $id) {
    id
    ...FeedbackComments_feedback @defer
    ...FeedbackText_feedback @defer
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) @connection_resolver(label: "FeedbackComments_feedback") {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

fragment FeedbackText_feedback on Feedback {
  body {
    text
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithMultipeDeferredFragmentsOnSameParent",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "feedback",
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "FeedbackComments_feedback",
            "args": null
          },
          {
            "kind": "FragmentSpread",
            "name": "FeedbackText_feedback",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithMultipeDeferredFragmentsOnSameParent",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "feedback",
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "if": null,
            "kind": "Defer",
            "label": "QueryWithMultipeDeferredFragmentsOnSameParent$defer$FeedbackComments_feedback",
            "metadata": null,
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "Feedback",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "comments",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsConnection",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "Connection",
                        "label": "FeedbackComments_feedback",
                        "name": "comments",
                        "args": [
                          {
                            "kind": "Literal",
                            "name": "first",
                            "value": 10
                          }
                        ],
                        "edges": {
                          "kind": "LinkedField",
                          "alias": null,
                          "name": "edges",
                          "storageKey": null,
                          "args": null,
                          "concreteType": "CommentsEdge",
                          "plural": true,
                          "selections": [
                            {
                              "kind": "LinkedField",
                              "alias": null,
                              "name": "node",
                              "storageKey": null,
                              "args": null,
                              "concreteType": "Comment",
                              "plural": false,
                              "selections": [
                                {
                                  "kind": "ScalarField",
                                  "alias": null,
                                  "name": "id",
                                  "args": null,
                                  "storageKey": null
                                },
                                {
                                  "kind": "ClientExtension",
                                  "selections": [
                                    {
                                      "kind": "ScalarField",
                                      "alias": null,
                                      "name": "__id",
                                      "args": null,
                                      "storageKey": null
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "kind": "ClientExtension",
                              "selections": [
                                {
                                  "kind": "ScalarField",
                                  "alias": null,
                                  "name": "__id",
                                  "args": null,
                                  "storageKey": null
                                }
                              ]
                            }
                          ]
                        },
                        "pageInfo": {
                          "kind": "LinkedField",
                          "alias": null,
                          "name": "pageInfo",
                          "storageKey": null,
                          "args": null,
                          "concreteType": "PageInfo",
                          "plural": false,
                          "selections": [
                            {
                              "kind": "ScalarField",
                              "alias": null,
                              "name": "hasNextPage",
                              "args": null,
                              "storageKey": null
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "if": null,
            "kind": "Defer",
            "label": "QueryWithMultipeDeferredFragmentsOnSameParent$defer$FeedbackText_feedback",
            "metadata": null,
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "Feedback",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "body",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "Text",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "text",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithMultipeDeferredFragmentsOnSameParent(
  $id: ID!
) {
  feedback: node(id: $id) {
    __typename
    id
    ...FeedbackComments_feedback @defer(label: "QueryWithMultipeDeferredFragmentsOnSameParent$defer$FeedbackComments_feedback")
    ...FeedbackText_feedback @defer(label: "QueryWithMultipeDeferredFragmentsOnSameParent$defer$FeedbackText_feedback")
  }
}

fragment FeedbackComments_feedback on Feedback {
  comments(first: 10) {
    edges {
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
}

fragment FeedbackText_feedback on Feedback {
  body {
    text
  }
}


{
  "kind": "Fragment",
  "name": "FeedbackComments_feedback",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "comments",
      "storageKey": null,
      "args": null,
      "concreteType": "CommentsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "Connection",
          "label": "FeedbackComments_feedback",
          "name": "comments",
          "args": [
            {
              "kind": "Literal",
              "name": "first",
              "value": 10
            }
          ],
          "edges": {
            "kind": "LinkedField",
            "alias": null,
            "name": "edges",
            "storageKey": null,
            "args": null,
            "concreteType": "CommentsEdge",
            "plural": true,
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "node",
                "storageKey": null,
                "args": null,
                "concreteType": "Comment",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "id",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ClientExtension",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__id",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__id",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          },
          "pageInfo": {
            "kind": "LinkedField",
            "alias": null,
            "name": "pageInfo",
            "storageKey": null,
            "args": null,
            "concreteType": "PageInfo",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "hasNextPage",
                "args": null,
                "storageKey": null
              }
            ]
          }
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FeedbackText_feedback",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "body",
      "storageKey": null,
      "args": null,
      "concreteType": "Text",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: false-positive-circular-fragment-reference-regression.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery {
  viewer {
    ...MyViewer
    ...MyOtherViewer
    actor {
      name
    }
  }
}

fragment MyViewer on Viewer {
  ...MyNestedViewer
}

fragment MyOtherViewer on Viewer {
  ...MyNestedViewer
}

fragment MyNestedViewer on Viewer
  @argumentDefinitions(includeEmail: {type: "Boolean!", defaultValue: false}) {
  primaryEmail @include(if: $includeEmail)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "TestQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "FragmentSpread",
            "name": "MyViewer",
            "args": null
          },
          {
            "kind": "FragmentSpread",
            "name": "MyOtherViewer",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "TestQuery",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query TestQuery {
  viewer {
    actor {
      __typename
      name
      id
    }
  }
}


{
  "kind": "Fragment",
  "name": "MyViewer",
  "type": "Viewer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "FragmentSpread",
      "name": "MyNestedViewer",
      "args": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MyOtherViewer",
  "type": "Viewer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "FragmentSpread",
      "name": "MyNestedViewer",
      "args": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MyNestedViewer",
  "type": "Viewer",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "includeEmail",
      "type": "Boolean!",
      "defaultValue": false
    }
  ],
  "selections": [
    {
      "kind": "Condition",
      "passingValue": true,
      "condition": "includeEmail",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "primaryEmail",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-node-interface.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery") {
  id
  ... on User {
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...RefetchableFragment
    id
  }
}

fragment RefetchableFragment on Node {
  id
  ... on User {
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Node",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "FragmentSpread",
          "name": "ProfilePicture",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-object-implementing-node-interface.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on User
  @refetchable(queryName: "RefetchableFragmentQuery") {
  id
  name
  ...ProfilePicture
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...RefetchableFragment
    id
  }
}

fragment RefetchableFragment on User {
  id
  name
  ...ProfilePicture
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "User",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "FragmentSpread",
      "name": "ProfilePicture",
      "args": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-query.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Query
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(id: {type: "ID!"}) {
  node(id: $id) {
    ... on User {
      id
      name
      ...ProfilePicture
    }
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "FragmentSpread",
        "name": "RefetchableFragment",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $id: ID!
  $size: [Int]
) {
  ...RefetchableFragment_1Bmzm5
}

fragment RefetchableFragment_1Bmzm5 on Query {
  node(id: $id) {
    __typename
    ... on User {
      id
      name
      ...ProfilePicture
    }
    id
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Query",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": []
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "id",
      "type": "ID!",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "node",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "id",
          "variableName": "id"
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "User",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "id",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "name",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "FragmentSpread",
              "name": "ProfilePicture",
              "args": null
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-query-with-cycle.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
fragment RefetchableFragment on Query
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(id: {type: "ID!"}) {
  node(id: $id) {
    ... on User {
      id
      name
      ...Profile @arguments(includeProfile: true)
    }
  }
}

fragment Profile on User
  @argumentDefinitions(
    includeProfile: {type: "Boolean!", defaultValue: false}
  ) {
  id
  name
  profilePicture(size: $pictureSize) {
    uri
  }
  friends(first: $count) {
    edges {
      node {
        ...Profile
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Found a circular reference from fragment 'Profile'.

Source (derived): GraphQL request (2:1)
1: # expected-to-throw
2: fragment RefetchableFragment on Query
   ^
3:   @refetchable(queryName: "RefetchableFragmentQuery")

Source (derived): GraphQL request (2:1)
1: # expected-to-throw
2: fragment RefetchableFragment on Query
   ^
3:   @refetchable(queryName: "RefetchableFragmentQuery")

Source: GraphQL request (9:7)
 8:       name
 9:       ...Profile @arguments(includeProfile: true)
          ^
10:     }

Source: GraphQL request (26:9)
25:       node {
26:         ...Profile
            ^
27:       }

Source: GraphQL request (26:9)
25:       node {
26:         ...Profile
            ^
27:       }

`;

exports[`compileRelayArtifacts matches expected output: fragment-on-viewer.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Viewer
  @refetchable(queryName: "RefetchableFragmentQuery") {
  actor {
    id
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "profilePicture",
                    "storageKey": null,
                    "args": [
                      {
                        "kind": "Variable",
                        "name": "size",
                        "variableName": "size"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
) {
  viewer {
    ...RefetchableFragment
  }
}

fragment RefetchableFragment on Viewer {
  actor {
    __typename
    id
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Viewer",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "viewer"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "actor",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "FragmentSpread",
          "name": "ProfilePicture",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-defer-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithFragmentWithDefer {
  me {
    id
    ...UserFragment
  }
}

fragment UserFragment on User {
  id
  emailAddresses
  ...DeferredFragment
    @defer(label: "DeferredFragmentLabel")
    @arguments(scale: 1.5)
}

fragment DeferredFragment on User @argumentDefinitions(scale: {type: "Float"}) {
  id
  name
  profile_picture(scale: $scale) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithFragmentWithDefer",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "UserFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithFragmentWithDefer",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "emailAddresses",
            "args": null,
            "storageKey": null
          },
          {
            "if": null,
            "kind": "Defer",
            "label": "UserFragment$defer$DeferredFragmentLabel",
            "metadata": null,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profile_picture",
                "storageKey": "profile_picture(scale:1.5)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "scale",
                    "value": 1.5
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithFragmentWithDefer {
  me {
    id
    ...UserFragment
  }
}

fragment UserFragment on User {
  id
  emailAddresses
  ...DeferredFragment_QMvSr @defer(label: "UserFragment$defer$DeferredFragmentLabel")
}

fragment DeferredFragment_QMvSr on User {
  id
  name
  profile_picture(scale: 1.5) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "UserFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "emailAddresses",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "FragmentSpread",
      "name": "DeferredFragment",
      "args": [
        {
          "kind": "Literal",
          "name": "scale",
          "value": 1.5
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "DeferredFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "scale",
      "type": "Float",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profile_picture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "scale",
          "variableName": "scale"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-defer-on-abstract-type.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithFragmentWithDefer {
  node(id: "my-id") {
    ...NodeFragment @defer(label: "node")
  }
}

fragment NodeFragment on Node {
  id
  ... on User {
    name
  }
  ... on Page {
    websites
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithFragmentWithDefer",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": "node(id:\\"my-id\\")",
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": "my-id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NodeFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithFragmentWithDefer",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": "node(id:\\"my-id\\")",
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": "my-id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "if": null,
            "kind": "Defer",
            "label": "QueryWithFragmentWithDefer$defer$node",
            "metadata": null,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "name",
                    "args": null,
                    "storageKey": null
                  }
                ]
              },
              {
                "kind": "InlineFragment",
                "type": "Page",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "websites",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithFragmentWithDefer {
  node(id: "my-id") {
    __typename
    ...NodeFragment @defer(label: "QueryWithFragmentWithDefer$defer$node")
    id
  }
}

fragment NodeFragment on Node {
  id
  ... on User {
    name
  }
  ... on Page {
    websites
  }
}


{
  "kind": "Fragment",
  "name": "NodeFragment",
  "type": "Node",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "InlineFragment",
      "type": "Page",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "websites",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-defer-on-client.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query QueryWithFragmentWithDefer {
  me {
    id
    ...UserFragment
  }
}

fragment UserFragment on User {
  id
  emailAddresses
  ...DeferredFragment @defer(label: "DeferredFragmentLabel")
}

fragment DeferredFragment on ClientUser {
  clientname
}

interface ClientUser {
  id: String
  clientname: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Unexpected directive: @defer. This directive can only be used on fields/fragments that are fetched from the server schema, but it is used inside a client-only selection.
  
  Source (derived): GraphQL request (12:23)
  11:   emailAddresses
  12:   ...DeferredFragment @defer(label: "DeferredFragmentLabel")
                            ^
  13: }
  
  Source (derived): GraphQL request (12:3)
  11:   emailAddresses
  12:   ...DeferredFragment @defer(label: "DeferredFragmentLabel")
        ^
  13: }
  
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-match-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ]
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "PlainUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-stream.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithFragmentWithStream($id: ID!) {
  node(id: $id) {
    id
    ...FeedbackFragment
  }
}

fragment FeedbackFragment on Feedback {
  id
  actors @stream(initial_count: 1, label: "StreamedActorsLabel") {
    name
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithFragmentWithStream",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "FeedbackFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithFragmentWithStream",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Feedback",
            "selections": [
              {
                "if": null,
                "kind": "Stream",
                "label": "FeedbackFragment$stream$StreamedActorsLabel",
                "metadata": null,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "actors",
                    "storageKey": null,
                    "args": null,
                    "concreteType": null,
                    "plural": true,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__typename",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "name",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "id",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithFragmentWithStream(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ...FeedbackFragment
  }
}

fragment FeedbackFragment on Feedback {
  id
  actors @stream(label: "FeedbackFragment$stream$StreamedActorsLabel", initial_count: 1) {
    __typename
    name
    id
  }
}


{
  "kind": "Fragment",
  "name": "FeedbackFragment",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "actors",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": true,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: inline-and-mask-are-incompatible.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw

fragment ParentFragment on Query {
  me {
    ...Profile @relay(mask: false)
  }
}

fragment Profile on User @inline {
  id
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Cannot use @relay(mask: false) on fragment spreads for fragments with directives.
  
  Source: GraphQL request (5:5)
  4:   me {
  5:     ...Profile @relay(mask: false)
         ^
  6:   }
  
  Source: GraphQL request (9:26)
   8: 
   9: fragment Profile on User @inline {
                               ^
  10:   id
  
`;

exports[`compileRelayArtifacts matches expected output: inline-data-fragment.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query Test {
  ...ParentFragment
}

fragment ParentFragment on Query {
  me {
    # No refinement needed, field and fragment are both User.
    ...Profile
    profilePicture(size: 100) {
      uri
      height
    }
  }

  username(name: "test") {
    # Should refine from type Actor to User.
    ...Profile
  }
}

fragment Profile on User @inline {
  profilePicture(size: 100) {
    uri
    width
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "Test",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "FragmentSpread",
        "name": "ParentFragment",
        "args": null
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "Test",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "profilePicture",
            "storageKey": "profilePicture(size:100)",
            "args": [
              {
                "kind": "Literal",
                "name": "size",
                "value": 100
              }
            ],
            "concreteType": "Image",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "uri",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "width",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "height",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      },
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "username",
        "storageKey": "username(name:\\"test\\")",
        "args": [
          {
            "kind": "Literal",
            "name": "name",
            "value": "test"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": "profilePicture(size:100)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "size",
                    "value": 100
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "width",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query Test {
  ...ParentFragment
}

fragment ParentFragment on Query {
  me {
    ...Profile
    profilePicture(size: 100) {
      uri
      height
    }
    id
  }
  username(name: "test") {
    __typename
    ...Profile
    id
  }
}

fragment Profile on User {
  profilePicture(size: 100) {
    uri
    width
  }
}


{
  "kind": "Fragment",
  "name": "ParentFragment",
  "type": "Query",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "me",
      "storageKey": null,
      "args": null,
      "concreteType": "User",
      "plural": false,
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "profilePicture",
          "storageKey": "profilePicture(size:100)",
          "args": [
            {
              "kind": "Literal",
              "name": "size",
              "value": 100
            }
          ],
          "concreteType": "Image",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "uri",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "height",
              "args": null,
              "storageKey": null
            }
          ]
        },
        {
          "kind": "InlineDataFragmentSpread",
          "name": "Profile",
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "profilePicture",
              "storageKey": "profilePicture(size:100)",
              "args": [
                {
                  "kind": "Literal",
                  "name": "size",
                  "value": 100
                }
              ],
              "concreteType": "Image",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "uri",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "width",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "username",
      "storageKey": "username(name:\\"test\\")",
      "args": [
        {
          "kind": "Literal",
          "name": "name",
          "value": "test"
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineDataFragmentSpread",
          "name": "Profile",
          "selections": [
            {
              "kind": "InlineFragment",
              "type": "User",
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "profilePicture",
                  "storageKey": "profilePicture(size:100)",
                  "args": [
                    {
                      "kind": "Literal",
                      "name": "size",
                      "value": 100
                    }
                  ],
                  "concreteType": "Image",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "uri",
                      "args": null,
                      "storageKey": null
                    },
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "width",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "InlineDataFragment",
  "name": "Profile"
}
`;

exports[`compileRelayArtifacts matches expected output: inline-data-fragment-global-vars.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw

fragment ParentFragment on Query {
  me {
    ...Profile
  }
}

fragment Profile on User @inline {
  profilePicture(size: $pictureSize) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Variables are not yet supported inside @inline fragments.
  
  Source: GraphQL request (10:24)
   9: fragment Profile on User @inline {
  10:   profilePicture(size: $pictureSize) {
                             ^
  11:     uri
  
`;

exports[`compileRelayArtifacts matches expected output: inline-data-fragment-local-args.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw

fragment ParentFragment on Query {
  usingLiteralPassedValue: me {
    ...Profile @arguments(sizeArg: [100])
  }
  usingGlobalPassedValue: me {
    ...Profile @arguments(sizeArg: $globalSizeVar)
  }
  usingDefaultValue: me {
    ...Profile
  }
}

fragment Profile on User
  @inline
  @argumentDefinitions(sizeArg: {type: "[Int]", defaultValue: [50]}) {
  profilePicture(size: $sizeArg) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Variables are not yet supported inside @inline fragments.
  
  Source: GraphQL request (17:24)
  16:   @inline
  17:   @argumentDefinitions(sizeArg: {type: "[Int]", defaultValue: [50]}) {
                             ^
  18:   profilePicture(size: $sizeArg) {
  
`;

exports[`compileRelayArtifacts matches expected output: kitchen-sink.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery($id: ID!, $cond: Boolean!, $PictureSize: [Int]!) {
  node(id: $id) {
    id
    ... on User @include(if: $cond) {
      name
    }
    ...UserFragment @include(if: $cond) @arguments(size: $PictureSize)
  }
}

fragment UserFragment on User
  @argumentDefinitions(
    after: {type: "ID"}
    cond: {type: "Boolean!", defaultValue: false}
    first: {type: "Int", defaultValue: 5}
    size: {type: "[Int]"}
  ) {
  id
  __typename
  friends(after: $after, first: $first) {
    count
  }
  name @include(if: $cond)
  thumbnail: profilePicture(size: 32) {
    height
    width
    src: uri
  }
  profilePicture(size: $size) {
    height
    width
    src: uri
  }
  scaled: profilePicture(size: $PictureSize) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cond",
        "type": "Boolean!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "PictureSize",
        "type": "[Int]!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "Condition",
            "passingValue": true,
            "condition": "cond",
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "name",
                    "args": null,
                    "storageKey": null
                  }
                ]
              },
              {
                "kind": "FragmentSpread",
                "name": "UserFragment",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "PictureSize"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cond",
        "type": "Boolean!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "PictureSize",
        "type": "[Int]!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "Condition",
            "passingValue": true,
            "condition": "cond",
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "name",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "friends",
                    "storageKey": "friends(first:5)",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "first",
                        "value": 5
                      }
                    ],
                    "concreteType": "FriendsConnection",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "count",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "thumbnail",
                    "name": "profilePicture",
                    "storageKey": "profilePicture(size:32)",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "size",
                        "value": 32
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "height",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "width",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": "src",
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "profilePicture",
                    "storageKey": null,
                    "args": [
                      {
                        "kind": "Variable",
                        "name": "size",
                        "variableName": "PictureSize"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "height",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "width",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": "src",
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "scaled",
                    "name": "profilePicture",
                    "storageKey": null,
                    "args": [
                      {
                        "kind": "Variable",
                        "name": "size",
                        "variableName": "PictureSize"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
  $cond: Boolean!
  $PictureSize: [Int]!
) {
  node(id: $id) {
    __typename
    id
    ... on User @include(if: $cond) {
      name
    }
  ...UserFragment_3M2EvT @include(if: $cond)
  }
}

fragment UserFragment_3M2EvT on User {
  id
  __typename
  friends(first: 5) {
    count
  }
  thumbnail: profilePicture(size: 32) {
    height
    width
    src: uri
  }
  profilePicture(size: $PictureSize) {
    height
    width
    src: uri
  }
  scaled: profilePicture(size: $PictureSize) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "UserFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "after",
      "type": "ID",
      "defaultValue": null
    },
    {
      "kind": "LocalArgument",
      "name": "cond",
      "type": "Boolean!",
      "defaultValue": false
    },
    {
      "kind": "LocalArgument",
      "name": "first",
      "type": "Int",
      "defaultValue": 5
    },
    {
      "kind": "LocalArgument",
      "name": "size",
      "type": "[Int]",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "PictureSize",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "__typename",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "friends",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "after",
          "variableName": "after"
        },
        {
          "kind": "Variable",
          "name": "first",
          "variableName": "first"
        }
      ],
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "count",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": "thumbnail",
      "name": "profilePicture",
      "storageKey": "profilePicture(size:32)",
      "args": [
        {
          "kind": "Literal",
          "name": "size",
          "value": 32
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": "src",
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": "src",
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": "scaled",
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "PictureSize"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "Condition",
      "passingValue": true,
      "condition": "cond",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: linked-handle-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query LinkedHandleField($id: ID!) {
  node(id: $id) {
    ... on User {
      friends(first: 10) @__clientField(handle: "clientFriends") {
        count
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "LinkedHandleField",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "friends",
                "name": "__friends_clientFriends",
                "storageKey": null,
                "args": null,
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "count",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "LinkedHandleField",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": "friends(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "count",
                    "args": null,
                    "storageKey": null
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "handle": "clientFriends",
                "key": "",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query LinkedHandleField(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ... on User {
      friends(first: 10) {
        count
      }
    }
    id
  }
}

`;

exports[`compileRelayArtifacts matches expected output: match-field-overlap-across-documents.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query MultipleNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...FooNameRendererFragment
    ...BarNameRendererFragment
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer @match {
    ...MarkdownUserNameRenderer_name
      @module(name: "FooMarkdownUserNameRenderer.react")
  }
}

fragment BarNameRendererFragment on User {
  # same field and supported types as above but different selections:
  # should flatten together
  nameRenderer @match {
    ...MarkdownUserNameRenderer_name
      @module(name: "BarMarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Found conflicting @module selections: use a unique alias on the parent fields.
  
  Source: GraphQL request (22:7)
  21:     ...MarkdownUserNameRenderer_name
  22:       @module(name: "BarMarkdownUserNameRenderer.react")
            ^
  23:   }
  
  Source: GraphQL request (13:7)
  12:     ...MarkdownUserNameRenderer_name
  13:       @module(name: "FooMarkdownUserNameRenderer.react")
            ^
  14:   }
  
`;

exports[`compileRelayArtifacts matches expected output: match-on-child-of-plural.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment ActorsRendererFragment on Node {
  id
  actors {
    nameRenderer @match {
      ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
      ...MarkdownUserNameRenderer_name
        @module(name: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "ActorsRendererFragment",
  "type": "Node",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "actors",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": true,
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "nameRenderer",
          "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
          "args": [
            {
              "kind": "Literal",
              "name": "supported",
              "value": [
                "PlainUserNameRenderer",
                "MarkdownUserNameRenderer"
              ]
            }
          ],
          "concreteType": null,
          "plural": false,
          "selections": [
            {
              "kind": "InlineFragment",
              "type": "PlainUserNameRenderer",
              "selections": [
                {
                  "kind": "ModuleImport",
                  "documentName": "ActorsRendererFragment",
                  "fragmentName": "PlainUserNameRenderer_name",
                  "fragmentPropName": "name"
                }
              ]
            },
            {
              "kind": "InlineFragment",
              "type": "MarkdownUserNameRenderer",
              "selections": [
                {
                  "kind": "ModuleImport",
                  "documentName": "ActorsRendererFragment",
                  "fragmentName": "MarkdownUserNameRenderer_name",
                  "fragmentPropName": "name"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: missing-argument-on-field.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query TestQuery {
  node {
    hometown {
      nameWithArgs
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Required argument 'capitalize: Boolean!' is missing on 'nameWithArgs' in 'TestQuery'.
  
  Source: GraphQL request (5:7)
  4:     hometown {
  5:       nameWithArgs
           ^
  6:     }
  
  Source: GraphQL request (2:1)
  1: # expected-to-throw
  2: query TestQuery {
     ^
  3:   node {
  
`;

exports[`compileRelayArtifacts matches expected output: module-overlap-across-documents.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query FooNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...FooNameRendererFragment
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer {
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
  }
}

query BarNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...BarNameRendererFragment
  }
}

fragment BarNameRendererFragment on User {
  # same field alias as above and using standalone @module, so this should
  # flatten with the above selections even though the supported types are
  # different
  nameRenderer {
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "FooNameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "FooNameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "FooNameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": null,
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "FooNameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "FooNameRendererFragment",
                        "fragmentName": "PlainUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query FooNameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...FooNameRendererFragment
    id
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer {
    __typename
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_FooNameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "FooNameRendererFragment.nameRenderer")
      __module_component_FooNameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "FooNameRendererFragment.nameRenderer")
    }
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation_FooNameRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "FooNameRendererFragment.nameRenderer")
      __module_component_FooNameRendererFragment: js(module: "PlainUserNameRenderer.react", id: "FooNameRendererFragment.nameRenderer")
    }
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}


{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "BarNameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "BarNameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "BarNameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": null,
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "BarNameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query BarNameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...BarNameRendererFragment
    id
  }
}

fragment BarNameRendererFragment on User {
  nameRenderer {
    __typename
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_BarNameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "BarNameRendererFragment.nameRenderer")
      __module_component_BarNameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "BarNameRendererFragment.nameRenderer")
    }
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FooNameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "FooNameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "FooNameRendererFragment",
              "fragmentName": "PlainUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "BarNameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "BarNameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: module-overlap-within-document.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query MultipleNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...FooNameRendererFragment
    ...BarNameRendererFragment
  }
}

fragment FooNameRendererFragment on User {
  id
  nameRenderer {
    ...MarkdownUserNameRenderer_name
      @module(name: "FooMarkdownUserNameRenderer.react")
    ...PlainUserNameRenderer_name
      @module(name: "FooPlainUserNameRenderer.react")
  }
}

fragment BarNameRendererFragment on User {
  # same field alias as above and using standalone @module, so this should
  # flatten with the above selections even though the supported types are
  # different
  nameRenderer {
    ...MarkdownUserNameRenderer_name
      @module(name: "BarMarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Found conflicting @module selections: use a unique alias on the parent fields.
  
  Source: GraphQL request (25:7)
  24:     ...MarkdownUserNameRenderer_name
  25:       @module(name: "BarMarkdownUserNameRenderer.react")
            ^
  26:   }
  
  Source: GraphQL request (13:7)
  12:     ...MarkdownUserNameRenderer_name
  13:       @module(name: "FooMarkdownUserNameRenderer.react")
            ^
  14:     ...PlainUserNameRenderer_name
  
`;

exports[`compileRelayArtifacts matches expected output: original-client-fields-test.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query BestFriendsQuery($id: ID!) {
  node(id: $id) {
    ...BestFriends
    ...OnlyClientFields
  }
}

# This fragment disappears because all selections are removed
fragment OnlyClientFields on User {
  best_friends {
    __typename
  }
}

fragment BestFriends on User {
  # this is the only field that is part of the base schema
  ...NodeFragment
  # fields defined in type extensions are skipped
  best_friends {
    edges {
      cursor
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
  ... on Named {
    # fragments on extension types are skipped
    ...FooFragment
    ... on Foo {
      name
    }
  }
}

fragment NodeFragment on Node {
  id
}

fragment FooFragment on Foo {
  name
}

extend type User {
  best_friends: FriendsConnection
}

type Foo implements Named {
  name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "BestFriendsQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "BestFriends",
            "args": null
          },
          {
            "kind": "FragmentSpread",
            "name": "OnlyClientFields",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "BestFriendsQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "best_friends",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "FriendsConnection",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "edges",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "FriendsEdge",
                        "plural": true,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "cursor",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "node",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "User",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "pageInfo",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "PageInfo",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "hasNextPage",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__typename",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "Foo",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "name",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query BestFriendsQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...BestFriends
    id
  }
}

fragment BestFriends on User {
  ...NodeFragment
}

fragment NodeFragment on Node {
  id
}


{
  "kind": "Fragment",
  "name": "OnlyClientFields",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "best_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "__typename",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "BestFriends",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "FragmentSpread",
      "name": "NodeFragment",
      "args": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "best_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        },
        {
          "kind": "FragmentSpread",
          "name": "FooFragment",
          "args": null
        },
        {
          "kind": "InlineFragment",
          "type": "Foo",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "name",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NodeFragment",
  "type": "Node",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FooFragment",
  "type": "Foo",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: plural-fragment.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PluralFragment on User @relay(plural: true) {
  name
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "PluralFragment",
  "type": "User",
  "metadata": {
    "plural": true
  },
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-conditional-module.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!, $fetchModule: Boolean!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer {
    # note: intentionally no @match here
    ...MarkdownUserNameRenderer_name
      @include(if: $fetchModule)
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "fetchModule",
        "type": "Boolean!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "fetchModule",
        "type": "Boolean!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": null,
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "Condition",
                    "passingValue": true,
                    "condition": "fetchModule",
                    "selections": [
                      {
                        "kind": "InlineFragment",
                        "type": "MarkdownUserNameRenderer",
                        "selections": [
                          {
                            "kind": "ModuleImport",
                            "documentName": "NameRendererFragment",
                            "fragmentName": "MarkdownUserNameRenderer_name",
                            "fragmentPropName": "name"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
  $fetchModule: Boolean!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer {
    __typename
    ... on MarkdownUserNameRenderer @include(if: $fetchModule) {
      ...MarkdownUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "fetchModule",
      "type": "Boolean!"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "Condition",
          "passingValue": true,
          "condition": "fetchModule",
          "selections": [
            {
              "kind": "InlineFragment",
              "type": "MarkdownUserNameRenderer",
              "selections": [
                {
                  "kind": "ModuleImport",
                  "documentName": "NameRendererFragment",
                  "fragmentName": "MarkdownUserNameRenderer_name",
                  "fragmentPropName": "name"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-fragment-variables.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery($id: ID!, $cond: Boolean!, $pictureSize: [Int] = [128]) {
  node(id: $id) {
    id
    ...Profile @arguments(pictureSize: $pictureSize)
    ...ProfileFriends @include(if: $cond)
  }
}

fragment ProfileFriends on User {
  friends(first: 10) {
    edges {
      node {
        ...Profile @arguments(pictureSize: $pictureSize)
      }
    }
  }
}

fragment Profile on User @argumentDefinitions(pictureSize: {type: "[Int]"}) {
  profilePicture(size: $pictureSize) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "TestQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cond",
        "type": "Boolean!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "pictureSize",
        "type": "[Int]",
        "defaultValue": [
          128
        ]
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "Profile",
            "args": [
              {
                "kind": "Variable",
                "name": "pictureSize",
                "variableName": "pictureSize"
              }
            ]
          },
          {
            "kind": "Condition",
            "passingValue": true,
            "condition": "cond",
            "selections": [
              {
                "kind": "FragmentSpread",
                "name": "ProfileFriends",
                "args": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "TestQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cond",
        "type": "Boolean!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "pictureSize",
        "type": "[Int]",
        "defaultValue": [
          128
        ]
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "pictureSize"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          },
          {
            "kind": "Condition",
            "passingValue": true,
            "condition": "cond",
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "friends",
                    "storageKey": "friends(first:10)",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "first",
                        "value": 10
                      }
                    ],
                    "concreteType": "FriendsConnection",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "edges",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "FriendsEdge",
                        "plural": true,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "node",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "User",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "LinkedField",
                                "alias": null,
                                "name": "profilePicture",
                                "storageKey": null,
                                "args": [
                                  {
                                    "kind": "Variable",
                                    "name": "size",
                                    "variableName": "pictureSize"
                                  }
                                ],
                                "concreteType": "Image",
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "uri",
                                    "args": null,
                                    "storageKey": null
                                  }
                                ]
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query TestQuery(
  $id: ID!
  $cond: Boolean!
  $pictureSize: [Int] = [128]
) {
  node(id: $id) {
    __typename
    id
    ...Profile_4CNNX6
    ...ProfileFriends @include(if: $cond)
  }
}

fragment Profile_4CNNX6 on User {
  profilePicture(size: $pictureSize) {
    uri
  }
}

fragment ProfileFriends on User {
  friends(first: 10) {
    edges {
      node {
        ...Profile_4CNNX6
        id
      }
    }
  }
}


{
  "kind": "Fragment",
  "name": "ProfileFriends",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "pictureSize",
      "type": null
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "friends",
      "storageKey": "friends(first:10)",
      "args": [
        {
          "kind": "Literal",
          "name": "first",
          "value": 10
        }
      ],
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "edges",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsEdge",
          "plural": true,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "node",
              "storageKey": null,
              "args": null,
              "concreteType": "User",
              "plural": false,
              "selections": [
                {
                  "kind": "FragmentSpread",
                  "name": "Profile",
                  "args": [
                    {
                      "kind": "Variable",
                      "name": "pictureSize",
                      "variableName": "pictureSize"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "Profile",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "pictureSize",
      "type": "[Int]",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "pictureSize"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "supported",
                    "value": [
                      "PlainUserNameRenderer",
                      "MarkdownUserNameRenderer"
                    ]
                  }
                ],
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "PlainUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    __typename
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "PlainUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ]
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "PlainUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive-no-inline-experimental.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "supported",
                    "value": [
                      "PlainUserNameRenderer",
                      "MarkdownUserNameRenderer"
                    ]
                  }
                ],
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "PlainUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    __typename
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "PlainUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ]
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "PlainUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive-no-modules.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    __typename
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- Invalid @match selection: expected at least one @module selection. Remove @match or add a '...Fragment @module()' selection.
  
  Source: GraphQL request (10:16)
   9:   id
  10:   nameRenderer @match {
                     ^
  11:     __typename
  
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive-with-extra-argument.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRendererForContext(context: HEADER) @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRendererForContext",
                "storageKey": "nameRendererForContext(context:\\"HEADER\\",supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "context",
                    "value": "HEADER"
                  },
                  {
                    "kind": "Literal",
                    "name": "supported",
                    "value": [
                      "PlainUserNameRenderer",
                      "MarkdownUserNameRenderer"
                    ]
                  }
                ],
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "PlainUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRendererForContext(context: HEADER, supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    __typename
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRendererForContext")
      __module_component_NameRendererFragment: js(module: "PlainUserNameRenderer.react", id: "NameRendererFragment.nameRendererForContext")
    }
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRendererForContext")
      __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRendererForContext")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRendererForContext",
      "storageKey": "nameRendererForContext(context:\\"HEADER\\",supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
      "args": [
        {
          "kind": "Literal",
          "name": "context",
          "value": "HEADER"
        },
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ]
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "PlainUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive-with-typename.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    __typename
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "supported",
                    "value": [
                      "PlainUserNameRenderer",
                      "MarkdownUserNameRenderer"
                    ]
                  }
                ],
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "PlainUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    __typename
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "PlainUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(supported:[\\"PlainUserNameRenderer\\",\\"MarkdownUserNameRenderer\\"])",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ]
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "__typename",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "PlainUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-module-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer {
    # note: intentionally no @match here
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": null,
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ModuleImport",
                        "documentName": "NameRendererFragment",
                        "fragmentName": "MarkdownUserNameRenderer_name",
                        "fragmentPropName": "name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer {
    __typename
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderer")
      __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRenderer")
    }
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ModuleImport",
              "documentName": "NameRendererFragment",
              "fragmentName": "MarkdownUserNameRenderer_name",
              "fragmentPropName": "name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-raw-response-type-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query ViewerQuery @raw_response_type {
  viewer {
    actor {
      id
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "ViewerQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "ViewerQuery",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query ViewerQuery {
  viewer {
    actor {
      __typename
      id
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: refetchable-fragment-on-node-with-missing-id.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery") {
  ... on User {
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...RefetchableFragment
    id
  }
}

fragment RefetchableFragment on Node {
  ... on User {
    name
    ...ProfilePicture
  }
  id
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Node",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "FragmentSpread",
          "name": "ProfilePicture",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: refetchable-fragment-with-connection.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PaginationFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 10}
    cursor: {type: "ID"}
  ) {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count)
      @connection(key: "PaginationFragment_friends") {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "PaginationFragment",
            "args": [
              {
                "kind": "Variable",
                "name": "count",
                "variableName": "count"
              },
              {
                "kind": "Variable",
                "name": "cursor",
                "variableName": "cursor"
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "FriendsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "User",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  }
                ],
                "handle": "connection",
                "key": "PaginationFragment_friends",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $count: Int = 10
  $cursor: ID
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...PaginationFragment_1G22uz
    id
  }
}

fragment PaginationFragment_1G22uz on Node {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count) {
      edges {
        node {
          id
          __typename
        }
        cursor
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    }
  }
}


{
  "kind": "Fragment",
  "name": "PaginationFragment",
  "type": "Node",
  "metadata": {
    "connection": [
      {
        "count": "count",
        "cursor": "cursor",
        "direction": "forward",
        "path": [
          "friends"
        ]
      }
    ],
    "refetch": {
      "connection": {
        "forward": {
          "count": "count",
          "cursor": "cursor"
        },
        "backward": null,
        "path": [
          "friends"
        ]
      },
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "count",
      "type": "Int",
      "defaultValue": 10
    },
    {
      "kind": "LocalArgument",
      "name": "cursor",
      "type": "ID",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": "friends",
          "name": "__PaginationFragment_friends_connection",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    },
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "__typename",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "endCursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: refetchable-fragment-with-connection-bidirectional.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PaginationFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 10}
    cursor: {type: "ID"}
  ) {
  id
  ... on User {
    name
    friends(
      after: $cursor
      first: $count
      before: $beforeCursor
      last: $lastCount
    ) @connection(key: "PaginationFragment_friends") {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "beforeCursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "lastCount",
        "type": "Int",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "PaginationFragment",
            "args": [
              {
                "kind": "Variable",
                "name": "count",
                "variableName": "count"
              },
              {
                "kind": "Variable",
                "name": "cursor",
                "variableName": "cursor"
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "beforeCursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "lastCount",
        "type": "Int",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "before",
                    "variableName": "beforeCursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  },
                  {
                    "kind": "Variable",
                    "name": "last",
                    "variableName": "lastCount"
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "FriendsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "User",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasPreviousPage",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "startCursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "before",
                    "variableName": "beforeCursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  },
                  {
                    "kind": "Variable",
                    "name": "last",
                    "variableName": "lastCount"
                  }
                ],
                "handle": "connection",
                "key": "PaginationFragment_friends",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $count: Int = 10
  $cursor: ID
  $beforeCursor: ID
  $lastCount: Int
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...PaginationFragment_1G22uz
    id
  }
}

fragment PaginationFragment_1G22uz on Node {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count, before: $beforeCursor, last: $lastCount) {
      edges {
        node {
          id
          __typename
        }
        cursor
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}


{
  "kind": "Fragment",
  "name": "PaginationFragment",
  "type": "Node",
  "metadata": {
    "connection": [
      {
        "count": null,
        "cursor": null,
        "direction": "bidirectional",
        "path": [
          "friends"
        ]
      }
    ],
    "refetch": {
      "connection": {
        "forward": {
          "count": "count",
          "cursor": "cursor"
        },
        "backward": {
          "count": "lastCount",
          "cursor": "beforeCursor"
        },
        "path": [
          "friends"
        ]
      },
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "count",
      "type": "Int",
      "defaultValue": 10
    },
    {
      "kind": "LocalArgument",
      "name": "cursor",
      "type": "ID",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "beforeCursor",
      "type": "ID"
    },
    {
      "kind": "RootArgument",
      "name": "lastCount",
      "type": "Int"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": "friends",
          "name": "__PaginationFragment_friends_connection",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    },
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "__typename",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "endCursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasPreviousPage",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "startCursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: refetchable-fragment-with-connection-with-stream.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PaginationFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 10}
    cursor: {type: "ID"}
  ) {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count)
      @stream_connection(key: "PaginationFragment_friends", initial_count: 1) {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "PaginationFragment",
            "args": [
              {
                "kind": "Variable",
                "name": "count",
                "variableName": "count"
              },
              {
                "kind": "Variable",
                "name": "cursor",
                "variableName": "cursor"
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "if": null,
                    "kind": "Stream",
                    "label": "PaginationFragment_1G22uz$stream$PaginationFragment_friends",
                    "metadata": null,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "edges",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "FriendsEdge",
                        "plural": true,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "node",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "User",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "cursor",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "if": null,
                    "kind": "Defer",
                    "label": "PaginationFragment_1G22uz$defer$PaginationFragment_friends$pageInfo",
                    "metadata": {
                      "fragmentTypeCondition": "FriendsConnection"
                    },
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "pageInfo",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "PageInfo",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "endCursor",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "hasNextPage",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count"
                  }
                ],
                "handle": "connection",
                "key": "PaginationFragment_friends",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $count: Int = 10
  $cursor: ID
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...PaginationFragment_1G22uz
    id
  }
}

fragment PaginationFragment_1G22uz on Node {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count) {
      edges @stream(label: "PaginationFragment_1G22uz$stream$PaginationFragment_friends", initial_count: 1) {
        node {
          id
          __typename
        }
        cursor
      }
      ... on FriendsConnection @defer(label: "PaginationFragment_1G22uz$defer$PaginationFragment_friends$pageInfo") {
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}


{
  "kind": "Fragment",
  "name": "PaginationFragment",
  "type": "Node",
  "metadata": {
    "connection": [
      {
        "count": "count",
        "cursor": "cursor",
        "direction": "forward",
        "path": [
          "friends"
        ],
        "stream": true
      }
    ],
    "refetch": {
      "connection": {
        "forward": {
          "count": "count",
          "cursor": "cursor"
        },
        "backward": null,
        "path": [
          "friends"
        ]
      },
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "count",
      "type": "Int",
      "defaultValue": 10
    },
    {
      "kind": "LocalArgument",
      "name": "cursor",
      "type": "ID",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": "friends",
          "name": "__PaginationFragment_friends_connection",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    },
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "__typename",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "endCursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: scalar-handle-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query ScalarHandleField($id: ID!) {
  node(id: $id) {
    ... on User {
      name @__clientField(handle: "clientName")
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "ScalarHandleField",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": "name",
                "name": "__name_clientName",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "ScalarHandleField",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarHandle",
                "alias": null,
                "name": "name",
                "args": null,
                "handle": "clientName",
                "key": "",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query ScalarHandleField(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ... on User {
      name
    }
    id
  }
}

`;

exports[`compileRelayArtifacts matches expected output: sibling-client-selections.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment Foo_user on User {
  id
  name

  # Different types of client selections should be grouped under single
  # ClientExtension node:
  client_nickname
  client_foo {
    client_name
  }
  client_friends {
    edges {
      client_friend_edge_field # nested client field, should not create new ClientExtension node
      node {
        id
      }
    }
  }
  ... on ClientNamed {
    client_name
  }
  ...ClientTypeFragment # include fragment on client-only type
}

fragment ClientTypeFragment on ClientType {
  client_field
}

extend type User {
  client_friends: FriendsConnection
  client_nickname: String
  client_foo: Foo
}

extend type FriendsEdge {
  client_friend_edge_field: String
}

type ClientType {
  client_field: String
}

type Foo {
  client_name: String
}

interface ClientNamed {
  client_name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "Foo_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_nickname",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_foo",
          "storageKey": null,
          "args": null,
          "concreteType": "Foo",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "client_friends",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "client_friend_edge_field",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "ClientNamed",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "client_name",
              "args": null,
              "storageKey": null
            }
          ]
        },
        {
          "kind": "FragmentSpread",
          "name": "ClientTypeFragment",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ClientTypeFragment",
  "type": "ClientType",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "client_field",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: stable-literals.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query StableLiteralsTest {
  me {
    # Note: these object fields are not defined in alphabetical order.
    # The generated artifacts will be produced in alphabetical order.
    storyCommentSearch(query: {text: "foo", limit: 2, offset: 10}) {
      id
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "StableLiteralsTest",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "storyCommentSearch",
            "storageKey": "storyCommentSearch(query:{\\"limit\\":2,\\"offset\\":10,\\"text\\":\\"foo\\"})",
            "args": [
              {
                "kind": "Literal",
                "name": "query",
                "value": {
                  "limit": 2,
                  "offset": 10,
                  "text": "foo"
                }
              }
            ],
            "concreteType": "Comment",
            "plural": true,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "StableLiteralsTest",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "storyCommentSearch",
            "storageKey": "storyCommentSearch(query:{\\"limit\\":2,\\"offset\\":10,\\"text\\":\\"foo\\"})",
            "args": [
              {
                "kind": "Literal",
                "name": "query",
                "value": {
                  "limit": 2,
                  "offset": 10,
                  "text": "foo"
                }
              }
            ],
            "concreteType": "Comment",
            "plural": true,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query StableLiteralsTest {
  me {
    storyCommentSearch(query: {text: "foo", limit: 2, offset: 10}) {
      id
    }
    id
  }
}

`;

exports[`compileRelayArtifacts matches expected output: stream-connection.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery($id: ID!) {
  node(id: $id) {
    id
    ... on Story {
      comments(first: 10)
        @stream_connection(
          key: "NodeQuery_comments"
          initial_count: 0
          label: "comments"
        ) {
        edges {
          node {
            actor {
              name
            }
          }
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "comments",
                "name": "__NodeQuery_comments_connection",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "if": null,
                    "kind": "Stream",
                    "label": "NodeQuery$stream$comments",
                    "metadata": null,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "edges",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "CommentsEdge",
                        "plural": true,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "node",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "Comment",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "LinkedField",
                                "alias": null,
                                "name": "actor",
                                "storageKey": null,
                                "args": null,
                                "concreteType": null,
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "__typename",
                                    "args": null,
                                    "storageKey": null
                                  },
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "name",
                                    "args": null,
                                    "storageKey": null
                                  },
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "id",
                                    "args": null,
                                    "storageKey": null
                                  }
                                ]
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "cursor",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "if": null,
                    "kind": "Defer",
                    "label": "NodeQuery$defer$comments$pageInfo",
                    "metadata": {
                      "fragmentTypeCondition": "CommentsConnection"
                    },
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "pageInfo",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "PageInfo",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "endCursor",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "hasNextPage",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10
                  }
                ],
                "handle": "connection",
                "key": "NodeQuery_comments",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ... on Story {
      comments(first: 10) {
        edges @stream(label: "NodeQuery$stream$comments", initial_count: 0) {
          node {
            actor {
              __typename
              name
              id
            }
            id
            __typename
          }
          cursor
        }
        ... on CommentsConnection @defer(label: "NodeQuery$defer$comments$pageInfo") {
          pageInfo {
            endCursor
            hasNextPage
          }
        }
      }
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: unions.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query UnionQuery {
  maybeNode {
    ... on NonNode {
      name
    }
    ... on Story {
      id
      body {
        text
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "UnionQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "maybeNode",
        "storageKey": null,
        "args": null,
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "NonNode",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "body",
                "storageKey": null,
                "args": null,
                "concreteType": "Text",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "text",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "UnionQuery",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "maybeNode",
        "storageKey": null,
        "args": null,
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "NonNode",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "body",
                "storageKey": null,
                "args": null,
                "concreteType": "Text",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "text",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query UnionQuery {
  maybeNode {
    __typename
    ... on NonNode {
      name
    }
    ... on Story {
      id
      body {
        text
      }
    }
    ... on Node {
      id
    }
    ... on FakeNode {
      id
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: unknown-root-variable-in-fragment.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query TestQuery($id: ID!, $pictureSize: [Int] = [128]) {
  node(id: $id) {
    id
    ...Profile @relay(mask: false)
  }
}

fragment Profile on User {
  id
  name
  # includeFriends is not defined on the referencing query, should error
  ... @include(if: $includeFriends) {
    friends(first: 10) {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Variable '$includeFriends' is not in scope.

Source: GraphQL request (2:1)
1: # expected-to-throw
2: query TestQuery($id: ID!, $pictureSize: [Int] = [128]) {
   ^
3:   node(id: $id) {

Source: GraphQL request (13:20)
12:   # includeFriends is not defined on the referencing query, should error
13:   ... @include(if: $includeFriends) {
                       ^
14:     friends(first: 10) {

`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-dup-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment UserUtil_user on User
  # it should not strip exisiting local variable
  @argumentDefinitions(
    localIsRelative: {type: "Boolean", defaultValue: false}
  ) {
  # it should not strip existing global variable
  profilePicture(size: $PictureSize) {
    width
    height
  }
  ...UserUtil2_user @relay(mask: false)

  # it should merge with the same existing global variable
  url(relative: $globalIsRelative)
  anotherUrl: url(relative: $localIsRelative)
}

fragment UserUtil2_user on User {
  url(relative: $globalIsRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "UserUtil_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "localIsRelative",
      "type": "Boolean",
      "defaultValue": false
    },
    {
      "kind": "RootArgument",
      "name": "PictureSize",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "globalIsRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "PictureSize"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "globalIsRelative"
        }
      ],
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": "anotherUrl",
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "localIsRelative"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil2_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "globalIsRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "globalIsRelative"
        }
      ],
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-global-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery($ProfilePicture_SIZE: [Int], $isRelative: Boolean) {
  me {
    ...UserProfile_user
  }
}

fragment UserProfile_user on User {
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  ...UserUtil_user @relay(mask: false)
}

fragment UserUtil_user on User {
  url(relative: $isRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "TestQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "UserProfile_user",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "TestQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "profilePicture",
            "storageKey": null,
            "args": [
              {
                "kind": "Variable",
                "name": "size",
                "variableName": "ProfilePicture_SIZE"
              }
            ],
            "concreteType": "Image",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "width",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "height",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "url",
            "args": [
              {
                "kind": "Variable",
                "name": "relative",
                "variableName": "isRelative"
              }
            ],
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
) {
  me {
    ...UserProfile_user
    id
  }
}

fragment UserProfile_user on User {
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  url(relative: $isRelative)
}


{
  "kind": "Fragment",
  "name": "UserProfile_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "ProfilePicture_SIZE",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "ProfilePicture_SIZE"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative"
        }
      ],
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-local-arguments.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw

query TestQuery {
  me {
    ...User_user @relay(mask: false)
  }
}

fragment User_user on User
  @argumentDefinitions(isRelative: {type: "Boolean!", defaultValue: false}) {
  url(relative: $isRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Encountered 1 error(s):
- RelayMaskTransform: Cannot use @relay(mask: false) on fragment spread because the fragment definition uses @argumentDefinitions.
  
  Source: GraphQL request (5:5)
  4:   me {
  5:     ...User_user @relay(mask: false)
         ^
  6:   }
  
  Source: GraphQL request (10:24)
   9: fragment User_user on User
  10:   @argumentDefinitions(isRelative: {type: "Boolean!", defaultValue: false}) {
                             ^
  11:   url(relative: $isRelative)
  
`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-recursive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
  $showFirstName: Boolean
) {
  me {
    ...UserProfile_user
  }
}

fragment UserProfile_user on User {
  firstName(if: $showFirstName)
  ...UserUtil_user @relay(mask: false)
}

fragment UserUtil_user on User {
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  ...UserUtil2_user @relay(mask: false)
}

fragment UserUtil2_user on User {
  url(relative: $isRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "TestQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "showFirstName",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "UserProfile_user",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "TestQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "showFirstName",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "firstName",
            "args": [
              {
                "kind": "Variable",
                "name": "if",
                "variableName": "showFirstName"
              }
            ],
            "storageKey": null
          },
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "profilePicture",
            "storageKey": null,
            "args": [
              {
                "kind": "Variable",
                "name": "size",
                "variableName": "ProfilePicture_SIZE"
              }
            ],
            "concreteType": "Image",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "width",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "height",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "url",
            "args": [
              {
                "kind": "Variable",
                "name": "relative",
                "variableName": "isRelative"
              }
            ],
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
  $showFirstName: Boolean
) {
  me {
    ...UserProfile_user
    id
  }
}

fragment UserProfile_user on User {
  firstName(if: $showFirstName)
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  url(relative: $isRelative)
}


{
  "kind": "Fragment",
  "name": "UserProfile_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "showFirstName",
      "type": "Boolean"
    },
    {
      "kind": "RootArgument",
      "name": "ProfilePicture_SIZE",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "firstName",
      "args": [
        {
          "kind": "Variable",
          "name": "if",
          "variableName": "showFirstName"
        }
      ],
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "ProfilePicture_SIZE"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "ProfilePicture_SIZE",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "ProfilePicture_SIZE"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil2_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative"
        }
      ],
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: unused-fragment-argdef.invalid.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
# expected-to-throw
query QueryWithUnusedFragmentArgumentDefinition($id: ID!) {
  node(id: $id) {
    ...Profile
  }
}

fragment Profile on User {
  id
  name
  ...ProfilePhotoWrapper @arguments(size: $size)
}

fragment ProfilePhotoWrapper on User @argumentDefinitions(size: {type: "Int"}) {
  __typename
  ...ProfilePhoto @arguments(size: $size)
}

fragment ProfilePhoto on User {
  profilePicture(size: [100]) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: RelayParser: Encountered 1 error(s):
- Variable @arguments values are only supported when the argument is defined with @argumentDefinitions. Check the definition of fragment 'ProfilePhoto'.
  
  GraphQL request (16:36)
  15:   __typename
  16:   ...ProfilePhoto @arguments(size: $size)
                                         ^
  17: }
  
  GraphQL request (19:1)
  18: 
  19: fragment ProfilePhoto on User {
      ^
  20:   profilePicture(size: [100]) {
  
`;

exports[`compileRelayArtifacts matches expected output: unused-fragment-argdef-unchecked.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithUnusedFragmentArgumentDefinition($id: ID!) {
  node(id: $id) {
    ...Profile
  }
}

fragment Profile on User {
  id
  name
  ...ProfilePhotoWrapper @arguments(size: $size)
}

fragment ProfilePhotoWrapper on User @argumentDefinitions(size: {type: "Int"}) {
  __typename
  ...ProfilePhoto @uncheckedArguments_DEPRECATED(size: $size)
}

fragment ProfilePhoto on User {
  profilePicture(size: [100]) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithUnusedFragmentArgumentDefinition",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "Profile",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithUnusedFragmentArgumentDefinition",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": "profilePicture(size:[100])",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "size",
                    "value": [
                      100
                    ]
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithUnusedFragmentArgumentDefinition(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...Profile
    id
  }
}

fragment Profile on User {
  id
  name
  ...ProfilePhotoWrapper_18PEfK
}

fragment ProfilePhotoWrapper_18PEfK on User {
  __typename
  ...ProfilePhoto_18PEfK
}

fragment ProfilePhoto_18PEfK on User {
  profilePicture(size: [100]) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "Profile",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "FragmentSpread",
      "name": "ProfilePhotoWrapper",
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePhotoWrapper",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "size",
      "type": "Int",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "__typename",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "FragmentSpread",
      "name": "ProfilePhoto",
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size"
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePhoto",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": "profilePicture(size:[100])",
      "args": [
        {
          "kind": "Literal",
          "name": "size",
          "value": [
            100
          ]
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: unused-variables-removed-from-print-not-codegen.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithUnusedVariables($id: ID!, $unusedFirst: Int, $unusedAfter: ID) {
  node(id: $id) {
    id
    ...ConnectionFragment @arguments(fetchConnection: false)
  }
}

fragment ConnectionFragment on User
  @argumentDefinitions(
    fetchConnection: {type: "Boolean", defaultValue: false}
  ) {
  ... @include(if: $fetchConnection) {
    friends(after: $unusedAfter, first: $unusedFirst) {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithUnusedVariables",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "unusedFirst",
        "type": "Int",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "unusedAfter",
        "type": "ID",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "ConnectionFragment",
            "args": [
              {
                "kind": "Literal",
                "name": "fetchConnection",
                "value": false
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithUnusedVariables",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "unusedFirst",
        "type": "Int",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "unusedAfter",
        "type": "ID",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithUnusedVariables(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
  }
}


{
  "kind": "Fragment",
  "name": "ConnectionFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "fetchConnection",
      "type": "Boolean",
      "defaultValue": false
    },
    {
      "kind": "RootArgument",
      "name": "unusedAfter",
      "type": "ID"
    },
    {
      "kind": "RootArgument",
      "name": "unusedFirst",
      "type": "Int"
    }
  ],
  "selections": [
    {
      "kind": "Condition",
      "passingValue": true,
      "condition": "fetchConnection",
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "friends",
          "storageKey": null,
          "args": [
            {
              "kind": "Variable",
              "name": "after",
              "variableName": "unusedAfter"
            },
            {
              "kind": "Variable",
              "name": "first",
              "variableName": "unusedFirst"
            }
          ],
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: viewer-query.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query ViewerQuery {
  viewer {
    actor {
      id
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "ViewerQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "ViewerQuery",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query ViewerQuery {
  viewer {
    actor {
      __typename
      id
    }
  }
}

`;
