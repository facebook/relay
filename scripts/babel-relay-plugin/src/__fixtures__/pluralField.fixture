Input:
var Relay = require('react-relay');
var x = Relay.QL`
  query {
    node(id: 456) {
      ... on Story {
        actors {
          id
          __typename
        }
      }
    }
  }
`;

Output:
'use strict';

var Relay = require('react-relay');
var x = function () {
  return {
    calls: [{
      kind: 'Call',
      metadata: {
        type: 'ID!'
      },
      name: 'id',
      value: {
        kind: 'CallValue',
        callValue: 456
      }
    }],
    children: [{
      fieldName: 'id',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'String'
    }, {
      fieldName: '__typename',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'String'
    }, {
      children: [{
        children: [{
          fieldName: 'id',
          kind: 'Field',
          metadata: {
            isRequisite: true
          },
          type: 'String'
        }, {
          fieldName: '__typename',
          kind: 'Field',
          metadata: {},
          type: 'String'
        }],
        fieldName: 'actors',
        kind: 'Field',
        metadata: {
          canHaveSubselections: true,
          inferredRootCallName: 'node',
          inferredPrimaryKey: 'id',
          isPlural: true
        },
        type: 'User'
      }, {
        fieldName: 'id',
        kind: 'Field',
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: 'String'
      }],
      id: Relay.QL.__id(),
      kind: 'Fragment',
      metadata: {},
      name: 'Story',
      type: 'Story'
    }],
    fieldName: 'node',
    kind: 'Query',
    metadata: {
      isAbstract: true,
      identifyingArgName: 'id',
      identifyingArgType: 'ID!'
    },
    name: 'PluralField',
    type: 'Node'
  };
}();
