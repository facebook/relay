==================================== INPUT ====================================
query abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_AbstractTypeRefinementQuery {
  node(id: "4") {
    # Nested fragments will be inlined:
    #  - Printed query should select __isNode
    #  - Normalization ast should include inline fragment with abstractKey
    #  - Other fields and inline fragments should be deduped/flattened as normal
    ...abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_NodeFragment
  }
}

fragment abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_NodeFragment on Node {
  id
  ...abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_OtherNodeFragment
}

fragment abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_OtherNodeFragment on Node {
  id
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_AbstractTypeRefinementQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": "4"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_NodeFragment"
          }
        ],
        "storageKey": "node(id:\"4\")"
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [],
    "kind": "Operation",
    "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_AbstractTypeRefinementQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": "4"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "kind": "TypeDiscriminator",
            "abstractKey": "__isNode"
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          }
        ],
        "storageKey": "node(id:\"4\")"
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_AbstractTypeRefinementQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_AbstractTypeRefinementQuery {
  node(id: "4") {
    __typename
    ...abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_NodeFragment
    id
  }
}

fragment abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_NodeFragment on Node {
  __isNode: __typename
  id
  ...abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_OtherNodeFragment
}

fragment abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_OtherNodeFragment on Node {
  __isNode: __typename
  id
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_NodeFragment",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    },
    {
      "args": null,
      "kind": "FragmentSpread",
      "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_OtherNodeFragment"
    }
  ],
  "type": "Node",
  "abstractKey": "__isNode"
}

{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "abstractTypeRefinementDontFlattenTypeDiscriminatorNestedFragmentSpread_OtherNodeFragment",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    }
  ],
  "type": "Node",
  "abstractKey": "__isNode"
}
