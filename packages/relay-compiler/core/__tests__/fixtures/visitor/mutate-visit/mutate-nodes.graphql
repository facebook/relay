query NodeQuery(
  $id: ID!
  $cond: Boolean!
  $size: [Int]
) {
  node(id: $id) {
    id
    ... on Node @include(if: $cond) {
      ... on User {
        name
      }
    }
    ... on Node {
      ...UserFragment @arguments(size: $size)
    }
  }
}

fragment UserFragment on User @argumentDefinitions(
  after: {type: "ID"}
  cond: {type: "Boolean!", defaultValue: false}
  first: {type: "Int", defaultValue: 5}
  size: {type: "[Int]"}
) {
  ... on User @skip(if: $cond) {
    id
    __typename
    checkins(environments: [WEB]) {
      __typename
    }
    friends(after: $after, first: $first, traits: [HELPFUL]) {
      count
    }
    ... on User @include(if: $cond) {
      name
    }
    thumbnail: profilePicture(size: 32) {
      height
      width
      src: uri
    }
    profilePicture(size: $size) {
      height
      width
      src: uri
    }
  }
}
