==================================== INPUT ====================================
# expected-to-throw
query NodeQuery($id: ID!, $first: Int, $after: ID) {
  node(id: $id) {
    id
    ... on User {
      badConnection(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
        edges {
          cursor {
            id
          }
          node
        }
      }
    }
  }
}

# %extensions%
extend type User {
  badConnection(after: ID, before: ID, first: Int, last: Int): BadConnection
}

type BadConnection {
  count: Int
  edges: [BadConnectionEdge]
  pageInfo: BadConnectionPageInfo
}

type BadConnectionEdge {
  cursor: BadConnectionNode
  node: Int
}

type BadConnectionNode {
  id: ID
}

type BadConnectionPageInfo {
  hasPreviousPage: Boolean
  hasNextPage: Boolean
  endCursor: String
  startCursor: String
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž @connection used on invalid field 'badConnection'. Expected the field type 'BadConnection' to expose a 'edges { cursor }' field that returns a scalar.[0m

  [4mconnection-invalid-edge-type.invalid.graphql[0m[2m:6:7[0m
[1m    5 â”‚ [0m    ... on User {
[1m    6 â”‚ [0m      [31mb[0m[31ma[0m[31md[0m[31mC[0m[31mo[0m[31mn[0m[31mn[0m[31me[0m[31mc[0m[31mt[0m[31mi[0m[31mo[0m[31mn[0m(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
      â”‚ [31m      ^^^^^^^^^^^^^[0m
[1m    7 â”‚ [0m        edges {

[31m  â„¹ï¸Ž field with invalid type[0m

  [4mconnection-invalid-edge-type.invalid.graphql[0m[2m:7:9[0m
[1m    6 â”‚ [0m      badConnection(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
[1m    7 â”‚ [0m        [31me[0m[31md[0m[31mg[0m[31me[0m[31ms[0m {
      â”‚ [31m        ^^^^^[0m
[1m    8 â”‚ [0m          cursor {


âœ–ï¸Ž @connection used on invalid field 'badConnection'. Expected the field type 'BadConnection' to expose a 'edges { node }' field that returns an object, interface or union.

  connection-invalid-edge-type.invalid.graphql:6:7
    5 â”‚     ... on User {
    6 â”‚       badConnection(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
      â”‚       ^^^^^^^^^^^^^
    7 â”‚         edges {

  â„¹ï¸Ž field with invalid type

  connection-invalid-edge-type.invalid.graphql:7:9
    6 â”‚       badConnection(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
[1m    7 â”‚ [0m        [31me[0m[31md[0m[31mg[0m[31me[0m[31ms[0m {
      â”‚ [31m        ^^^^^[0m
[1m    8 â”‚ [0m          cursor {
