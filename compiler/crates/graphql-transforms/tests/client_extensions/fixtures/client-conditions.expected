==================================== INPUT ====================================
query Foo {
  me {
    ...Foo_user
  }
}

fragment Foo_user on User {
  id
  name @include(if: $shouldInclude)

  client_nickname @include(if: $shouldInclude)

  foo {
    ... on ClientNamed @include(if: $shouldInclude) {
      client_name
      client_name_2
    }
  }

  ... on Actor @include(if: $shouldInclude) {
    client_actor_field
    address {
      city
      client_street_address_field(arg: $arg) # nested client field
    }
  }
}

# %extensions%

extend type User {
  client_nickname: String
  client_actor_field: String
  foo: ClientNamed
}

extend type StreetAddress {
  client_street_address_field(arg: String): String
}

extend interface Actor {
  client_actor_field: String
}

extend type Page {
  client_actor_field: String
}

interface ClientNamed {
  client_name: String
  client_name_2: String
}
==================================== OUTPUT ===================================
fragment Foo_user on User {
  id
  name @include(if: $shouldInclude)
  ... @__clientExtension @include(if: $shouldInclude) {
    client_nickname
  }
  ... on Actor @include(if: $shouldInclude) {
    address {
      city
      ... @__clientExtension {
        client_street_address_field(arg: $arg)
      }
    }
    ... @__clientExtension {
      client_actor_field
    }
  }
  ... @__clientExtension {
    foo {
      ... on ClientNamed @include(if: $shouldInclude) {
        client_name
        client_name_2
      }
    }
  }
}

query Foo {
  me {
    ...Foo_user
  }
}
