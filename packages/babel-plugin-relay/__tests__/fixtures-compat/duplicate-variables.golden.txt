/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule CompatProfile
 */

'use strict';

const RelayCompatContainer = require('RelayCompatContainer');
const graphql = require('graphql');

const CompatProfilePic = () => null;

module.exports = RelayCompatContainer.createContainer(CompatProfilePic, {
  user: {
    modern: function () {
      return require('./__generated__/CompatProfile_user.graphql');
    },
    classic: function (RelayQL_GENERATED) {
      return {
        kind: 'FragmentDefinition',
        argumentDefinitions: [{
          defaultValue: null,
          kind: 'LocalArgument',
          name: 'scale'
        }],
        node: function () {
          return {
            children: [{
              calls: [{
                kind: 'Call',
                metadata: {
                  type: 'Float'
                },
                name: 'scale',
                value: {
                  kind: 'CallVariable',
                  callVariableName: 'scale'
                }
              }],
              children: [{
                fieldName: 'uri',
                kind: 'Field',
                metadata: {},
                type: 'String'
              }],
              fieldName: 'profile_picture',
              kind: 'Field',
              metadata: {
                canHaveSubselections: true
              },
              type: 'Image'
            }, {
              fieldName: 'id',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'ID'
            }],
            id: RelayQL_GENERATED.__id(),
            kind: 'Fragment',
            metadata: {},
            name: 'CompatProfile_user',
            type: 'User'
          };
        }()
      };
    }
  },
  user2: {
    modern: function () {
      return require('./__generated__/CompatProfile_user2.graphql');
    },
    classic: function (RelayQL_GENERATED) {
      return {
        kind: 'FragmentDefinition',
        argumentDefinitions: [{
          defaultValue: null,
          kind: 'LocalArgument',
          name: 'scale'
        }],
        node: function () {
          return {
            children: [{
              calls: [{
                kind: 'Call',
                metadata: {
                  type: 'Float'
                },
                name: 'scale',
                value: {
                  kind: 'CallVariable',
                  callVariableName: 'scale'
                }
              }],
              children: [{
                fieldName: 'uri',
                kind: 'Field',
                metadata: {},
                type: 'String'
              }],
              fieldName: 'profile_picture',
              kind: 'Field',
              metadata: {
                canHaveSubselections: true
              },
              type: 'Image'
            }, {
              fieldName: 'id',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'ID'
            }],
            id: RelayQL_GENERATED.__id(),
            kind: 'Fragment',
            metadata: {},
            name: 'CompatProfile_user2',
            type: 'User'
          };
        }()
      };
    }
  }
});
