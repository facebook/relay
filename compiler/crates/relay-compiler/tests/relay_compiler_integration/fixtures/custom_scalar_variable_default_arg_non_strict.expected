==================================== INPUT ====================================
//- foo.js

graphql`query fooCustomScalarLiteralArgQuery($arg: CustomScalarType! = "foobar", $arg_server: CustomServerScalarType! = "bazquux") {
    extension_field(custom_scalar_arg: "a_string") {
        __typename
    }
    extension_scalar_field(custom_scalar_arg: $arg)
    with_var: extension_server_scalar(custom_server_scalar_arg: $arg_server)
    with_literal: extension_server_scalar(custom_server_scalar_arg: "another_string")
}`

//- relay.config.json
{
   "language": "flow",
   "schema": "./schema.graphql",
   "eagerEsModules": true,
   "featureFlags": {
      "enable_relay_resolver_transform": true,
      "enable_relay_resolver_mutations": true
   },
   "schemaExtensions": [
      "./extensions.graphql"
   ]
}

//- schema.graphql

type Query

scalar CustomServerScalarType

//- extensions.graphql

scalar CustomScalarType

type Obj {
    some_key: Int!
}

extend type Query {
    extension_field(custom_scalar_arg: CustomScalarType!): Obj
    extension_scalar_field(custom_scalar_arg: CustomScalarType!): Int
    extension_server_scalar(custom_server_scalar_arg: CustomServerScalarType!): Int
}
==================================== OUTPUT ===================================
//- __generated__/fooCustomScalarLiteralArgQuery.graphql.js
/**
 * <auto-generated> SignedSource<<27b4bcb541cbdf999e094b271c6bf062>>
 * @flow
 * @lightSyntaxTransform
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type { ClientRequest, ClientQuery } from 'relay-runtime';
export type fooCustomScalarLiteralArgQuery$variables = {|
  arg: any,
  arg_server: any,
|};
export type fooCustomScalarLiteralArgQuery$data = {|
  +extension_field: ?{|
    +__typename: "Obj",
  |},
  +extension_scalar_field: ?number,
  +with_literal: ?number,
  +with_var: ?number,
|};
export type fooCustomScalarLiteralArgQuery = {|
  response: fooCustomScalarLiteralArgQuery$data,
  variables: fooCustomScalarLiteralArgQuery$variables,
|};
*/

var node/*: ClientRequest*/ = (function(){
var v0 = [
  {
    "defaultValue": "foobar",
    "kind": "LocalArgument",
    "name": "arg"
  },
  {
    "defaultValue": "bazquux",
    "kind": "LocalArgument",
    "name": "arg_server"
  }
],
v1 = [
  {
    "kind": "ClientExtension",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "custom_scalar_arg",
            "value": "a_string"
          }
        ],
        "concreteType": "Obj",
        "kind": "LinkedField",
        "name": "extension_field",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          }
        ],
        "storageKey": "extension_field(custom_scalar_arg:\"a_string\")"
      },
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "custom_scalar_arg",
            "variableName": "arg"
          }
        ],
        "kind": "ScalarField",
        "name": "extension_scalar_field",
        "storageKey": null
      },
      {
        "alias": "with_var",
        "args": [
          {
            "kind": "Variable",
            "name": "custom_server_scalar_arg",
            "variableName": "arg_server"
          }
        ],
        "kind": "ScalarField",
        "name": "extension_server_scalar",
        "storageKey": null
      },
      {
        "alias": "with_literal",
        "args": [
          {
            "kind": "Literal",
            "name": "custom_server_scalar_arg",
            "value": "another_string"
          }
        ],
        "kind": "ScalarField",
        "name": "extension_server_scalar",
        "storageKey": "extension_server_scalar(custom_server_scalar_arg:\"another_string\")"
      }
    ]
  }
];
return {
  "fragment": {
    "argumentDefinitions": (v0/*: any*/),
    "kind": "Fragment",
    "metadata": null,
    "name": "fooCustomScalarLiteralArgQuery",
    "selections": (v1/*: any*/),
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": (v0/*: any*/),
    "kind": "Operation",
    "name": "fooCustomScalarLiteralArgQuery",
    "selections": (v1/*: any*/)
  },
  "params": {
    "cacheID": "cd379a63ef2b50edc27e70bb79830d1e",
    "id": null,
    "metadata": {},
    "name": "fooCustomScalarLiteralArgQuery",
    "operationKind": "query",
    "text": null
  }
};
})();

(node/*: any*/).hash = "6e15b365d98ebe5a10f235ef71786489";

export default ((node/*: any*/)/*: ClientQuery<
  fooCustomScalarLiteralArgQuery$variables,
  fooCustomScalarLiteralArgQuery$data,
>*/);
