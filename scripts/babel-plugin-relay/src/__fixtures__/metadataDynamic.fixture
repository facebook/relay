Input:
var Relay = require('react-relay');
var x = Relay.QL`
  fragment on NewsFeedConnection {
    edges {
      node {
        id,
        ... on Story {
          attachments,
        }
      },
    },
  }
`;

Output:
var Relay = require('react-relay');
var x = (function () {
  return {
    children: [{
      children: [{
        children: [{
          fieldName: 'id',
          kind: 'Field',
          metadata: {
            isRequisite: true
          },
          type: 'String'
        }, {
          fieldName: '__typename',
          kind: 'Field',
          metadata: {
            isGenerated: true,
            isRequisite: true
          },
          type: 'String'
        }, {
          children: [{
            children: [{
              fieldName: 'id',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'String'
            }, {
              fieldName: '__typename',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'String'
            }],
            fieldName: 'attachments',
            kind: 'Field',
            metadata: {
              inferredRootCallName: 'node',
              inferredPrimaryKey: 'id',
              isAbstract: true,
              isPlural: true
            },
            type: 'Node'
          }, {
            fieldName: 'id',
            kind: 'Field',
            metadata: {
              isGenerated: true,
              isRequisite: true
            },
            type: 'String'
          }],
          kind: 'Fragment',
          metadata: {},
          name: 'Story',
          type: 'Story'
        }],
        fieldName: 'node',
        kind: 'Field',
        metadata: {
          inferredRootCallName: 'node',
          inferredPrimaryKey: 'id',
          isAbstract: true,
          isRequisite: true
        },
        type: 'Node'
      }, {
        fieldName: 'cursor',
        kind: 'Field',
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: 'String'
      }],
      fieldName: 'edges',
      kind: 'Field',
      metadata: {
        isPlural: true
      },
      type: 'NewsFeedConnectionEdge'
    }, {
      children: [{
        fieldName: 'hasNextPage',
        kind: 'Field',
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: 'Boolean'
      }, {
        fieldName: 'hasPreviousPage',
        kind: 'Field',
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: 'Boolean'
      }],
      fieldName: 'pageInfo',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'PageInfo'
    }],
    kind: 'Fragment',
    metadata: {},
    name: 'MetadataDynamic',
    type: 'NewsFeedConnection'
  };
})();
