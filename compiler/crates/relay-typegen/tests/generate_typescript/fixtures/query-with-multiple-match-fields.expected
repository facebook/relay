==================================== INPUT ====================================
query Test @raw_response_type {
  node(id: "1") {
    ... on User {
      username
      ...NameRendererFragment
    }
  }
  viewer {
    actor {
      ... on User {
        name
        ...AnotherNameRendererFragment
      }
    }
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment AnotherNameRendererFragment on User {
  name
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
==================================== OUTPUT ===================================
import { FragmentRefs, Local3DPayload } from "relay-runtime";
export type Test$variables = {};
export type Test$data = {
  readonly node: {
    readonly username?: string | null;
    readonly " $fragmentSpreads": FragmentRefs<"NameRendererFragment">;
  } | null;
  readonly viewer: {
    readonly actor: {
      readonly name?: string | null;
      readonly " $fragmentSpreads": FragmentRefs<"AnotherNameRendererFragment">;
    } | null;
  } | null;
};
export type PlainUserNameRenderer_name = {
  readonly plaintext: string | null;
  readonly data: {
    readonly text: string | null;
    readonly id: string | null;
  } | null;
};
export type MarkdownUserNameRenderer_name = {
  readonly markdown: string | null;
  readonly data: {
    readonly markup: string | null;
    readonly id: string | null;
  } | null;
};
export type Test$rawResponse = {
  readonly node: {
    readonly __typename: "User";
    readonly id: string;
    readonly username: string | null;
    readonly nameRenderer: {
      readonly __typename: "PlainUserNameRenderer";
      readonly __module_operation_NameRendererFragment: any | null;
      readonly __module_component_NameRendererFragment: any | null;
    } | Local3DPayload<"NameRendererFragment", {
      readonly __typename: "PlainUserNameRenderer";
    }> | {
      readonly __typename: "MarkdownUserNameRenderer";
      readonly __module_operation_NameRendererFragment: any | null;
      readonly __module_component_NameRendererFragment: any | null;
    } | Local3DPayload<"NameRendererFragment", {
      readonly __typename: "MarkdownUserNameRenderer";
    }> | {
      readonly __typename: string;
    } | null;
  } | {
    readonly __typename: string;
    readonly id: string;
  } | null;
  readonly viewer: {
    readonly actor: {
      readonly __typename: "User";
      readonly id: string;
      readonly name: string | null;
      readonly nameRenderer: {
        readonly __typename: "PlainUserNameRenderer";
        readonly __module_operation_AnotherNameRendererFragment: any | null;
        readonly __module_component_AnotherNameRendererFragment: any | null;
      } | Local3DPayload<"AnotherNameRendererFragment", {
        readonly __typename: "PlainUserNameRenderer";
      }> | {
        readonly __typename: "MarkdownUserNameRenderer";
        readonly __module_operation_AnotherNameRendererFragment: any | null;
        readonly __module_component_AnotherNameRendererFragment: any | null;
      } | Local3DPayload<"AnotherNameRendererFragment", {
        readonly __typename: "MarkdownUserNameRenderer";
      }> | {
        readonly __typename: string;
      } | null;
    } | {
      readonly __typename: string;
      readonly id: string;
    } | null;
  } | null;
};
export type Test = {
  variables: Test$variables;
  response: Test$data;
  rawResponse: Test$rawResponse;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type AnotherNameRendererFragment$data = {
  readonly name: string | null;
  readonly nameRenderer: {
    readonly __fragmentPropName?: string | null;
    readonly __module_component?: string | null;
    readonly " $fragmentSpreads": FragmentRefs<"PlainUserNameRenderer_name" | "MarkdownUserNameRenderer_name">;
  } | null;
  readonly " $fragmentType": "AnotherNameRendererFragment";
};
export type AnotherNameRendererFragment$key = {
  readonly " $data"?: AnotherNameRendererFragment$data;
  readonly " $fragmentSpreads": FragmentRefs<"AnotherNameRendererFragment">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type MarkdownUserNameRenderer_name$data = {
  readonly markdown: string | null;
  readonly data: {
    readonly markup: string | null;
  } | null;
  readonly " $fragmentType": "MarkdownUserNameRenderer_name";
};
export type MarkdownUserNameRenderer_name$key = {
  readonly " $data"?: MarkdownUserNameRenderer_name$data;
  readonly " $fragmentSpreads": FragmentRefs<"MarkdownUserNameRenderer_name">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type NameRendererFragment$data = {
  readonly id: string;
  readonly nameRenderer: {
    readonly __fragmentPropName?: string | null;
    readonly __module_component?: string | null;
    readonly " $fragmentSpreads": FragmentRefs<"PlainUserNameRenderer_name" | "MarkdownUserNameRenderer_name">;
  } | null;
  readonly " $fragmentType": "NameRendererFragment";
};
export type NameRendererFragment$key = {
  readonly " $data"?: NameRendererFragment$data;
  readonly " $fragmentSpreads": FragmentRefs<"NameRendererFragment">;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type PlainUserNameRenderer_name$data = {
  readonly plaintext: string | null;
  readonly data: {
    readonly text: string | null;
  } | null;
  readonly " $fragmentType": "PlainUserNameRenderer_name";
};
export type PlainUserNameRenderer_name$key = {
  readonly " $data"?: PlainUserNameRenderer_name$data;
  readonly " $fragmentSpreads": FragmentRefs<"PlainUserNameRenderer_name">;
};
