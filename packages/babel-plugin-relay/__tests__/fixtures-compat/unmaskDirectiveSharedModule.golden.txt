/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule CompatUtil
 */

'use strict';

const graphql = require('graphql');

module.exports = {
  viewer1: {
    modern: function () {
      return require('./__generated__/CompatUtil_viewer1.graphql');
    },
    classic: function (RelayQL_GENERATED) {
      return {
        kind: 'FragmentDefinition',
        argumentDefinitions: [],
        node: function () {
          return {
            children: [{
              children: [{
                fieldName: 'id',
                kind: 'Field',
                metadata: {
                  isRequisite: true
                },
                type: 'ID'
              }, {
                fieldName: 'name',
                kind: 'Field',
                metadata: {},
                type: 'String'
              }, {
                fieldName: '__typename',
                kind: 'Field',
                metadata: {
                  isGenerated: true,
                  isRequisite: true
                },
                type: 'String'
              }],
              fieldName: 'actor',
              kind: 'Field',
              metadata: {
                canHaveSubselections: true,
                inferredRootCallName: 'node',
                inferredPrimaryKey: 'id',
                isAbstract: true
              },
              type: 'Actor'
            }],
            id: RelayQL_GENERATED.__id(),
            kind: 'Fragment',
            metadata: {},
            name: 'CompatUtil_viewer1',
            type: 'Viewer'
          };
        }()
      };
    }
  },
  viewer2: {
    modern: function () {
      return require('./__generated__/CompatUtil_viewer2.graphql');
    },
    classic: function (RelayQL_GENERATED) {
      return {
        kind: 'FragmentDefinition',
        argumentDefinitions: [],
        node: function () {
          return {
            children: [{
              children: [{
                fieldName: 'id',
                kind: 'Field',
                metadata: {
                  isRequisite: true
                },
                type: 'ID'
              }, {
                fieldName: '__typename',
                kind: 'Field',
                metadata: {
                  isGenerated: true,
                  isRequisite: true
                },
                type: 'String'
              }],
              fieldName: 'actor',
              kind: 'Field',
              metadata: {
                canHaveSubselections: true,
                inferredRootCallName: 'node',
                inferredPrimaryKey: 'id',
                isAbstract: true
              },
              type: 'Actor'
            }],
            id: RelayQL_GENERATED.__id(),
            kind: 'Fragment',
            metadata: {},
            name: 'CompatUtil_viewer2',
            type: 'Viewer'
          };
        }()
      };
    }
  }
};
