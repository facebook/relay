==================================== INPUT ====================================
fragment Test on User {
  photo(h: 42, 12, scale: 2.0)
}
==================================== OUTPUT ===================================
ExecutableDocument {
    span: 0:57,
    definitions: [
        FragmentDefinition {
            location: argument-value-only-3.grahql:0:56,
            fragment: Token {
                span: 0:8,
                kind: Identifier,
            },
            name: Identifier {
                span: 9:13,
                token: Token {
                    span: 9:13,
                    kind: Identifier,
                },
                value: "Test",
            },
            variable_definitions: None,
            type_condition: TypeCondition {
                span: 14:21,
                on: Token {
                    span: 14:16,
                    kind: Identifier,
                },
                type_: Identifier {
                    span: 17:21,
                    token: Token {
                        span: 17:21,
                        kind: Identifier,
                    },
                    value: "User",
                },
            },
            directives: [],
            selections: List {
                span: 22:56,
                start: Token {
                    span: 22:23,
                    kind: OpenBrace,
                },
                items: [
                    ScalarField {
                        span: 26:54,
                        alias: None,
                        name: Identifier {
                            span: 26:31,
                            token: Token {
                                span: 26:31,
                                kind: Identifier,
                            },
                            value: "photo",
                        },
                        arguments: Some(
                            List {
                                span: 31:54,
                                start: Token {
                                    span: 31:32,
                                    kind: OpenParen,
                                },
                                items: [
                                    Argument {
                                        span: 32:37,
                                        name: Identifier {
                                            span: 32:33,
                                            token: Token {
                                                span: 32:33,
                                                kind: Identifier,
                                            },
                                            value: "h",
                                        },
                                        colon: Token {
                                            span: 33:34,
                                            kind: Colon,
                                        },
                                        value: Constant(
                                            Int(
                                                IntNode {
                                                    token: Token {
                                                        span: 35:37,
                                                        kind: IntegerLiteral,
                                                    },
                                                    value: 42,
                                                },
                                            ),
                                        ),
                                    },
                                    Argument {
                                        span: 39:41,
                                        name: Identifier {
                                            span: 37:37,
                                            token: Token {
                                                span: 37:37,
                                                kind: Empty,
                                            },
                                            value: "",
                                        },
                                        colon: Token {
                                            span: 41:41,
                                            kind: Empty,
                                        },
                                        value: Constant(
                                            Int(
                                                IntNode {
                                                    token: Token {
                                                        span: 39:41,
                                                        kind: IntegerLiteral,
                                                    },
                                                    value: 12,
                                                },
                                            ),
                                        ),
                                    },
                                    Argument {
                                        span: 43:53,
                                        name: Identifier {
                                            span: 43:48,
                                            token: Token {
                                                span: 43:48,
                                                kind: Identifier,
                                            },
                                            value: "scale",
                                        },
                                        colon: Token {
                                            span: 48:49,
                                            kind: Colon,
                                        },
                                        value: Constant(
                                            Float(
                                                FloatNode {
                                                    token: Token {
                                                        span: 50:53,
                                                        kind: FloatLiteral,
                                                    },
                                                    value: 2,
                                                    source_value: "2.0",
                                                },
                                            ),
                                        ),
                                    },
                                ],
                                end: Token {
                                    span: 53:54,
                                    kind: CloseParen,
                                },
                            },
                        ),
                        directives: [],
                    },
                ],
                end: Token {
                    span: 55:56,
                    kind: CloseBrace,
                },
            },
        },
    ],
}
Errors:
✖︎ Expected a colon (':')

  argument-value-only-3.grahql:2:14
    1 │ fragment Test on User {
    2 │   photo(h: 42, 12, scale: 2.0)
      │              ^^
    3 │ }


✖︎ Expected a non-variable identifier (e.g. 'x' or 'Foo')

  argument-value-only-3.grahql:2:16
    1 │ fragment Test on User {
    2 │   photo(h: 42, 12, scale: 2.0)
      │                ^
    3 │ }
