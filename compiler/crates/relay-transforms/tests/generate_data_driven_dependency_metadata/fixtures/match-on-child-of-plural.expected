==================================== INPUT ====================================
fragment ActorsRendererFragment on Node {
  id
  actors {
    nameRenderer @match {
      ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
      ...MarkdownUserNameRenderer_name
        @module(name: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
==================================== OUTPUT ===================================
fragment ActorsRendererFragment on Node @__RelayDataDrivenDependencyMetadata
# RelayDataDrivenDependencyMetadata {
#     direct_dependencies: Some(
#         [
#             (
#                 "ActorsRendererFragment.actors.nameRenderer",
#                 "{\"branches\":{\"MarkdownUserNameRenderer\":{\"component\":\"MarkdownUserNameRenderer.react\",\"fragment\":\"MarkdownUserNameRenderer_name$normalization.graphql\"},\"PlainUserNameRenderer\":{\"component\":\"PlainUserNameRenderer.react\",\"fragment\":\"PlainUserNameRenderer_name$normalization.graphql\"}},\"plural\":true}",
#             ),
#         ],
#     ),
#     indirect_dependencies: None,
# }
 {
  id
  actors {
    nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
      ... on PlainUserNameRenderer {
        ... on PlainUserNameRenderer @__ModuleMetadata
        # ModuleMetadata {
        #     location: match-on-child-of-plural.graphql:120:127,
        #     key: "ActorsRendererFragment",
        #     module_id: "ActorsRendererFragment.actors.nameRenderer",
        #     module_name: "PlainUserNameRenderer.react",
        #     source_document_name: FragmentDefinitionName(
        #         FragmentDefinitionName(
        #             "ActorsRendererFragment",
        #         ),
        #     ),
        #     fragment_name: FragmentDefinitionName(
        #         "PlainUserNameRenderer_name",
        #     ),
        #     fragment_source_location: match-on-child-of-plural.graphql:282:308,
        #     no_inline: false,
        # }
         {
          ...PlainUserNameRenderer_name
          __module_operation_ActorsRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "ActorsRendererFragment.actors.nameRenderer")
          __module_component_ActorsRendererFragment: js(module: "PlainUserNameRenderer.react", id: "ActorsRendererFragment.actors.nameRenderer")
        }
      }
      ... on MarkdownUserNameRenderer {
        ... on MarkdownUserNameRenderer @__ModuleMetadata
        # ModuleMetadata {
        #     location: match-on-child-of-plural.graphql:212:219,
        #     key: "ActorsRendererFragment",
        #     module_id: "ActorsRendererFragment.actors.nameRenderer",
        #     module_name: "MarkdownUserNameRenderer.react",
        #     source_document_name: FragmentDefinitionName(
        #         FragmentDefinitionName(
        #             "ActorsRendererFragment",
        #         ),
        #     ),
        #     fragment_name: FragmentDefinitionName(
        #         "MarkdownUserNameRenderer_name",
        #     ),
        #     fragment_source_location: match-on-child-of-plural.graphql:382:411,
        #     no_inline: false,
        # }
         {
          ...MarkdownUserNameRenderer_name
          __module_operation_ActorsRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "ActorsRendererFragment.actors.nameRenderer")
          __module_component_ActorsRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "ActorsRendererFragment.actors.nameRenderer")
        }
      }
    }
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}
