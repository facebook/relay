==================================== INPUT ====================================
# expected-to-throw

query conflictingSelectionsWithActorChangeQuery {
  ...conflictingSelectionsWithActorChange2_fragment
  ...conflictingSelectionsWithActorChange3_fragment
}

fragment conflictingSelectionsWithActorChange1_fragment on Actor {
  name
}

fragment conflictingSelectionsWithActorChange2_fragment on Query {
  username(name: "Alice") @fb_actor_change {
    ...conflictingSelectionsWithActorChange1_fragment
  }
}

fragment conflictingSelectionsWithActorChange3_fragment on Query {
  username(name: "Bob") @fb_actor_change {
    ...conflictingSelectionsWithActorChange1_fragment
  }
}
==================================== ERROR ====================================
âœ–ï¸Ž Expected all fields on the same parent with the name or alias `username` to have the same argument values after applying fragment arguments. This field has the applied argument values: (name: "Alice")

  conflicting-selections-with-actor-change.invalid.graphql:13:3
[1m   12 â”‚ [0mfragment conflictingSelectionsWithActorChange2_fragment on Query {
[1m   13 â”‚ [0m  [31mu[0m[31ms[0m[31me[0m[31mr[0m[31mn[0m[31ma[0m[31mm[0m[31me[0m(name: "Alice") @fb_actor_change {
      â”‚   ^^^^^^^^
   14 â”‚     ...conflictingSelectionsWithActorChange1_fragment

[31m  â„¹ï¸Ž which conflicts with this field with applied argument values (name: "Bob")[0m

  [4mconflicting-selections-with-actor-change.invalid.graphql[0m[2m:19:3[0m
[1m   18 â”‚ [0mfragment conflictingSelectionsWithActorChange3_fragment on Query {
   19 â”‚   username(name: "Bob") @fb_actor_change {
      â”‚   ^^^^^^^^
   20 â”‚     ...conflictingSelectionsWithActorChange1_fragment
