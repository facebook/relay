==================================== INPUT ====================================
fragment FlowRefetchableFragment on Node
  @refetchable(queryName: "FlowRefetchableFragmentQuery") {
  id
  ... on User {
    name
  }
}
==================================== OUTPUT ===================================
import type { FragmentReference } from "relay-runtime";
declare export opaque type FlowRefetchableFragment$ref: FragmentReference;
declare export opaque type FlowRefetchableFragment$fragmentType: FlowRefetchableFragment$ref;
export type FlowRefetchableFragmentQueryVariables = {|
  id: string
|};
export type FlowRefetchableFragmentQueryResponse = {|
  +node: ?{|
    +$fragmentRefs: FlowRefetchableFragment$ref
  |}
|};
export type FlowRefetchableFragmentQuery = {|
  variables: FlowRefetchableFragmentQueryVariables,
  response: FlowRefetchableFragmentQueryResponse,
|};
-------------------------------------------------------------------------------
import type { FragmentReference } from "relay-runtime";
import type { FlowRefetchableFragment$ref, FlowRefetchableFragment$fragmentType } from "FlowRefetchableFragmentQuery.graphql";
export type { FlowRefetchableFragment$ref, FlowRefetchableFragment$fragmentType };
export type FlowRefetchableFragment = {|
  +id: string,
  +name?: ?string,
  +$refType: FlowRefetchableFragment$ref,
|};
export type FlowRefetchableFragment$data = FlowRefetchableFragment;
export type FlowRefetchableFragment$key = {
  +$data?: FlowRefetchableFragment$data,
  +$fragmentRefs: FlowRefetchableFragment$ref,
  ...
};
