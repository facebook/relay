==================================== INPUT ====================================
# Reports full type, not just inner type

interface Node {
  id: ID!
}

type Pet implements Node {
  id: ID # <--- Missing !
}

# Subtypes for fields are allowed

interface InterfaceA {
  some_field: String
}

type TypeA implements InterfaceA {
  some_field: String! # More specific type of String! should be allowed
}

# Checks multiple interfaces

interface InterfaceB {
  some_field: String
}

interface InterfaceC {
  another_field: String
}

type TypeB implements InterfaceB & InterfaceC {
  some_field: String
  # Oops! Does not implement InterfaceC's field!
}

# Checks interface implements interface

interface InterfaceD {
  some_field: String
}

interface InterfaceE implements InterfaceD {
  # Oops! Does not implement InterfaceD's field
  another_field: String
}

# Checks multi-dimensional lists

interface InterfaceF {
  some_field: [[[String]]]
}

type TypeC implements InterfaceF {
  some_field: [[[Int]]] # Oops! Should be String in there
}

# Required for global validation

type Query {
  node: Node
}
==================================== OUTPUT ===================================
✖︎ Interface field 'Node.id' expects type 'ID!' but 'Pet.id' is of type 'ID'.

  validate_implements_interface.graphql:8:3
    7 │ type Pet implements Node {
    8 │   id: ID # <--- Missing !
      │   ^^
    9 │ }

  ℹ︎ The interface field is defined here:

  validate_implements_interface.graphql:4:3
    3 │ interface Node {
    4 │   id: ID!
      │   ^^
    5 │ }

✖︎ Interface field 'InterfaceC.another_field' expected but type 'TypeB' does not provide it.

  validate_implements_interface.graphql:31:6
   30 │ 
   31 │ type TypeB implements InterfaceB & InterfaceC {
      │      ^^^^^
   32 │   some_field: String

  ℹ︎ The interface field is defined here:

  validate_implements_interface.graphql:28:3
   27 │ interface InterfaceC {
   28 │   another_field: String
      │   ^^^^^^^^^^^^^
   29 │ }

✖︎ Interface field 'InterfaceD.some_field' expected but interface 'InterfaceE' does not provide it.

  validate_implements_interface.graphql:42:11
   41 │ 
   42 │ interface InterfaceE implements InterfaceD {
      │           ^^^^^^^^^^
   43 │   # Oops! Does not implement InterfaceD's field

  ℹ︎ The interface field is defined here:

  validate_implements_interface.graphql:39:3
   38 │ interface InterfaceD {
   39 │   some_field: String
      │   ^^^^^^^^^^
   40 │ }

✖︎ Interface field 'InterfaceF.some_field' expects type '[[[String]]]' but 'TypeC.some_field' is of type '[[[Int]]]'.

  validate_implements_interface.graphql:54:3
   53 │ type TypeC implements InterfaceF {
   54 │   some_field: [[[Int]]] # Oops! Should be String in there
      │   ^^^^^^^^^^
   55 │ }

  ℹ︎ The interface field is defined here:

  validate_implements_interface.graphql:50:3
   49 │ interface InterfaceF {
   50 │   some_field: [[[String]]]
      │   ^^^^^^^^^^
   51 │ }
