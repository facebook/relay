==================================== INPUT ====================================
# expected-to-throw

fragment Foo_user on User {
  todo {
    __typename
  }
}

# %extensions%

type Todo {
  todo_id: ID!
  blocked_by: TodoDependencies
}

type TodoDependencies {
  dependencies: [Todo]!
  blocked_by: [TodoDependencies]!
}

extend type User {
  todo: [Todo] @relay_resolver(import_path: "TodoResolver", has_output_type: true)
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž @RelayResolver type recursion detected for the output type `TodoDependencies`. This is not supported for `@outputType` resolvers. If you want to model a connection between two entities of the same GraphQL type, consider creating a new Relay Resolver with `@edgeTo` annotation.[0m

  [4moutput-type-with-nested-recursion.graphql[0m[2m:10:3[0m
[1m    9 â”‚ [0m  dependencies: [Todo]!
   10 â”‚   blocked_by: [TodoDependencies]!
      â”‚   ^^^^^^^^^^
   11 â”‚ }


[31mâœ–ï¸Ž @RelayResolver type recursion detected for the output type `Todo`. This is not supported for `@outputType` resolvers. If you want to model a connection between two entities of the same GraphQL type, consider creating a new Relay Resolver with `@edgeTo` annotation.[0m

  [4moutput-type-with-nested-recursion.graphql[0m[2m:9:3[0m
[1m    8 â”‚ [0mtype TodoDependencies {
[1m    9 â”‚ [0m  [31md[0m[31me[0m[31mp[0m[31me[0m[31mn[0m[31md[0m[31me[0m[31mn[0m[31mc[0m[31mi[0m[31me[0m[31ms[0m: [Todo]!
      â”‚ [31m  ^^^^^^^^^^^^[0m
[1m   10 â”‚ [0m  blocked_by: [TodoDependencies]!
