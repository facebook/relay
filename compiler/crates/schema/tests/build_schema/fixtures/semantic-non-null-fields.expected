==================================== INPUT ====================================
# relay:experimental_emit_semantic_nullability_types

schema {
  query: Query
}

type Query {
  foo: String @semanticNonNull
  foo_list: [String] @semanticNonNull
  foo_list_levels: [String] @semanticNonNull(levels: [1])
}
==================================== OUTPUT ===================================
Text Schema:Schema {
  query_type: Some(
    ObjectID(0),
)
  mutation_type: None
  subscription_type: None
  directives: [
    Directive {
        name: WithLocation {
            location: <generated>:255:262,
            item: DirectiveName(
                "include",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:263:265,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
    Directive {
        name: WithLocation {
            location: <generated>:334:338,
            item: DirectiveName(
                "skip",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:339:341,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
]
  type_map: {
    "Boolean": Scalar(3),
    "Float": Scalar(1),
    "ID": Scalar(4),
    "Int": Scalar(0),
    "Query": Object(0),
    "String": Scalar(2),
}
  enums: []
  fields: [
    Field {
        name: WithLocation {
            location: <generated>:96:99,
            item: "foo",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(2),
            ),
        ),
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "semanticNonNull",
                ),
                arguments: [],
            },
        ],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:127:135,
            item: "foo_list",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            List(
                Named(
                    Scalar(2),
                ),
            ),
        ),
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "semanticNonNull",
                ),
                arguments: [],
            },
        ],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:165:180,
            item: "foo_list_levels",
        },
        is_extension: false,
        arguments: [],
        type_: List(
            NonNull(
                Named(
                    Scalar(2),
                ),
            ),
        ),
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "semanticNonNull",
                ),
                arguments: [
                    ArgumentValue {
                        name: ArgumentName(
                            "levels",
                        ),
                        value: List(
                            List {
                                span: 216:219,
                                start: Token {
                                    span: 216:217,
                                    kind: OpenBracket,
                                },
                                items: [
                                    Int(
                                        IntNode {
                                            token: Token {
                                                span: 217:218,
                                                kind: IntegerLiteral,
                                            },
                                            value: 1,
                                        },
                                    ),
                                ],
                                end: Token {
                                    span: 218:219,
                                    kind: CloseBracket,
                                },
                            },
                        ),
                    },
                ],
            },
        ],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "__typename",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(2),
            ),
        ),
        directives: [],
        parent_type: None,
        description: Some(
            "This object's GraphQL type. Provided by GraphQL type name introspection.",
        ),
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "__token",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: None,
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "__id",
        },
        is_extension: true,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: None,
        description: Some(
            "Relay's cache key for this object.",
        ),
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "strong_id__",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(4),
        ),
        directives: [],
        parent_type: None,
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "is_fulfilled__",
        },
        is_extension: true,
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "name",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(2),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        type_: NonNull(
            Named(
                Scalar(2),
            ),
        ),
        directives: [],
        parent_type: None,
        description: None,
        hack_source: None,
    },
]
  input_objects: []
  interfaces: []
  objects: [
    Object {
        name: WithLocation {
            location: <generated>:86:91,
            item: ObjectName(
                "Query",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(0),
            FieldID(1),
            FieldID(2),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
]
  scalars: [
    Scalar {
        name: WithLocation {
            location: <generated>:187:190,
            item: ScalarName(
                "Int",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:198:203,
            item: ScalarName(
                "Float",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:211:217,
            item: ScalarName(
                "String",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:225:232,
            item: ScalarName(
                "Boolean",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:240:242,
            item: ScalarName(
                "ID",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
]
  unions: []
  }

FlatBuffer Schema:FB Schema {
directives: [
    Directive {
        name: WithLocation {
            location: <generated>:0:0,
            item: DirectiveName(
                "include",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(0),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
    Directive {
        name: WithLocation {
            location: <generated>:0:0,
            item: DirectiveName(
                "skip",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(0),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
]
enums: []
fields: [
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "foo",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "semanticNonNull",
                ),
                arguments: [],
            },
        ],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "foo_list",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            List(
                Named(
                    Scalar(4),
                ),
            ),
        ),
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "semanticNonNull",
                ),
                arguments: [],
            },
        ],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "foo_list_levels",
        },
        is_extension: false,
        arguments: [],
        type_: List(
            NonNull(
                Named(
                    Scalar(4),
                ),
            ),
        ),
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "semanticNonNull",
                ),
                arguments: [
                    ArgumentValue {
                        name: ArgumentName(
                            "levels",
                        ),
                        value: List(
                            List {
                                span: 0:0,
                                start: Token {
                                    span: 0:0,
                                    kind: EndOfFile,
                                },
                                items: [
                                    Int(
                                        IntNode {
                                            token: Token {
                                                span: 0:0,
                                                kind: EndOfFile,
                                            },
                                            value: 1,
                                        },
                                    ),
                                ],
                                end: Token {
                                    span: 0:0,
                                    kind: EndOfFile,
                                },
                            },
                        ),
                    },
                ],
            },
        ],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
]
input_objects: []
interfaces: []
objects: [
    Object {
        name: WithLocation {
            location: <generated>:0:0,
            item: ObjectName(
                "Query",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(0),
            FieldID(1),
            FieldID(2),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
]
scalars: [
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "Boolean",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "Float",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "ID",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "Int",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "String",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
]
unions: []
}
