==================================== INPUT ====================================
fragment clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_resolver_fragment on Query {
  me {
    id
  }

  # Normalization AST should wrap this as a client field.
  client_field
}

query clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_Query {
  client_edge {
    name
  }
}

# %extensions%

type ClientType {
  name: String
}

extend type Query {
  client_edge: ClientType
    @relay_resolver(
      fragment_name: "clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_resolver_fragment"
      import_path: "./path/to/Resolver.js"
    )
  client_field: String
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": {
      "hasClientEdges": true
    },
    "name": "clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_Query",
    "selections": [
      {
        "kind": "ClientEdgeToClientObject",
        "concreteType": "ClientType",
        "modelResolvers": null,
        "backingField": {
          "alias": null,
          "args": null,
          "fragment": {
            "args": null,
            "kind": "FragmentSpread",
            "name": "clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_resolver_fragment"
          },
          "kind": "RelayResolver",
          "name": "client_edge",
          "resolverModule": require('Resolver'),
          "path": "client_edge"
        },
        "linkedField": {
          "alias": null,
          "args": null,
          "concreteType": "ClientType",
          "kind": "LinkedField",
          "name": "client_edge",
          "plural": false,
          "selections": [
            {
              "alias": null,
              "args": null,
              "kind": "ScalarField",
              "name": "name",
              "storageKey": null
            }
          ],
          "storageKey": null
        }
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [],
    "kind": "Operation",
    "name": "clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_Query",
    "selections": [
      {
        "kind": "ClientEdgeToClientObject",
        "backingField": {
          "name": "client_edge",
          "args": null,
          "fragment": {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": null,
                "args": null,
                "concreteType": "User",
                "kind": "LinkedField",
                "name": "me",
                "plural": false,
                "selections": [
                  {
                    "alias": null,
                    "args": null,
                    "kind": "ScalarField",
                    "name": "id",
                    "storageKey": null
                  }
                ],
                "storageKey": null
              },
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "alias": null,
                    "args": null,
                    "kind": "ScalarField",
                    "name": "client_field",
                    "storageKey": null
                  }
                ]
              }
            ],
            "type": "Query",
            "abstractKey": null
          },
          "kind": "RelayResolver",
          "storageKey": null,
          "isOutputType": false
        },
        "linkedField": {
          "alias": null,
          "args": null,
          "concreteType": "ClientType",
          "kind": "LinkedField",
          "name": "client_edge",
          "plural": false,
          "selections": [
            {
              "alias": null,
              "args": null,
              "kind": "ScalarField",
              "name": "name",
              "storageKey": null
            }
          ],
          "storageKey": null
        }
      }
    ]
  },
  "params": {
    "cacheID": "3d675f9b767fb294fdda4feb3f5cd033",
    "id": null,
    "metadata": {},
    "name": "clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_Query",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_Query {
  ...clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_resolver_fragment
}

fragment clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_resolver_fragment on Query {
  me {
    id
  }
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "clientEdgeFromServerTypeToClientTypeFragmentReadsClientField_resolver_fragment",
  "selections": [
    {
      "alias": null,
      "args": null,
      "concreteType": "User",
      "kind": "LinkedField",
      "name": "me",
      "plural": false,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "id",
          "storageKey": null
        }
      ],
      "storageKey": null
    },
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "client_field",
          "storageKey": null
        }
      ]
    }
  ],
  "type": "Query",
  "abstractKey": null
}
