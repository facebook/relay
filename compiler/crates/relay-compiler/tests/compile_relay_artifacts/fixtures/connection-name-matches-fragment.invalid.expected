==================================== INPUT ====================================
# expected-to-throw
query connectionNameMatchesFragmentQuery {
  ...connectionNameMatchesFragmentFragment
}

fragment connectionNameMatchesFragmentFragment on Query 
@argumentDefinitions(first: { type: "Int", defaultValue: 2 }, after: { type: "ID" })
  # This name matches the parent fragment, which violates an invariant that every
  # query/fragment have a unique name.
  @refetchable(queryName: "connectionNameMatchesFragmentFragment") {
  node(id: "4") {
    id
    ... on Story {
      comments(first: $first, after: $after) @connection(key: "NodeQuery_comments") {
        edges {
          node {
            id
          }
        }
      }
    }
  }
}
==================================== ERROR ====================================
✖︎ The `queryName` specified in `@refetchable` must be unique, a definition with the name `connectionNameMatchesFragmentFragment` already exists.

  connection-name-matches-fragment.invalid.graphql:10:27
    9 │   # query/fragment have a unique name.
   10 │   @refetchable(queryName: "connectionNameMatchesFragmentFragment") {
      │                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   11 │   node(id: "4") {

  ℹ︎ a fragment with that name is already defined here

  connection-name-matches-fragment.invalid.graphql:6:10
    5 │ 
    6 │ fragment connectionNameMatchesFragmentFragment on Query 
      │          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    7 │ @argumentDefinitions(first: { type: "Int", defaultValue: 2 }, after: { type: "ID" })
