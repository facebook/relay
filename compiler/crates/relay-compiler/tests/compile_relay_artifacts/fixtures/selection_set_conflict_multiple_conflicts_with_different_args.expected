==================================== INPUT ====================================
# expected-to-throw
query selectionSetConflictMultipleConflictsWithDifferentArgsQuery {
  root_alias: nodes(ids: [1, 2, 3]) {
    ... on Page {
      same_alias: actor_key
    }
  }
  root_alias: nodes(ids: [1, 2]) {
    ... on Actor {
      same_alias: id
    }
  }
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž Field 'same_alias' is ambiguous because it references two different fields: 'actor_key' and 'id'[0m

  [4mselection_set_conflict_multiple_conflicts_with_different_args.graphql[0m[2m:5:19[0m
[1m    4 â”‚ [0m    ... on Page {
[1m    5 â”‚ [0m      same_alias: [31ma[0m[31mc[0m[31mt[0m[31mo[0m[31mr[0m[31m_[0m[31mk[0m[31me[0m[31my[0m
      â”‚ [31m                  ^^^^^^^^^[0m
[1m    6 â”‚ [0m    }

[31m  â„¹ï¸Ž the other field[0m

  [4mselection_set_conflict_multiple_conflicts_with_different_args.graphql[0m[2m:10:19[0m
[1m    9 â”‚ [0m    ... on Actor {
[1m   10 â”‚ [0m      same_alias: id
      â”‚                   ^^
   11 â”‚     }


âœ–ï¸Ž Expected all fields on the same parent with the name or alias `root_alias` to have the same argument values after applying fragment arguments. This field has the applied argument values: (ids: [1, 2, 3])

  selection_set_conflict_multiple_conflicts_with_different_args.graphql:3:15
    2 â”‚ query selectionSetConflictMultipleConflictsWithDifferentArgsQuery {
    3 â”‚   root_alias: nodes(ids: [1, 2, 3]) {
      â”‚ [31m              ^^^^^[0m
[1m    4 â”‚ [0m    ... on Page {

[31m  â„¹ï¸Ž which conflicts with this field with applied argument values (ids: [1, 2])[0m

  [4mselection_set_conflict_multiple_conflicts_with_different_args.graphql[0m[2m:8:15[0m
    7 â”‚   }
    8 â”‚   root_alias: nod[31me[0m[31ms[0m(ids: [1, 2]) {
      â”‚ [31m              ^^^^^[0m
[1m    9 â”‚ [0m    ... on Actor {
