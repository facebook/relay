// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GraphQLIRPrinter matches expected output: kitchen-sink.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery(
  $cond: Boolean! = false
  $id: ID!
  $size: [Int] = [32]
  $query: String!
) {
  node(id: $id) {
    id
    ... on User @include(if: $cond) {
      name
    }
    ...UserFragment @include(if: $cond) @arguments(size: $size)
  }
  checkinSearchQuery(query: {query: $query, inputs: [{query: $query}, {query: "test"}]}) {
    query
  }
}

fragment UserFragment on User @argumentDefinitions(
  after: {type: "ID"}
  first: {type: "Int", defaultValue: 5}
  size: {type: "[Int]"}
) {
  id
  __typename
  checkins(environments: [WEB]) {
    __typename
  }
  nakedEnum: checkins(environments: WEB) {
    __typename
  }
  friends(after: $after, first: $first, traits: [HELPFUL]) {
    count
  }
  name @include(if: $cond)
  otherName: name @customDirective(level: 3)
  thumbnail: profilePicture(size: 32) {
    height
    width
    src: uri
  }
  profilePicture(size: $size) @include(if: $cond) @skip(if: $foo) {
    height
    width
    src: uri
  }
  storySearch(query: {type: DIRECTED}) {
    id
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
query NodeQuery(
  $cond: Boolean! = false
  $id: ID!
  $size: [Int] = [32]
  $query: String!
) {
  node(id: $id) {
    id
    ... on User @include(if: $cond) {
      name
    }
    ...UserFragment @include(if: $cond) @arguments(size: $size)
  }
  checkinSearchQuery(query: {query: $query, inputs: [{query: $query}, {query: "test"}]}) {
    query
  }
}

fragment UserFragment on User @argumentDefinitions(
  after: {type: "ID"}
  first: {type: "Int", defaultValue: 5}
  size: {type: "[Int]"}
) {
  id
  __typename
  checkins(environments: [WEB]) {
    __typename
  }
  nakedEnum: checkins(environments: WEB) {
    __typename
  }
  friends(after: $after, first: $first, traits: [HELPFUL]) {
    count
  }
  name @include(if: $cond)
  otherName: name @customDirective(level: 3)
  thumbnail: profilePicture(size: 32) {
    height
    width
    src: uri
  }
  profilePicture(size: $size) @include(if: $cond) @skip(if: $foo) {
    height
    width
    src: uri
  }
  storySearch(query: {type: DIRECTED}) {
    id
  }
}

`;
