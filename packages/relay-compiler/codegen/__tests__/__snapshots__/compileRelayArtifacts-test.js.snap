// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compileRelayArtifacts matches expected output: client-fields.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query BestFriendsQuery($id: ID!) {
  node(id: $id) {
    ...BestFriends
    ...OnlyClientFields
  }
}

# This fragment disappears because all selections are removed
fragment OnlyClientFields on User {
  best_friends {
    __typename
  }
}

fragment BestFriends on User {
  # this is the only field that is part of the base schema
  ...NodeFragment
  # fields defined in type extensions are skipped
  best_friends {
    edges {
      cursor
      node {
        id
      }
    }
    pageInfo {
      hasNextPage
    }
  }
  ... on Named {
    # fragments on extension types are skipped
    ...FooFragment
    ... on Foo {
      name
    }
  }
}

fragment NodeFragment on Node {
  id
}

fragment FooFragment on Foo {
  name
}

extend type User {
  best_friends: FriendsConnection
}

type Foo implements Named {
  name: String
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "BestFriendsQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "BestFriends",
            "args": null
          },
          {
            "kind": "FragmentSpread",
            "name": "OnlyClientFields",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "BestFriendsQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query BestFriendsQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...BestFriends
    id
  }
}

fragment BestFriends on User {
  ...NodeFragment
}

fragment NodeFragment on Node {
  id
}


{
  "kind": "Fragment",
  "name": "OnlyClientFields",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "best_friends",
      "storageKey": null,
      "args": null,
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "__typename",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "BestFriends",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "best_friends",
      "storageKey": null,
      "args": null,
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "edges",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsEdge",
          "plural": true,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "cursor",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "node",
              "storageKey": null,
              "args": null,
              "concreteType": "User",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "id",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        },
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "pageInfo",
          "storageKey": null,
          "args": null,
          "concreteType": "PageInfo",
          "plural": false,
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "hasNextPage",
              "args": null,
              "storageKey": null
            }
          ]
        }
      ]
    },
    {
      "kind": "FragmentSpread",
      "name": "NodeFragment",
      "args": null
    },
    {
      "kind": "FragmentSpread",
      "name": "FooFragment",
      "args": null
    },
    {
      "kind": "InlineFragment",
      "type": "Foo",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NodeFragment",
  "type": "Node",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "FooFragment",
  "type": "Foo",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: connection.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery($id: ID!) {
  node(id: $id) {
    id
    ... on Story {
      comments(first: 10) @connection(key: "NodeQuery_comments") {
        edges {
          node {
            actor {
              name
              friends(first: 10) @connection(key: "NodeQuery_friends") {
                edges {
                  node {
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "comments",
                "name": "__NodeQuery_comments_connection",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "LinkedField",
                                "alias": "friends",
                                "name": "__NodeQuery_friends_connection",
                                "storageKey": null,
                                "args": null,
                                "concreteType": "FriendsConnection",
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "edges",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "FriendsEdge",
                                    "plural": true,
                                    "selections": [
                                      {
                                        "kind": "LinkedField",
                                        "alias": null,
                                        "name": "node",
                                        "storageKey": null,
                                        "args": null,
                                        "concreteType": "User",
                                        "plural": false,
                                        "selections": [
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "name",
                                            "args": null,
                                            "storageKey": null
                                          },
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "__typename",
                                            "args": null,
                                            "storageKey": null
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "cursor",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "pageInfo",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "PageInfo",
                                    "plural": false,
                                    "selections": [
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "endCursor",
                                        "args": null,
                                        "storageKey": null
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "hasNextPage",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "LinkedField",
                                "alias": null,
                                "name": "friends",
                                "storageKey": "friends(first:10)",
                                "args": [
                                  {
                                    "kind": "Literal",
                                    "name": "first",
                                    "value": 10,
                                    "type": "Int"
                                  }
                                ],
                                "concreteType": "FriendsConnection",
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "edges",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "FriendsEdge",
                                    "plural": true,
                                    "selections": [
                                      {
                                        "kind": "LinkedField",
                                        "alias": null,
                                        "name": "node",
                                        "storageKey": null,
                                        "args": null,
                                        "concreteType": "User",
                                        "plural": false,
                                        "selections": [
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "name",
                                            "args": null,
                                            "storageKey": null
                                          },
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "id",
                                            "args": null,
                                            "storageKey": null
                                          },
                                          {
                                            "kind": "ScalarField",
                                            "alias": null,
                                            "name": "__typename",
                                            "args": null,
                                            "storageKey": null
                                          }
                                        ]
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "cursor",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  },
                                  {
                                    "kind": "LinkedField",
                                    "alias": null,
                                    "name": "pageInfo",
                                    "storageKey": null,
                                    "args": null,
                                    "concreteType": "PageInfo",
                                    "plural": false,
                                    "selections": [
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "endCursor",
                                        "args": null,
                                        "storageKey": null
                                      },
                                      {
                                        "kind": "ScalarField",
                                        "alias": null,
                                        "name": "hasNextPage",
                                        "args": null,
                                        "storageKey": null
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "kind": "LinkedHandle",
                                "alias": null,
                                "name": "friends",
                                "args": [
                                  {
                                    "kind": "Literal",
                                    "name": "first",
                                    "value": 10,
                                    "type": "Int"
                                  }
                                ],
                                "handle": "connection",
                                "key": "NodeQuery_friends",
                                "filters": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "handle": "connection",
                "key": "NodeQuery_comments",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ... on Story {
      comments(first: 10) {
        edges {
          node {
            actor {
              __typename
              name
              friends(first: 10) {
                edges {
                  node {
                    name
                    id
                    __typename
                  }
                  cursor
                }
                pageInfo {
                  endCursor
                  hasNextPage
                }
              }
              id
            }
            id
            __typename
          }
          cursor
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: connection-with-aliased-edges-pageInfo.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    id
    ... on Story {
      comments(first: 10) @connection(key: "NodeQuery_comments") {
        commentEdges: edges {
          node {
            actor {
              name
            }
          }
        }
        commentPageInfo: pageInfo {
          hasNextPage
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "comments",
                "name": "__NodeQuery_comments_connection",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": "commentEdges",
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "commentPageInfo",
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": "commentEdges",
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "commentPageInfo",
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "handle": "connection",
                "key": "NodeQuery_comments",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ... on Story {
      comments(first: 10) {
        commentEdges: edges {
          node {
            actor {
              __typename
              name
              id
            }
            id
          }
        }
        commentPageInfo: pageInfo {
          hasNextPage
        }
        edges {
          cursor
          node {
            __typename
            id
          }
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: fragment-on-node-interface.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Node @refetchable(queryName: "RefetchableFragmentQuery") {
  id
  ... on User {
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size",
                    "type": "[Int]"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...RefetchableFragment
    id
  }
}

fragment RefetchableFragment on Node {
  id
  ... on User {
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Node",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "FragmentSpread",
          "name": "ProfilePicture",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-object-implementing-node-interface.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on User @refetchable(queryName: "RefetchableFragmentQuery") {
  id
  name
  ...ProfilePicture
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size",
                    "type": "[Int]"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...RefetchableFragment
    id
  }
}

fragment RefetchableFragment on User {
  id
  name
  ...ProfilePicture
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "User",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "FragmentSpread",
      "name": "ProfilePicture",
      "args": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-query.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Query @refetchable(queryName: "RefetchableFragmentQuery") @argumentDefinitions(id: {type: "ID!"}) {
  node(id: $id) {
    ... on User {
      id
      name
      ...ProfilePicture
    }
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "FragmentSpread",
        "name": "RefetchableFragment",
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "profilePicture",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "size",
                    "type": "[Int]"
                  }
                ],
                "concreteType": "Image",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "uri",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $id: ID!
  $size: [Int]
) {
  ...RefetchableFragment_1Bmzm5
}

fragment RefetchableFragment_1Bmzm5 on Query {
  node(id: $id) {
    __typename
    ... on User {
      id
      name
      ...ProfilePicture
    }
    id
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Query",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": []
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "id",
      "type": "ID!",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "node",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "id",
          "variableName": "id",
          "type": "ID"
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "User",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "id",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "ScalarField",
              "alias": null,
              "name": "name",
              "args": null,
              "storageKey": null
            },
            {
              "kind": "FragmentSpread",
              "name": "ProfilePicture",
              "args": null
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-on-query-with-cycle.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Query @refetchable(queryName: "RefetchableFragmentQuery") @argumentDefinitions(id: {type: "ID!"}) {
  node(id: $id) {
    ... on User {
      id
      name
      ...Profile @arguments(includeProfile: true)
    }
  }
}

fragment Profile on User @argumentDefinitions(includeProfile: {type: "Boolean!", defaultValue: false}) {
  id
  name
  profilePicture(size: $pictureSize) {
    uri
  }
  friends(first: $count) {
    edges {
      node {
        ...Profile
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
THROWN EXCEPTION:

Error: Found a circular reference from fragment 'Profile'.

Source (derived): GraphQL request (1:1)
1: fragment RefetchableFragment on Query @refetchable(queryName: "RefetchableFragmentQuery") @argumentDefinitions(id: {type: "ID!"}) {
   ^
2:   node(id: $id) {

Source (derived): GraphQL request (1:1)
1: fragment RefetchableFragment on Query @refetchable(queryName: "RefetchableFragmentQuery") @argumentDefinitions(id: {type: "ID!"}) {
   ^
2:   node(id: $id) {

Source: GraphQL request (6:7)
5:       name
6:       ...Profile @arguments(includeProfile: true)
         ^
7:     }

Source: GraphQL request (20:9)
19:       node {
20:         ...Profile
            ^
21:       }

Source: GraphQL request (20:9)
19:       node {
20:         ...Profile
            ^
21:       }

`;

exports[`compileRelayArtifacts matches expected output: fragment-on-viewer.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment RefetchableFragment on Viewer @refetchable(queryName: "RefetchableFragmentQuery") {
  actor {
    id
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "viewer",
        "name": "__viewer_viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "RefetchableFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "size",
        "type": "[Int]",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "profilePicture",
                    "storageKey": null,
                    "args": [
                      {
                        "kind": "Variable",
                        "name": "size",
                        "variableName": "size",
                        "type": "[Int]"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "kind": "LinkedHandle",
        "alias": null,
        "name": "viewer",
        "args": null,
        "handle": "viewer",
        "key": "",
        "filters": null
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $size: [Int]
) {
  viewer {
    ...RefetchableFragment
  }
}

fragment RefetchableFragment on Viewer {
  actor {
    __typename
    id
    name
    ...ProfilePicture
  }
}

fragment ProfilePicture on User {
  profilePicture(size: $size) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "RefetchableFragment",
  "type": "Viewer",
  "metadata": {
    "refetch": {
      "connection": null,
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "viewer"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "actor",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "FragmentSpread",
          "name": "ProfilePicture",
          "args": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "ProfilePicture",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "size",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-defer-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithFragmentWithDefer {
  me {
    id
    ...UserFragment
  }
}

fragment UserFragment on User {
  id
  emailAddresses
  ...DeferredFragment @defer(label: "DeferredFragmentLabel") @arguments(scale: 1.5)
}

fragment DeferredFragment on User
@argumentDefinitions(scale: {type: "Float"}) {
  id
  name
  profile_picture(scale: $scale) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithFragmentWithDefer",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "UserFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithFragmentWithDefer",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "emailAddresses",
            "args": null,
            "storageKey": null
          },
          {
            "if": null,
            "kind": "Defer",
            "label": "UserFragment$defer$DeferredFragmentLabel",
            "metadata": null,
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "id",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "name",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "profile_picture",
                    "storageKey": "profile_picture(scale:1.5)",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "scale",
                        "value": 1.5,
                        "type": "Float"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithFragmentWithDefer {
  me {
    id
    ...UserFragment
  }
}

fragment UserFragment on User {
  id
  emailAddresses
  ...DeferredFragment_QMvSr @defer(label: "UserFragment$defer$DeferredFragmentLabel")
}

fragment DeferredFragment_QMvSr on User {
  id
  name
  profile_picture(scale: 1.5) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "UserFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "emailAddresses",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "FragmentSpread",
      "name": "DeferredFragment",
      "args": [
        {
          "kind": "Literal",
          "name": "scale",
          "value": 1.5,
          "type": "Float"
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "DeferredFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "scale",
      "type": "Float",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profile_picture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "scale",
          "variableName": "scale",
          "type": "Float"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-match-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(MarkdownUserNameRenderer_name:MarkdownUserNameRenderer.react,PlainUserNameRenderer_name:PlainUserNameRenderer.react)",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ],
          "type": "[String!]!"
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "PlainUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "PlainUserNameRenderer_name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "MarkdownUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "MarkdownUserNameRenderer_name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: fragment-with-stream.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query QueryWithFragmentWithStream($id: ID!) {
  node(id: $id) {
    id
    ...FeedbackFragment
  }
}

fragment FeedbackFragment on Feedback {
  id
  actors @stream(initial_count: 1, label: "StreamedActorsLabel") {
    name
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "QueryWithFragmentWithStream",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "FragmentSpread",
            "name": "FeedbackFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "QueryWithFragmentWithStream",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Feedback",
            "selections": [
              {
                "if": null,
                "kind": "Stream",
                "label": "FeedbackFragment$stream$StreamedActorsLabel",
                "metadata": null,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "actors",
                    "storageKey": null,
                    "args": null,
                    "concreteType": null,
                    "plural": true,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "__typename",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "name",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "id",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query QueryWithFragmentWithStream(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ...FeedbackFragment
  }
}

fragment FeedbackFragment on Feedback {
  id
  actors @stream(label: "FeedbackFragment$stream$StreamedActorsLabel", initial_count: 1) {
    __typename
    name
    id
  }
}


{
  "kind": "Fragment",
  "name": "FeedbackFragment",
  "type": "Feedback",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "actors",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": true,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: kitchen-sink.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery($id: ID! $cond: Boolean! $PictureSize: [Int]!) {
  node(id: $id) {
    id
    ... on User @include(if: $cond) {
      name
    }
    ...UserFragment @include(if: $cond) @arguments(size: $PictureSize)
  }
}

fragment UserFragment on User @argumentDefinitions(
  after: {type: "ID"}
  cond: {type: "Boolean!", defaultValue: false}
  first: {type: "Int", defaultValue: 5}
  size: {type: "[Int]"}
) {
  id
  __typename
  friends(after: $after, first: $first) {
    count
  }
  name @include(if: $cond)
  thumbnail: profilePicture(size: 32) {
    height
    width
    src: uri
  }
  profilePicture(size: $size) {
    height
    width
    src: uri
  }
  scaled: profilePicture(size: $PictureSize) {
    uri
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cond",
        "type": "Boolean!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "PictureSize",
        "type": "[Int]!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "Condition",
            "passingValue": true,
            "condition": "cond",
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "name",
                    "args": null,
                    "storageKey": null
                  }
                ]
              },
              {
                "kind": "FragmentSpread",
                "name": "UserFragment",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "size",
                    "variableName": "PictureSize",
                    "type": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "cond",
        "type": "Boolean!",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "PictureSize",
        "type": "[Int]!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "Condition",
            "passingValue": true,
            "condition": "cond",
            "selections": [
              {
                "kind": "InlineFragment",
                "type": "User",
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "name",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "friends",
                    "storageKey": "friends(first:5)",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "first",
                        "value": 5,
                        "type": "Int"
                      }
                    ],
                    "concreteType": "FriendsConnection",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "count",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "thumbnail",
                    "name": "profilePicture",
                    "storageKey": "profilePicture(size:32)",
                    "args": [
                      {
                        "kind": "Literal",
                        "name": "size",
                        "value": 32,
                        "type": "[Int]"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "height",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "width",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": "src",
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "profilePicture",
                    "storageKey": null,
                    "args": [
                      {
                        "kind": "Variable",
                        "name": "size",
                        "variableName": "PictureSize",
                        "type": "[Int]"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "height",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "width",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": "src",
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": "scaled",
                    "name": "profilePicture",
                    "storageKey": null,
                    "args": [
                      {
                        "kind": "Variable",
                        "name": "size",
                        "variableName": "PictureSize",
                        "type": "[Int]"
                      }
                    ],
                    "concreteType": "Image",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "uri",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
  $cond: Boolean!
  $PictureSize: [Int]!
) {
  node(id: $id) {
    __typename
    id
    ... on User @include(if: $cond) {
      name
    }
  ...UserFragment_3M2EvT @include(if: $cond)
  }
}

fragment UserFragment_3M2EvT on User {
  id
  __typename
  friends(first: 5) {
    count
  }
  thumbnail: profilePicture(size: 32) {
    height
    width
    src: uri
  }
  profilePicture(size: $PictureSize) {
    height
    width
    src: uri
  }
  scaled: profilePicture(size: $PictureSize) {
    uri
  }
}


{
  "kind": "Fragment",
  "name": "UserFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "after",
      "type": "ID",
      "defaultValue": null
    },
    {
      "kind": "LocalArgument",
      "name": "cond",
      "type": "Boolean!",
      "defaultValue": false
    },
    {
      "kind": "LocalArgument",
      "name": "first",
      "type": "Int",
      "defaultValue": 5
    },
    {
      "kind": "LocalArgument",
      "name": "size",
      "type": "[Int]",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "PictureSize",
      "type": "[Int]"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "__typename",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "friends",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "after",
          "variableName": "after",
          "type": "ID"
        },
        {
          "kind": "Variable",
          "name": "first",
          "variableName": "first",
          "type": "Int"
        }
      ],
      "concreteType": "FriendsConnection",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "count",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": "thumbnail",
      "name": "profilePicture",
      "storageKey": "profilePicture(size:32)",
      "args": [
        {
          "kind": "Literal",
          "name": "size",
          "value": 32,
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": "src",
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "size",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": "src",
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "LinkedField",
      "alias": "scaled",
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "PictureSize",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "uri",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "Condition",
      "passingValue": true,
      "condition": "cond",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: linked-handle-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query LinkedHandleField($id: ID!) {
  node(id: $id) {
    ... on User {
      friends(first: 10) @__clientField(handle: "clientFriends") {
        count
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "LinkedHandleField",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "friends",
                "name": "__friends_clientFriends",
                "storageKey": null,
                "args": null,
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "count",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "LinkedHandleField",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": "friends(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "count",
                    "args": null,
                    "storageKey": null
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "handle": "clientFriends",
                "key": "",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query LinkedHandleField(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ... on User {
      friends(first: 10) {
        count
      }
    }
    id
  }
}

`;

exports[`compileRelayArtifacts matches expected output: match-on-child-of-plural.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment ActorsRendererFragment on Node {
  id
  actors {
    nameRenderer @match {
      ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
      ...MarkdownUserNameRenderer_name
        @module(name: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "ActorsRendererFragment",
  "type": "Node",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "actors",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": true,
      "selections": [
        {
          "kind": "LinkedField",
          "alias": null,
          "name": "nameRenderer",
          "storageKey": "nameRenderer(MarkdownUserNameRenderer_name:MarkdownUserNameRenderer.react,PlainUserNameRenderer_name:PlainUserNameRenderer.react)",
          "args": [
            {
              "kind": "Literal",
              "name": "supported",
              "value": [
                "PlainUserNameRenderer",
                "MarkdownUserNameRenderer"
              ],
              "type": "[String!]!"
            }
          ],
          "concreteType": null,
          "plural": false,
          "selections": [
            {
              "kind": "InlineFragment",
              "type": "PlainUserNameRenderer",
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": "__module_component",
                  "name": "js",
                  "args": [
                    {
                      "kind": "Literal",
                      "name": "module",
                      "value": "PlainUserNameRenderer.react",
                      "type": "String"
                    }
                  ],
                  "storageKey": "__module_component"
                },
                {
                  "kind": "ModuleImport",
                  "fragmentPropName": "name",
                  "fragmentName": "PlainUserNameRenderer_name"
                }
              ]
            },
            {
              "kind": "InlineFragment",
              "type": "MarkdownUserNameRenderer",
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": "__module_component",
                  "name": "js",
                  "args": [
                    {
                      "kind": "Literal",
                      "name": "module",
                      "value": "MarkdownUserNameRenderer.react",
                      "type": "String"
                    }
                  ],
                  "storageKey": "__module_component"
                },
                {
                  "kind": "ModuleImport",
                  "fragmentPropName": "name",
                  "fragmentName": "MarkdownUserNameRenderer_name"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: plural-fragment.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PluralFragment on User @relay(plural: true) {
  name
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "PluralFragment",
  "type": "User",
  "metadata": {
    "plural": true
  },
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "name",
      "args": null,
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": "nameRenderer(MarkdownUserNameRenderer_name:MarkdownUserNameRenderer.react,PlainUserNameRenderer_name:PlainUserNameRenderer.react)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "supported",
                    "value": [
                      "PlainUserNameRenderer",
                      "MarkdownUserNameRenderer"
                    ],
                    "type": "[String!]!"
                  }
                ],
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": "__module_component",
                        "name": "js",
                        "args": [
                          {
                            "kind": "Literal",
                            "name": "module",
                            "value": "PlainUserNameRenderer.react",
                            "type": "String"
                          }
                        ],
                        "storageKey": "__module_component"
                      },
                      {
                        "kind": "ModuleImport",
                        "fragmentPropName": "name",
                        "fragmentName": "PlainUserNameRenderer_name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": "__module_component",
                        "name": "js",
                        "args": [
                          {
                            "kind": "Literal",
                            "name": "module",
                            "value": "MarkdownUserNameRenderer.react",
                            "type": "String"
                          }
                        ],
                        "storageKey": "__module_component"
                      },
                      {
                        "kind": "ModuleImport",
                        "fragmentPropName": "name",
                        "fragmentName": "MarkdownUserNameRenderer_name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    __typename
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation: js(module: "PlainUserNameRenderer_name$normalization.graphql")
      __module_component: js(module: "PlainUserNameRenderer.react")
    }
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation: js(module: "MarkdownUserNameRenderer_name$normalization.graphql")
      __module_component: js(module: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": "__module_operation",
      "name": "js",
      "args": [
        {
          "kind": "Literal",
          "name": "module",
          "value": "PlainUserNameRenderer_name$normalization.graphql",
          "type": "String"
        }
      ],
      "storageKey": "__module_operation"
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": "__module_operation",
      "name": "js",
      "args": [
        {
          "kind": "Literal",
          "name": "module",
          "value": "MarkdownUserNameRenderer_name$normalization.graphql",
          "type": "String"
        }
      ],
      "storageKey": "__module_operation"
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(MarkdownUserNameRenderer_name:MarkdownUserNameRenderer.react,PlainUserNameRenderer_name:PlainUserNameRenderer.react)",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ],
          "type": "[String!]!"
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "PlainUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "PlainUserNameRenderer_name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "MarkdownUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "MarkdownUserNameRenderer_name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-match-directive-no-inline-experimental.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": "nameRenderer(MarkdownUserNameRenderer_name:MarkdownUserNameRenderer.react,PlainUserNameRenderer_name:PlainUserNameRenderer.react)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "supported",
                    "value": [
                      "PlainUserNameRenderer",
                      "MarkdownUserNameRenderer"
                    ],
                    "type": "[String!]!"
                  }
                ],
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "PlainUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": "__module_component",
                        "name": "js",
                        "args": [
                          {
                            "kind": "Literal",
                            "name": "module",
                            "value": "PlainUserNameRenderer.react",
                            "type": "String"
                          }
                        ],
                        "storageKey": "__module_component"
                      },
                      {
                        "kind": "ModuleImport",
                        "fragmentPropName": "name",
                        "fragmentName": "PlainUserNameRenderer_name"
                      }
                    ]
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": "__module_component",
                        "name": "js",
                        "args": [
                          {
                            "kind": "Literal",
                            "name": "module",
                            "value": "MarkdownUserNameRenderer.react",
                            "type": "String"
                          }
                        ],
                        "storageKey": "__module_component"
                      },
                      {
                        "kind": "ModuleImport",
                        "fragmentPropName": "name",
                        "fragmentName": "MarkdownUserNameRenderer_name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    __typename
    ... on PlainUserNameRenderer {
      ...PlainUserNameRenderer_name
      __module_operation: js(module: "PlainUserNameRenderer_name$normalization.graphql")
      __module_component: js(module: "PlainUserNameRenderer.react")
    }
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation: js(module: "MarkdownUserNameRenderer_name$normalization.graphql")
      __module_component: js(module: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
    id
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "PlainUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "PlainUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": "__module_operation",
      "name": "js",
      "args": [
        {
          "kind": "Literal",
          "name": "module",
          "value": "PlainUserNameRenderer_name$normalization.graphql",
          "type": "String"
        }
      ],
      "storageKey": "__module_operation"
    }
  ]
}

{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": "__module_operation",
      "name": "js",
      "args": [
        {
          "kind": "Literal",
          "name": "module",
          "value": "MarkdownUserNameRenderer_name$normalization.graphql",
          "type": "String"
        }
      ],
      "storageKey": "__module_operation"
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": "nameRenderer(MarkdownUserNameRenderer_name:MarkdownUserNameRenderer.react,PlainUserNameRenderer_name:PlainUserNameRenderer.react)",
      "args": [
        {
          "kind": "Literal",
          "name": "supported",
          "value": [
            "PlainUserNameRenderer",
            "MarkdownUserNameRenderer"
          ],
          "type": "[String!]!"
        }
      ],
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "PlainUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "PlainUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "PlainUserNameRenderer_name"
            }
          ]
        },
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "MarkdownUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "MarkdownUserNameRenderer_name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "PlainUserNameRenderer_name",
  "type": "PlainUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "plaintext",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "PlainUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "text",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: query-with-module-directive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...NameRendererFragment
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer { # note: intentionally no @match here
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NameRendererQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "NameRendererFragment",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NameRendererQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "nameRenderer",
                "storageKey": null,
                "args": null,
                "concreteType": null,
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "__typename",
                    "args": null,
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "type": "MarkdownUserNameRenderer",
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": "__module_component",
                        "name": "js",
                        "args": [
                          {
                            "kind": "Literal",
                            "name": "module",
                            "value": "MarkdownUserNameRenderer.react",
                            "type": "String"
                          }
                        ],
                        "storageKey": "__module_component"
                      },
                      {
                        "kind": "ModuleImport",
                        "fragmentPropName": "name",
                        "fragmentName": "MarkdownUserNameRenderer_name"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...NameRendererFragment
    id
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderer {
    __typename
    ... on MarkdownUserNameRenderer {
      ...MarkdownUserNameRenderer_name
      __module_operation: js(module: "MarkdownUserNameRenderer_name$normalization.graphql")
      __module_component: js(module: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}


{
  "kind": "SplitOperation",
  "name": "MarkdownUserNameRenderer_name$normalization",
  "metadata": {
    "derivedFrom": "MarkdownUserNameRenderer_name"
  },
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "id",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": "__module_operation",
      "name": "js",
      "args": [
        {
          "kind": "Literal",
          "name": "module",
          "value": "MarkdownUserNameRenderer_name$normalization.graphql",
          "type": "String"
        }
      ],
      "storageKey": "__module_operation"
    }
  ]
}

{
  "kind": "Fragment",
  "name": "NameRendererFragment",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "nameRenderer",
      "storageKey": null,
      "args": null,
      "concreteType": null,
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "type": "MarkdownUserNameRenderer",
          "selections": [
            {
              "kind": "ScalarField",
              "alias": "__module_component",
              "name": "js",
              "args": [
                {
                  "kind": "Literal",
                  "name": "module",
                  "value": "MarkdownUserNameRenderer.react",
                  "type": "String"
                }
              ],
              "storageKey": "__module_component"
            },
            {
              "kind": "ModuleImport",
              "fragmentPropName": "name",
              "fragmentName": "MarkdownUserNameRenderer_name"
            }
          ]
        }
      ]
    }
  ]
}

{
  "kind": "Fragment",
  "name": "MarkdownUserNameRenderer_name",
  "type": "MarkdownUserNameRenderer",
  "metadata": null,
  "argumentDefinitions": [],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "markdown",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "data",
      "storageKey": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "markup",
          "args": null,
          "storageKey": null
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: refetchable-fragment-with-connection.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PaginationFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 10},
    cursor: {type: "ID"},
  ) {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count)
      @connection(key: "PaginationFragment_friends") {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "PaginationFragment",
            "args": [
              {
                "kind": "Variable",
                "name": "count",
                "variableName": "count",
                "type": "Int"
              },
              {
                "kind": "Variable",
                "name": "cursor",
                "variableName": "cursor",
                "type": "ID"
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor",
                    "type": "ID"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count",
                    "type": "Int"
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "FriendsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "User",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor",
                    "type": "ID"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count",
                    "type": "Int"
                  }
                ],
                "handle": "connection",
                "key": "PaginationFragment_friends",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $count: Int = 10
  $cursor: ID
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...PaginationFragment_1G22uz
    id
  }
}

fragment PaginationFragment_1G22uz on Node {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count) {
      edges {
        node {
          id
          __typename
        }
        cursor
      }
      pageInfo {
        endCursor
        hasNextPage
      }
    }
  }
}


{
  "kind": "Fragment",
  "name": "PaginationFragment",
  "type": "Node",
  "metadata": {
    "connection": [
      {
        "count": "count",
        "cursor": "cursor",
        "direction": "forward",
        "path": [
          "friends"
        ]
      }
    ],
    "refetch": {
      "connection": {
        "forward": {
          "count": "count",
          "cursor": "cursor"
        },
        "backward": null,
        "path": [
          "friends"
        ]
      },
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "count",
      "type": "Int",
      "defaultValue": 10
    },
    {
      "kind": "LocalArgument",
      "name": "cursor",
      "type": "ID",
      "defaultValue": null
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": "friends",
          "name": "__PaginationFragment_friends_connection",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    },
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "__typename",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "endCursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: refetchable-fragment-with-connection-bidirectional.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment PaginationFragment on Node
  @refetchable(queryName: "RefetchableFragmentQuery")
  @argumentDefinitions(
    count: {type: "Int", defaultValue: 10},
    cursor: {type: "ID"},
  ) {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count, before: $beforeCursor, last: $lastCount)
      @connection(key: "PaginationFragment_friends") {
      edges {
        node {
          id
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "RefetchableFragmentQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "beforeCursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "lastCount",
        "type": "Int",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "PaginationFragment",
            "args": [
              {
                "kind": "Variable",
                "name": "count",
                "variableName": "count",
                "type": "Int"
              },
              {
                "kind": "Variable",
                "name": "cursor",
                "variableName": "cursor",
                "type": "ID"
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "RefetchableFragmentQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "count",
        "type": "Int",
        "defaultValue": 10
      },
      {
        "kind": "LocalArgument",
        "name": "cursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "beforeCursor",
        "type": "ID",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "lastCount",
        "type": "Int",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID!"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "friends",
                "storageKey": null,
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor",
                    "type": "ID"
                  },
                  {
                    "kind": "Variable",
                    "name": "before",
                    "variableName": "beforeCursor",
                    "type": "ID"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count",
                    "type": "Int"
                  },
                  {
                    "kind": "Variable",
                    "name": "last",
                    "variableName": "lastCount",
                    "type": "Int"
                  }
                ],
                "concreteType": "FriendsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "FriendsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "User",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "id",
                            "args": null,
                            "storageKey": null
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasPreviousPage",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "startCursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "friends",
                "args": [
                  {
                    "kind": "Variable",
                    "name": "after",
                    "variableName": "cursor",
                    "type": "ID"
                  },
                  {
                    "kind": "Variable",
                    "name": "before",
                    "variableName": "beforeCursor",
                    "type": "ID"
                  },
                  {
                    "kind": "Variable",
                    "name": "first",
                    "variableName": "count",
                    "type": "Int"
                  },
                  {
                    "kind": "Variable",
                    "name": "last",
                    "variableName": "lastCount",
                    "type": "Int"
                  }
                ],
                "handle": "connection",
                "key": "PaginationFragment_friends",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query RefetchableFragmentQuery(
  $count: Int = 10
  $cursor: ID
  $beforeCursor: ID
  $lastCount: Int
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...PaginationFragment_1G22uz
    id
  }
}

fragment PaginationFragment_1G22uz on Node {
  id
  ... on User {
    name
    friends(after: $cursor, first: $count, before: $beforeCursor, last: $lastCount) {
      edges {
        node {
          id
          __typename
        }
        cursor
      }
      pageInfo {
        endCursor
        hasNextPage
        hasPreviousPage
        startCursor
      }
    }
  }
}


{
  "kind": "Fragment",
  "name": "PaginationFragment",
  "type": "Node",
  "metadata": {
    "connection": [
      {
        "count": null,
        "cursor": null,
        "direction": "bidirectional",
        "path": [
          "friends"
        ]
      }
    ],
    "refetch": {
      "connection": {
        "forward": {
          "count": "count",
          "cursor": "cursor"
        },
        "backward": {
          "count": "lastCount",
          "cursor": "beforeCursor"
        },
        "path": [
          "friends"
        ]
      },
      "operation": require('RefetchableFragmentQuery.graphql'),
      "fragmentPathInResult": [
        "node"
      ]
    }
  },
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "count",
      "type": "Int",
      "defaultValue": 10
    },
    {
      "kind": "LocalArgument",
      "name": "cursor",
      "type": "ID",
      "defaultValue": null
    },
    {
      "kind": "RootArgument",
      "name": "beforeCursor",
      "type": "ID"
    },
    {
      "kind": "RootArgument",
      "name": "lastCount",
      "type": "Int"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "id",
      "args": null,
      "storageKey": null
    },
    {
      "kind": "InlineFragment",
      "type": "User",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "name",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "LinkedField",
          "alias": "friends",
          "name": "__PaginationFragment_friends_connection",
          "storageKey": null,
          "args": null,
          "concreteType": "FriendsConnection",
          "plural": false,
          "selections": [
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "edges",
              "storageKey": null,
              "args": null,
              "concreteType": "FriendsEdge",
              "plural": true,
              "selections": [
                {
                  "kind": "LinkedField",
                  "alias": null,
                  "name": "node",
                  "storageKey": null,
                  "args": null,
                  "concreteType": "User",
                  "plural": false,
                  "selections": [
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "id",
                      "args": null,
                      "storageKey": null
                    },
                    {
                      "kind": "ScalarField",
                      "alias": null,
                      "name": "__typename",
                      "args": null,
                      "storageKey": null
                    }
                  ]
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "cursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            },
            {
              "kind": "LinkedField",
              "alias": null,
              "name": "pageInfo",
              "storageKey": null,
              "args": null,
              "concreteType": "PageInfo",
              "plural": false,
              "selections": [
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "endCursor",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasNextPage",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "hasPreviousPage",
                  "args": null,
                  "storageKey": null
                },
                {
                  "kind": "ScalarField",
                  "alias": null,
                  "name": "startCursor",
                  "args": null,
                  "storageKey": null
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: scalar-handle-field.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query ScalarHandleField($id: ID!) {
  node(id: $id) {
    ... on User {
      name @__clientField(handle: "clientName")
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "ScalarHandleField",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": "name",
                "name": "__name_clientName",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "ScalarHandleField",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "User",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarHandle",
                "alias": null,
                "name": "name",
                "args": null,
                "handle": "clientName",
                "key": "",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query ScalarHandleField(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ... on User {
      name
    }
    id
  }
}

`;

exports[`compileRelayArtifacts matches expected output: stream-connection.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    id
    ... on Story {
      comments(first: 10)
      @stream_connection(
        key: "NodeQuery_comments"
        initial_count: 0
        label: "comments"
      ) {
        edges {
          node {
            actor {
              name
            }
          }
        }
        pageInfo {
          endCursor
          hasNextPage
        }
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "NodeQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": "comments",
                "name": "__NodeQuery_comments_connection",
                "storageKey": null,
                "args": null,
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "edges",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "CommentsEdge",
                    "plural": true,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "node",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "Comment",
                        "plural": false,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "actor",
                            "storageKey": null,
                            "args": null,
                            "concreteType": null,
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "name",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "__typename",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "cursor",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  },
                  {
                    "kind": "LinkedField",
                    "alias": null,
                    "name": "pageInfo",
                    "storageKey": null,
                    "args": null,
                    "concreteType": "PageInfo",
                    "plural": false,
                    "selections": [
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "endCursor",
                        "args": null,
                        "storageKey": null
                      },
                      {
                        "kind": "ScalarField",
                        "alias": null,
                        "name": "hasNextPage",
                        "args": null,
                        "storageKey": null
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "NodeQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "id",
        "type": "ID!",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "node",
        "storageKey": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id",
            "type": "ID"
          }
        ],
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "comments",
                "storageKey": "comments(first:10)",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "concreteType": "CommentsConnection",
                "plural": false,
                "selections": [
                  {
                    "if": null,
                    "kind": "Stream",
                    "label": "NodeQuery$stream$comments",
                    "metadata": null,
                    "selections": [
                      {
                        "kind": "LinkedField",
                        "alias": null,
                        "name": "edges",
                        "storageKey": null,
                        "args": null,
                        "concreteType": "CommentsEdge",
                        "plural": true,
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "node",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "Comment",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "LinkedField",
                                "alias": null,
                                "name": "actor",
                                "storageKey": null,
                                "args": null,
                                "concreteType": null,
                                "plural": false,
                                "selections": [
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "__typename",
                                    "args": null,
                                    "storageKey": null
                                  },
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "name",
                                    "args": null,
                                    "storageKey": null
                                  },
                                  {
                                    "kind": "ScalarField",
                                    "alias": null,
                                    "name": "id",
                                    "args": null,
                                    "storageKey": null
                                  }
                                ]
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "id",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "__typename",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          },
                          {
                            "kind": "ScalarField",
                            "alias": null,
                            "name": "cursor",
                            "args": null,
                            "storageKey": null
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "if": null,
                    "kind": "Defer",
                    "label": "NodeQuery$defer$comments$pageInfo",
                    "metadata": null,
                    "selections": [
                      {
                        "kind": "InlineFragment",
                        "type": "CommentsConnection",
                        "selections": [
                          {
                            "kind": "LinkedField",
                            "alias": null,
                            "name": "pageInfo",
                            "storageKey": null,
                            "args": null,
                            "concreteType": "PageInfo",
                            "plural": false,
                            "selections": [
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "endCursor",
                                "args": null,
                                "storageKey": null
                              },
                              {
                                "kind": "ScalarField",
                                "alias": null,
                                "name": "hasNextPage",
                                "args": null,
                                "storageKey": null
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "kind": "LinkedHandle",
                "alias": null,
                "name": "comments",
                "args": [
                  {
                    "kind": "Literal",
                    "name": "first",
                    "value": 10,
                    "type": "Int"
                  }
                ],
                "handle": "connection",
                "key": "NodeQuery_comments",
                "filters": null
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query NodeQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    id
    ... on Story {
      comments(first: 10) {
        edges @stream(label: "NodeQuery$stream$comments", initial_count: 0) {
          node {
            actor {
              __typename
              name
              id
            }
            id
            __typename
          }
          cursor
        }
        ... on CommentsConnection @defer(label: "NodeQuery$defer$comments$pageInfo") {
          pageInfo {
            endCursor
            hasNextPage
          }
        }
      }
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: unions.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query UnionQuery {
  maybeNode {
    ... on NonNode {
      name
    }
    ... on Story {
      id
      body {
        text
      }
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "UnionQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "maybeNode",
        "storageKey": null,
        "args": null,
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "type": "NonNode",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "body",
                "storageKey": null,
                "args": null,
                "concreteType": "Text",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "text",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "UnionQuery",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "maybeNode",
        "storageKey": null,
        "args": null,
        "concreteType": null,
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "__typename",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "type": "NonNode",
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "name",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "InlineFragment",
            "type": "Story",
            "selections": [
              {
                "kind": "LinkedField",
                "alias": null,
                "name": "body",
                "storageKey": null,
                "args": null,
                "concreteType": "Text",
                "plural": false,
                "selections": [
                  {
                    "kind": "ScalarField",
                    "alias": null,
                    "name": "text",
                    "args": null,
                    "storageKey": null
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}

QUERY:

query UnionQuery {
  maybeNode {
    __typename
    ... on NonNode {
      name
    }
    ... on Story {
      id
      body {
        text
      }
    }
    ... on Node {
      id
    }
    ... on FakeNode {
      id
    }
  }
}

`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-dup-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
fragment UserUtil_user on User
  # it should not strip exisiting local variable
  @argumentDefinitions(
    localIsRelative: {type: "Boolean", defaultValue: false}
  ) {
  # it should not strip existing global variable
  profilePicture(size: $PictureSize) {
    width
    height
  }
  ...UserUtil2_user @relay(mask: false)

  # it should merge with the same existing global variable
  url(relative: $globalIsRelative)
  anotherUrl: url(relative: $localIsRelative)
}

fragment UserUtil2_user on User {
  url(relative: $globalIsRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Fragment",
  "name": "UserUtil_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "LocalArgument",
      "name": "localIsRelative",
      "type": "Boolean",
      "defaultValue": false
    },
    {
      "kind": "RootArgument",
      "name": "PictureSize",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "globalIsRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "PictureSize",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "globalIsRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    },
    {
      "kind": "ScalarField",
      "alias": "anotherUrl",
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "localIsRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil2_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "globalIsRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "globalIsRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-global-arguments.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
) {
  me {
    ...UserProfile_user
  }
}

fragment UserProfile_user on User {
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  ...UserUtil_user @relay(mask: false)
}

fragment UserUtil_user on User {
  url(relative: $isRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "TestQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "UserProfile_user",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "TestQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "profilePicture",
            "storageKey": null,
            "args": [
              {
                "kind": "Variable",
                "name": "size",
                "variableName": "ProfilePicture_SIZE",
                "type": "[Int]"
              }
            ],
            "concreteType": "Image",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "width",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "height",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "url",
            "args": [
              {
                "kind": "Variable",
                "name": "relative",
                "variableName": "isRelative",
                "type": "Boolean"
              }
            ],
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
) {
  me {
    ...UserProfile_user
    id
  }
}

fragment UserProfile_user on User {
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  url(relative: $isRelative)
}


{
  "kind": "Fragment",
  "name": "UserProfile_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "ProfilePicture_SIZE",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "ProfilePicture_SIZE",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: unmasked-fragment-spreads-recursive.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
  $showFirstName: Boolean
) {
  me {
    ...UserProfile_user
  }
}

fragment UserProfile_user on User {
  firstName(if: $showFirstName)
  ...UserUtil_user @relay(mask: false)
}

fragment UserUtil_user on User {
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  ...UserUtil2_user @relay(mask: false)
}

fragment UserUtil2_user on User {
  url(relative: $isRelative)
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "TestQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "showFirstName",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "FragmentSpread",
            "name": "UserProfile_user",
            "args": null
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "TestQuery",
    "argumentDefinitions": [
      {
        "kind": "LocalArgument",
        "name": "ProfilePicture_SIZE",
        "type": "[Int]",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "isRelative",
        "type": "Boolean",
        "defaultValue": null
      },
      {
        "kind": "LocalArgument",
        "name": "showFirstName",
        "type": "Boolean",
        "defaultValue": null
      }
    ],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "me",
        "storageKey": null,
        "args": null,
        "concreteType": "User",
        "plural": false,
        "selections": [
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "firstName",
            "args": [
              {
                "kind": "Variable",
                "name": "if",
                "variableName": "showFirstName",
                "type": "Boolean"
              }
            ],
            "storageKey": null
          },
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "profilePicture",
            "storageKey": null,
            "args": [
              {
                "kind": "Variable",
                "name": "size",
                "variableName": "ProfilePicture_SIZE",
                "type": "[Int]"
              }
            ],
            "concreteType": "Image",
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "width",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "height",
                "args": null,
                "storageKey": null
              }
            ]
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "url",
            "args": [
              {
                "kind": "Variable",
                "name": "relative",
                "variableName": "isRelative",
                "type": "Boolean"
              }
            ],
            "storageKey": null
          },
          {
            "kind": "ScalarField",
            "alias": null,
            "name": "id",
            "args": null,
            "storageKey": null
          }
        ]
      }
    ]
  }
}

QUERY:

query TestQuery(
  $ProfilePicture_SIZE: [Int]
  $isRelative: Boolean
  $showFirstName: Boolean
) {
  me {
    ...UserProfile_user
    id
  }
}

fragment UserProfile_user on User {
  firstName(if: $showFirstName)
  profilePicture(size: $ProfilePicture_SIZE) {
    width
    height
  }
  url(relative: $isRelative)
}


{
  "kind": "Fragment",
  "name": "UserProfile_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "showFirstName",
      "type": "Boolean"
    },
    {
      "kind": "RootArgument",
      "name": "ProfilePicture_SIZE",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "firstName",
      "args": [
        {
          "kind": "Variable",
          "name": "if",
          "variableName": "showFirstName",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    },
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "ProfilePicture_SIZE",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "ProfilePicture_SIZE",
      "type": "[Int]"
    },
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "name": "profilePicture",
      "storageKey": null,
      "args": [
        {
          "kind": "Variable",
          "name": "size",
          "variableName": "ProfilePicture_SIZE",
          "type": "[Int]"
        }
      ],
      "concreteType": "Image",
      "plural": false,
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "width",
          "args": null,
          "storageKey": null
        },
        {
          "kind": "ScalarField",
          "alias": null,
          "name": "height",
          "args": null,
          "storageKey": null
        }
      ]
    },
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}

{
  "kind": "Fragment",
  "name": "UserUtil2_user",
  "type": "User",
  "metadata": null,
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "isRelative",
      "type": "Boolean"
    }
  ],
  "selections": [
    {
      "kind": "ScalarField",
      "alias": null,
      "name": "url",
      "args": [
        {
          "kind": "Variable",
          "name": "relative",
          "variableName": "isRelative",
          "type": "Boolean"
        }
      ],
      "storageKey": null
    }
  ]
}
`;

exports[`compileRelayArtifacts matches expected output: viewer-query.graphql 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
query ViewerQuery {
  viewer {
    actor {
      id
    }
  }
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
{
  "kind": "Request",
  "fragment": {
    "kind": "Fragment",
    "name": "ViewerQuery",
    "type": "Query",
    "metadata": null,
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": "viewer",
        "name": "__viewer_viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      }
    ]
  },
  "operation": {
    "kind": "Operation",
    "name": "ViewerQuery",
    "argumentDefinitions": [],
    "selections": [
      {
        "kind": "LinkedField",
        "alias": null,
        "name": "viewer",
        "storageKey": null,
        "args": null,
        "concreteType": "Viewer",
        "plural": false,
        "selections": [
          {
            "kind": "LinkedField",
            "alias": null,
            "name": "actor",
            "storageKey": null,
            "args": null,
            "concreteType": null,
            "plural": false,
            "selections": [
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "__typename",
                "args": null,
                "storageKey": null
              },
              {
                "kind": "ScalarField",
                "alias": null,
                "name": "id",
                "args": null,
                "storageKey": null
              }
            ]
          }
        ]
      },
      {
        "kind": "LinkedHandle",
        "alias": null,
        "name": "viewer",
        "args": null,
        "handle": "viewer",
        "key": "",
        "filters": null
      }
    ]
  }
}

QUERY:

query ViewerQuery {
  viewer {
    actor {
      __typename
      id
    }
  }
}

`;
