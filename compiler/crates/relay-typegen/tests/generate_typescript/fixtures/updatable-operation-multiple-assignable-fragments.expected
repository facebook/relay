==================================== INPUT ====================================
query UpdatableQuery @updatable {
  me {
    actor {
      ...Assignable_page
      ...Assignable_node
      lastName
      name
    }
  }
}

fragment Assignable_node on Node @assignable {
  __typename
}

fragment Assignable_page on Page @assignable {
  __typename
}
==================================== OUTPUT ===================================
import { FragmentRefs } from "relay-runtime";
export type UpdatableQuery$variables = Record<PropertyKey, never>;
export type UpdatableQuery$data = {
  get me(): {
    get actor(): {
      lastName: string | null | undefined;
      name: string | null | undefined;
    } | null | undefined;
    set actor(value: {
      readonly __typename: "Page";
      readonly __id: string;
      readonly " $fragmentSpreads": FragmentRefs<"Assignable_page">;
    } | {
      readonly __id: string;
      readonly __isAssignable_node: string;
      readonly " $fragmentSpreads": FragmentRefs<"Assignable_node">;
    } | null | undefined);
  } | null | undefined;
  set me(value: null | undefined);
};
export type UpdatableQuery = {
  response: UpdatableQuery$data;
  variables: UpdatableQuery$variables;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type Assignable_node$data = {
  readonly __typename: string;
  readonly " $fragmentType": "Assignable_node";
};
export type Assignable_node$key = {
  readonly " $data"?: Assignable_node$data;
  readonly " $fragmentSpreads": FragmentRefs<"Assignable_node">;
};
module.exports.validate = function validate(value: {
  readonly __id: string;
  readonly __isAssignable_node?: string;
  readonly " $fragmentSpreads": Assignable_node$fragmentType;
}): false | {
  readonly __id: string;
  readonly __isAssignable_node: string;
  readonly " $fragmentSpreads": Assignable_node$fragmentType;
} {
  return value.__isAssignable_node != null ? value : false;
};
-------------------------------------------------------------------------------
import { FragmentRefs } from "relay-runtime";
export type Assignable_page$data = {
  readonly __typename: "Page";
  readonly " $fragmentType": "Assignable_page";
} | {
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  readonly __typename: "%other";
  readonly " $fragmentType": "Assignable_page";
};
export type Assignable_page$key = {
  readonly " $data"?: Assignable_page$data;
  readonly " $fragmentSpreads": FragmentRefs<"Assignable_page">;
};
module.exports.validate = function validate(value: {
  readonly __typename: string;
  readonly __id: string;
  readonly " $fragmentSpreads": Assignable_page$fragmentType;
}): false | {
  readonly __typename: "Page";
  readonly __id: string;
  readonly " $fragmentSpreads": Assignable_page$fragmentType;
} {
  return value.__typename === 'Page' ? value : false;
};
