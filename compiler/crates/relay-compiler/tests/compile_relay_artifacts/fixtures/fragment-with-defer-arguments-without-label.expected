==================================== INPUT ====================================
# expected-to-throw

query fragmentWithDeferArgumentsWithoutLabel_QueryWithFragmentWithDeferQuery {
  me {
    id
    ...fragmentWithDeferArgumentsWithoutLabel_UserFragment
  }
}

fragment fragmentWithDeferArgumentsWithoutLabel_UserFragment on User {
  id
  emailAddresses
  ...fragmentWithDeferArgumentsWithoutLabel_DeferredFragment @defer @arguments(scale: 1.5)
  ...fragmentWithDeferArgumentsWithoutLabel_DeferredFragment @defer @arguments(scale: 2)
}

fragment fragmentWithDeferArgumentsWithoutLabel_DeferredFragment on User @argumentDefinitions(scale: {type: "Float"}) {
  id
  name
  profile_picture(scale: $scale) {
    uri
  }
}
==================================== ERROR ====================================
âœ–ï¸Ž Expected all fields on the same parent with the name or alias `profile_picture` to have the same argument values after applying fragment arguments. This field has the applied argument values: (scale: 1.5)

  fragment-with-defer-arguments-without-label.graphql:20:3
   19 â”‚   name
[1m   20 â”‚ [0m  [31mp[0m[31mr[0m[31mo[0m[31mf[0m[31mi[0m[31ml[0m[31me[0m[31m_[0m[31mp[0m[31mi[0m[31mc[0m[31mt[0m[31mu[0m[31mr[0m[31me[0m(scale: $scale) {
      â”‚   ^^^^^^^^^^^^^^^
   21 â”‚     uri

[31m  â„¹ï¸Ž which conflicts with this field with applied argument values (scale: 2)[0m

  [4mfragment-with-defer-arguments-without-label.graphql[0m[2m:20:3[0m
[1m   19 â”‚ [0m  name
   20 â”‚   p[31mr[0m[31mo[0m[31mf[0m[31mi[0m[31ml[0me_picture(scale: $scale) {
      â”‚   ^^^^^^^^^^^^^^^
   21 â”‚     uri
