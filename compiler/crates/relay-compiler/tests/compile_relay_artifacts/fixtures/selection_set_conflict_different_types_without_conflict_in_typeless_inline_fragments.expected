==================================== INPUT ====================================
query selectionSetConflictDifferentTypesWithoutConflictInTypelessInlineFragmentsQuery {
  username(name: "me") {
    ... on User {
      ... @include(if: true) {
        same_alias: lastName
      }
    }
    ... on Page {
      ... @skip(if: false) {
        same_alias: name
      }
    }
  }
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "selectionSetConflictDifferentTypesWithoutConflictInTypelessInlineFragmentsQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "name",
            "value": "me"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "username",
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": "same_alias",
                "args": null,
                "kind": "ScalarField",
                "name": "lastName",
                "storageKey": null
              }
            ],
            "type": "User",
            "abstractKey": null
          },
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": "same_alias",
                "args": null,
                "kind": "ScalarField",
                "name": "name",
                "storageKey": null
              }
            ],
            "type": "Page",
            "abstractKey": null
          }
        ],
        "storageKey": "username(name:\"me\")"
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [],
    "kind": "Operation",
    "name": "selectionSetConflictDifferentTypesWithoutConflictInTypelessInlineFragmentsQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "name",
            "value": "me"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "username",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": "same_alias",
                "args": null,
                "kind": "ScalarField",
                "name": "lastName",
                "storageKey": null
              }
            ],
            "type": "User",
            "abstractKey": null
          },
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": "same_alias",
                "args": null,
                "kind": "ScalarField",
                "name": "name",
                "storageKey": null
              }
            ],
            "type": "Page",
            "abstractKey": null
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          }
        ],
        "storageKey": "username(name:\"me\")"
      }
    ]
  },
  "params": {
    "cacheID": "317a07fce4aadf32ed19c008ccbfdd9c",
    "id": null,
    "metadata": {},
    "name": "selectionSetConflictDifferentTypesWithoutConflictInTypelessInlineFragmentsQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query selectionSetConflictDifferentTypesWithoutConflictInTypelessInlineFragmentsQuery {
  username(name: "me") {
    __typename
    ... on User {
      same_alias: lastName
    }
    ... on Page {
      same_alias: name
    }
    id
  }
}
