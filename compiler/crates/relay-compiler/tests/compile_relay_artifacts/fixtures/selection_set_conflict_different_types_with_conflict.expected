==================================== INPUT ====================================
# Todo throw
query selectionSetConflictDifferentTypesWithConflictQuery {
  me {
    ...selectionSetConflictDifferentTypesWithConflictFrag1
    ...selectionSetConflictDifferentTypesWithConflictFrag2
  }
}
fragment selectionSetConflictDifferentTypesWithConflictFrag1 on User {
  same_alias: id
}
fragment selectionSetConflictDifferentTypesWithConflictFrag2 on Actor {
  same_alias: name
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "selectionSetConflictDifferentTypesWithConflictQuery",
    "selections": [
      {
        "alias": null,
        "args": null,
        "concreteType": "User",
        "kind": "LinkedField",
        "name": "me",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "selectionSetConflictDifferentTypesWithConflictFrag1"
          },
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "selectionSetConflictDifferentTypesWithConflictFrag2"
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [],
    "kind": "Operation",
    "name": "selectionSetConflictDifferentTypesWithConflictQuery",
    "selections": [
      {
        "alias": null,
        "args": null,
        "concreteType": "User",
        "kind": "LinkedField",
        "name": "me",
        "plural": false,
        "selections": [
          {
            "alias": "same_alias",
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          },
          {
            "kind": "TypeDiscriminator",
            "abstractKey": "__isActor"
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "id": null,
    "metadata": {},
    "name": "selectionSetConflictDifferentTypesWithConflictQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query selectionSetConflictDifferentTypesWithConflictQuery {
  me {
    ...selectionSetConflictDifferentTypesWithConflictFrag1
    ...selectionSetConflictDifferentTypesWithConflictFrag2
    id
  }
}

fragment selectionSetConflictDifferentTypesWithConflictFrag1 on User {
  same_alias: id
}

fragment selectionSetConflictDifferentTypesWithConflictFrag2 on Actor {
  __isActor: __typename
  same_alias: name
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "selectionSetConflictDifferentTypesWithConflictFrag1",
  "selections": [
    {
      "alias": "same_alias",
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    }
  ],
  "type": "User",
  "abstractKey": null
}

{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "selectionSetConflictDifferentTypesWithConflictFrag2",
  "selections": [
    {
      "alias": "same_alias",
      "args": null,
      "kind": "ScalarField",
      "name": "name",
      "storageKey": null
    }
  ],
  "type": "Actor",
  "abstractKey": "__isActor"
}
