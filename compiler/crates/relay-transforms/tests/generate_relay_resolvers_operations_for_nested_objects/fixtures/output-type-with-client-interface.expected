==================================== INPUT ====================================
fragment Foo_user on User {
  poppy: pop_star_name {
    __typename
  }
}

fragment PopStarNameResolverFragment_name on User {
  name
  address {
    street
  }
  parents {
    lastName
  }
}

# %extensions%
type PopStarName {
  stage_name: IStageName
  also_a_stage_name: IStageName
}

interface IStageName {
  value: String
}

type Foo implements IStageName {
  value: String
}

extend type User {
  pop_star_name: PopStarName @relay_resolver(fragment_name: "PopStarNameResolverFragment_name", import_path: "PopStarNameResolver", has_output_type: true)
}
==================================== OUTPUT ===================================
query User__pop_star_name$normalization @__splitOperation(parentDocuments: [], rawResponseTypeStrict: null) {
  stage_name {
    ... on Foo {
      value
      __typename
    }
  }
  also_a_stage_name {
    ... on Foo {
      value
      __typename
    }
  }
}

fragment Foo_user on User {
  poppy: pop_star_name {
    __typename
  }
}

fragment PopStarNameResolverFragment_name on User {
  name
  address {
    street
  }
  parents {
    lastName
  }
}
