==================================== INPUT ====================================
# expected-to-throw
query NodeQuery($id: ID!, $first: Int, $after: ID) {
  node(id: $id) {
    id
    ... on User {
      badConnection(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
        edges
      }
    }
  }
}

# %extensions%
extend type User {
  badConnection(after: ID, before: ID, first: Int, last: Int): BadConnection
}

type BadConnection {
  count: Int
  edges: [Int]
  pageInfo: BadConnectionPageInfo
}

type BadConnectionEdge {
  cursor: String
  node: BadConnectionNode
}

type BadConnectionNode {
  id: ID
}

type BadConnectionPageInfo {
  hasPrevPage: Boolean
  hasNextPage: Boolean
  endCursor: String
  startCursor: String
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž Expected 'badConnection' to have a 'edges' selection.[0m

  [4mconnection-invalid-edges-list-type.invalid.graphql[0m[2m:6:7[0m
[1m    5 â”‚ [0m    ... on User {
[1m    6 â”‚ [0m      [31mb[0m[31ma[0m[31md[0m[31mC[0m[31mo[0m[31mn[0m[31mn[0m[31me[0m[31mc[0m[31mt[0m[31mi[0m[31mo[0m[31mn[0m(first: $first, after: $after) @connection(key: "NodeQuery_badConnection") {
      â”‚ [31m      ^^^^^^^^^^^^^[0m
[1m    7 â”‚ [0m        edges
