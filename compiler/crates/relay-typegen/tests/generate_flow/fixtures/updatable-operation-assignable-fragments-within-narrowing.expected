==================================== INPUT ====================================
query UpdatableQuery @updatable {
  me {
    actor {
      ... on User {
        __typename
        ...Assignable_user
      }
      ... on Page {
        __typename
        ...Assignable_page
      }
    }
  }
}

fragment Assignable_user on User @assignable {
  __typename
}

fragment Assignable_page on Page @assignable {
  __typename
}
==================================== OUTPUT ===================================
import type { Assignable_page$fragmentType } from "Assignable_page.graphql";
import type { Assignable_user$fragmentType } from "Assignable_user.graphql";
export type UpdatableQuery$variables = {||};
export type UpdatableQuery$data = {|
  get me(): ?{|
    get actor(): ?({|
      +__typename: "User",
    |} | {|
      +__typename: "Page",
    |} | {|
      // This will never be '%other', but we need some
      // value in case none of the concrete values match.
      +__typename: "%other",
    |}),
    set actor(value: ?{
      +$fragmentSpreads: Assignable_user$fragmentType | Assignable_page$fragmentType,
      ...
    }): void,
  |},
  set me(value: null | void): void,
|};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type Assignable_page$fragmentType: FragmentType;
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type Assignable_user$fragmentType: FragmentType;
