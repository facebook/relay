==================================== INPUT ====================================
query relayResolver_Query {
  me {
    pop_star_name
  }
}

# %extensions%

extend type User {
  pop_star_name: RelayResolverValue
    @relay_resolver(
      import_path: "./foo/bar/baz/PopStarNameResolver.js"
      live: true
    )
}
==================================== OUTPUT ===================================
import type { LiveState } from "relay-runtime";
import userPopStarNameResolverType from "PopStarNameResolver";
// Type assertion validating that `userPopStarNameResolverType` resolver is correctly implemented.
// A type error here indicates that the type signature of the resolver module is incorrect.
(userPopStarNameResolverType: () => LiveState<?mixed>);
export type relayResolver_Query$variables = {||};
export type relayResolver_Query$data = {|
  +me: ?{|
    +pop_star_name: ?ReturnType<ReturnType<typeof userPopStarNameResolverType>["read"]>,
  |},
|};
export type relayResolver_Query = {|
  response: relayResolver_Query$data,
  variables: relayResolver_Query$variables,
|};
