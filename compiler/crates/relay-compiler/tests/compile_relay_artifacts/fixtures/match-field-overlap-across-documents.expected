==================================== INPUT ====================================
# expected-to-throw
query matchFieldOverlapAcrossDocuments_MultipleNameRendererQuery($id: ID!) {
  node(id: $id) {
    ...matchFieldOverlapAcrossDocuments_FooNameRendererFragment
    ...matchFieldOverlapAcrossDocuments_BarNameRendererFragment
  }
}

fragment matchFieldOverlapAcrossDocuments_FooNameRendererFragment on User {
  id
  nameRenderer @match {
    ...matchFieldOverlapAcrossDocuments_MarkdownUserNameRenderer_name
      @module(name: "FooMarkdownUserNameRenderer.react")
  }
}

fragment matchFieldOverlapAcrossDocuments_BarNameRendererFragment on User {
  # same field and supported types as above but different selections:
  # should flatten together
  nameRenderer @match {
    ...matchFieldOverlapAcrossDocuments_MarkdownUserNameRenderer_name
      @module(name: "BarMarkdownUserNameRenderer.react")
  }
}

fragment matchFieldOverlapAcrossDocuments_MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž Each field on a given type can have only a single @module directive, but here there is more than one (perhaps within different spreads). To fix it, put each @module directive into its own aliased copy of the field with different aliases.[0m

  [4mmatch-field-overlap-across-documents.graphql[0m[2m:22:7[0m
[1m   21 â”‚ [0m    ...matchFieldOverlapAcrossDocuments_MarkdownUserNameRenderer_name
[1m   22 â”‚ [0m      [31m@[0m[31mm[0m[31mo[0m[31md[0m[31mu[0m[31ml[0m[31me[0m(name: "BarMarkdownUserNameRenderer.react")
      â”‚       ^^^^^^^
   23 â”‚   }

  â„¹ï¸Ž conflicts with

  match-field-overlap-across-documents.graphql:13:7
   12 â”‚     ...matchFieldOverlapAcrossDocuments_MarkdownUserNameRenderer_name
   13 â”‚       @modul[31me[0m(name: "FooMarkdownUserNameRenderer.react")
      â”‚       ^^^^^^^
   14 â”‚   }
