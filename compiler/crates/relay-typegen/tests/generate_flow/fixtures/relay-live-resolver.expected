==================================== INPUT ====================================
fragment relayResolver_PopStarNameResolverFragment_name on User {
  name
}

query relayResolver_Query {
  me {
    pop_star_name
  }
}

# %extensions%

extend type User {
  pop_star_name: Int @relay_resolver(fragment_name: "relayResolver_PopStarNameResolverFragment_name", import_path: "./foo/bar/baz/PopStarNameResolver.js", live: true)
}
==================================== OUTPUT ===================================
import userPopStarNameResolver from "PopStarNameResolver";
export type relayResolver_Query$variables = {||};
export type relayResolver_Query$data = {|
  +me: ?{|
    +pop_star_name: ?$Call<$Call<<R>((...empty[]) => R) => R, typeof userPopStarNameResolver>["read"]>,
  |},
|};
export type relayResolver_Query = {|
  variables: relayResolver_Query$variables,
  response: relayResolver_Query$data,
|};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type relayResolver_PopStarNameResolverFragment_name$fragmentType: FragmentType;
export type relayResolver_PopStarNameResolverFragment_name$data = {|
  +name: ?string,
  +$fragmentType: relayResolver_PopStarNameResolverFragment_name$fragmentType,
|};
export type relayResolver_PopStarNameResolverFragment_name$key = {
  +$data?: relayResolver_PopStarNameResolverFragment_name$data,
  +$fragmentSpreads: relayResolver_PopStarNameResolverFragment_name$fragmentType,
  ...
};
