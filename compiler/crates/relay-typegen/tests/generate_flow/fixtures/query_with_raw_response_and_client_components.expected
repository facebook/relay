==================================== INPUT ====================================
query queryWithRelayClientComponentQuery @raw_response_type{
  viewer {
    ...queryWithRelayClientComponent_f1 @relay_client_component
    ...queryWithRelayClientComponent_f2 @relay_client_component
  }
}

fragment queryWithRelayClientComponent_f1 on Viewer {
  __typename
}

fragment queryWithRelayClientComponent_f2 on Viewer {
  __typename
}
==================================== OUTPUT ===================================
import type { queryWithRelayClientComponent_f1$fragmentType } from "queryWithRelayClientComponent_f1.graphql";
import type { queryWithRelayClientComponent_f2$fragmentType } from "queryWithRelayClientComponent_f2.graphql";
export type queryWithRelayClientComponentQuery$variables = {||};
export type queryWithRelayClientComponentQuery$data = {|
  +viewer: ?{|
    +$fragmentSpreads: queryWithRelayClientComponent_f1$fragmentType & queryWithRelayClientComponent_f2$fragmentType,
  |},
|};
export type queryWithRelayClientComponentQuery$rawResponse = {|
  +viewer: ?{||},
|};
export type queryWithRelayClientComponentQuery = {|
  rawResponse: queryWithRelayClientComponentQuery$rawResponse,
  response: queryWithRelayClientComponentQuery$data,
  variables: queryWithRelayClientComponentQuery$variables,
|};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type queryWithRelayClientComponent_f1$fragmentType: FragmentType;
export type queryWithRelayClientComponent_f1$data = {|
  +__typename: "Viewer",
  +$fragmentType: queryWithRelayClientComponent_f1$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  +$fragmentType: queryWithRelayClientComponent_f1$fragmentType,
|};
export type queryWithRelayClientComponent_f1$key = {
  +$data?: queryWithRelayClientComponent_f1$data,
  +$fragmentSpreads: queryWithRelayClientComponent_f1$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type queryWithRelayClientComponent_f2$fragmentType: FragmentType;
export type queryWithRelayClientComponent_f2$data = {|
  +__typename: "Viewer",
  +$fragmentType: queryWithRelayClientComponent_f2$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  +$fragmentType: queryWithRelayClientComponent_f2$fragmentType,
|};
export type queryWithRelayClientComponent_f2$key = {
  +$data?: queryWithRelayClientComponent_f2$data,
  +$fragmentSpreads: queryWithRelayClientComponent_f2$fragmentType,
  ...
};
