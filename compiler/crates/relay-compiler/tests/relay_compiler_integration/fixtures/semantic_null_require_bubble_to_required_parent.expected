==================================== INPUT ====================================
//- PersonComponent.js
graphql`fragment PersonComponentFragment on Query @throwOnFieldError {
  some_person @required(action: LOG) {
    name @required(action: LOG)
  }
}`

//- relay.config.json
{
  "language": "flow",
  "jsModuleFormat": "haste",
  "schema": "schema.graphql",
  "experimentalEmitSemanticNullabilityTypes": true
}

//- schema.graphql
type Query {
  some_person: Person @semanticNonNull
}


type Person {
  name: String
}
==================================== OUTPUT ===================================
//- __generated__/PersonComponentFragment.graphql.js
/**
 * <auto-generated> SignedSource<<fb5e66f956e0ae6de1169a4ef911454e>>
 * @flow
 * @lightSyntaxTransform
 * @nogrep
 */

/* eslint-disable */

'use strict';

/*::
import type { Fragment, ReaderFragment } from 'relay-runtime';
import type { FragmentType } from "relay-runtime";
declare export opaque type PersonComponentFragment$fragmentType: FragmentType;
export type PersonComponentFragment$data = ?{|
  +some_person: {|
    +name: string,
  |},
  +$fragmentType: PersonComponentFragment$fragmentType,
|};
export type PersonComponentFragment$key = {
  +$data?: PersonComponentFragment$data,
  +$fragmentSpreads: PersonComponentFragment$fragmentType,
  ...
};
*/

var node/*: ReaderFragment*/ = {
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": {
    "throwOnFieldError": true
  },
  "name": "PersonComponentFragment",
  "selections": [
    {
      "kind": "RequiredField",
      "field": {
        "alias": null,
        "args": null,
        "concreteType": "Person",
        "kind": "LinkedField",
        "name": "some_person",
        "plural": false,
        "selections": [
          {
            "kind": "RequiredField",
            "field": {
              "alias": null,
              "args": null,
              "kind": "ScalarField",
              "name": "name",
              "storageKey": null
            },
            "action": "LOG",
            "path": "some_person.name"
          }
        ],
        "storageKey": null
      },
      "action": "LOG",
      "path": "some_person"
    }
  ],
  "type": "Query",
  "abstractKey": null
};

(node/*: any*/).hash = "98e50ccb4d4bee0618374c55c0a2c4a8";

module.exports = ((node/*: any*/)/*: Fragment<
  PersonComponentFragment$fragmentType,
  PersonComponentFragment$data,
>*/);
