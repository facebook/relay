==================================== INPUT ====================================
query queryWithModuleDirectiveJsresourceImport_NameRendererQuery($id: ID!) {
  node(id: $id) {
    ...queryWithModuleDirectiveJsresourceImport_NameRendererFragment
  }
}

fragment queryWithModuleDirectiveJsresourceImport_NameRendererFragment on User {
  id
  nameRenderer {
    # note: intentionally no @match here
    ...queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

%project_config%
{
  "moduleImportConfig": {
    "dynamicModuleProvider": {
      "mode": "JSResource"
    }
  },
  "language": "flow"
}
==================================== OUTPUT ===================================
{
  "kind": "SplitOperation",
  "metadata": {},
  "name": "queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name$normalization",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "markdown",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "kind": "LinkedField",
      "name": "data",
      "plural": false,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "markup",
          "storageKey": null
        },
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "id",
          "storageKey": null
        }
      ],
      "storageKey": null
    }
  ]
}

import JSResource from 'JSResource';
{
  "fragment": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "id"
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "queryWithModuleDirectiveJsresourceImport_NameRendererQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "queryWithModuleDirectiveJsresourceImport_NameRendererFragment"
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "id"
      }
    ],
    "kind": "Operation",
    "name": "queryWithModuleDirectiveJsresourceImport_NameRendererQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": null,
                "args": null,
                "concreteType": null,
                "kind": "LinkedField",
                "name": "nameRenderer",
                "plural": false,
                "selections": [
                  {
                    "alias": null,
                    "args": null,
                    "kind": "ScalarField",
                    "name": "__typename",
                    "storageKey": null
                  },
                  {
                    "kind": "InlineFragment",
                    "selections": [
                      {
                        "args": null,
                        "documentName": "queryWithModuleDirectiveJsresourceImport_NameRendererFragment",
                        "fragmentName": "queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name",
                        "fragmentPropName": "MarkdownUserNameRenderer_name",
                        "kind": "ModuleImport",
                        "componentModuleProvider": () => JSResource('m#MarkdownUserNameRenderer.react'),
                        "operationModuleProvider": () => JSResource('m#queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name$normalization.graphql')
                      }
                    ],
                    "type": "MarkdownUserNameRenderer",
                    "abstractKey": null
                  }
                ],
                "storageKey": null
              }
            ],
            "type": "User",
            "abstractKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "cacheID": "ad5561273f4656de86dc54fe83a7b3b7",
    "id": null,
    "metadata": {},
    "name": "queryWithModuleDirectiveJsresourceImport_NameRendererQuery",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query queryWithModuleDirectiveJsresourceImport_NameRendererQuery(
  $id: ID!
) {
  node(id: $id) {
    __typename
    ...queryWithModuleDirectiveJsresourceImport_NameRendererFragment
    id
  }
}

fragment queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
    id
  }
}

fragment queryWithModuleDirectiveJsresourceImport_NameRendererFragment on User {
  id
  nameRenderer {
    __typename
    ... on MarkdownUserNameRenderer {
      ...queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name
    }
  }
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "markdown",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "concreteType": "MarkdownUserNameData",
      "kind": "LinkedField",
      "name": "data",
      "plural": false,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "markup",
          "storageKey": null
        }
      ],
      "storageKey": null
    }
  ],
  "type": "MarkdownUserNameRenderer",
  "abstractKey": null
}

{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "queryWithModuleDirectiveJsresourceImport_NameRendererFragment",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    },
    {
      "alias": null,
      "args": null,
      "concreteType": null,
      "kind": "LinkedField",
      "name": "nameRenderer",
      "plural": false,
      "selections": [
        {
          "kind": "InlineFragment",
          "selections": [
            {
              "args": null,
              "documentName": "queryWithModuleDirectiveJsresourceImport_NameRendererFragment",
              "fragmentName": "queryWithModuleDirectiveJsresourceImport_MarkdownUserNameRenderer_name",
              "fragmentPropName": "MarkdownUserNameRenderer_name",
              "kind": "ModuleImport"
            }
          ],
          "type": "MarkdownUserNameRenderer",
          "abstractKey": null
        }
      ],
      "storageKey": null
    }
  ],
  "type": "User",
  "abstractKey": null
}
