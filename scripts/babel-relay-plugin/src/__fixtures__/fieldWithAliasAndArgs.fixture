Input:
var Relay = require('react-relay');
var x = Relay.QL`
  query {
    node(id: 123) {
      ... on User {
        mugShot: profilePicture(size: 100) {
          uri
        }
      }
    }
  }
`;

Output:
'use strict';

var Relay = require('react-relay');
var x = function () {
  return {
    calls: [{
      kind: 'Call',
      metadata: {
        type: 'ID!'
      },
      name: 'id',
      value: {
        kind: 'CallValue',
        callValue: 123
      }
    }],
    children: [{
      fieldName: 'id',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'String'
    }, {
      fieldName: '__typename',
      kind: 'Field',
      metadata: {
        isGenerated: true,
        isRequisite: true
      },
      type: 'String'
    }, {
      children: [{
        alias: 'mugShot',
        calls: [{
          kind: 'Call',
          metadata: {
            type: 'Int'
          },
          name: 'size',
          value: {
            kind: 'CallValue',
            callValue: 100
          }
        }],
        children: [{
          fieldName: 'uri',
          kind: 'Field',
          metadata: {},
          type: 'String'
        }],
        fieldName: 'profilePicture',
        kind: 'Field',
        metadata: {
          canHaveSubselections: true
        },
        type: 'ProfilePicture'
      }, {
        fieldName: 'id',
        kind: 'Field',
        metadata: {
          isGenerated: true,
          isRequisite: true
        },
        type: 'String'
      }],
      id: Relay.QL.__id(),
      kind: 'Fragment',
      metadata: {},
      name: 'User',
      type: 'User'
    }],
    fieldName: 'node',
    kind: 'Query',
    metadata: {
      isAbstract: true,
      identifyingArgName: 'id',
      identifyingArgType: 'ID!'
    },
    name: 'FieldWithAliasAndArgs',
    type: 'Node'
  };
}();
