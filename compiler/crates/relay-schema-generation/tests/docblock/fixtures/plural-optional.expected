==================================== INPUT ====================================
//- Cat.js

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


import type CatFlowType from 'Cat';

/**
 * @RelayResolver
 */
export function Cat(id: DataID): CatFlowType {
  return {};
}

//- Cat-name.js

import type CatFlowType from 'Cat';
/**
 * @RelayResolver
 */
export function name(cat: CatFlowType): ?string {
  return "cat";
}

/**
 * @RelayResolver
 */
export function names(cat: CatFlowType): Array<?string> {
  return 5;
}
==================================== OUTPUT ===================================
StrongObjectResolver(
    StrongObjectIr {
        type_name: Identifier {
            span: 273:276,
            token: Token {
                span: 273:276,
                kind: Identifier,
            },
            value: "Cat",
        },
        rhs_location: Cat.js:273:276,
        root_fragment: WithLocation {
            location: Cat.js:273:276,
            item: FragmentDefinitionName(
                "Cat__id",
            ),
        },
        description: None,
        deprecated: None,
        live: None,
        semantic_non_null: None,
        location: Cat.js:273:276,
        implements_interfaces: [],
        source_hash: ResolverSourceHash(
            "b0ce1a838dad74fce5422c930d8d9fc3",
        ),
    },
)
type Cat @__RelayResolverModel {
  id: ID!
  __relay_model_instance: RelayResolverValue! @relay_resolver(import_path: "Cat.js", fragment_name: "Cat__id", generated_fragment: true, inject_fragment_data: "id", import_name: "Cat") @resolver_source_hash(value: "b0ce1a838dad74fce5422c930d8d9fc3") @unselectable(reason: "This field is intended only for Relay's internal use")
}


TerseRelayResolver(
    TerseRelayResolverIr {
        field: FieldDefinition {
            name: Identifier {
                span: 79:83,
                token: Token {
                    span: 79:83,
                    kind: Identifier,
                },
                value: "name",
            },
            type_: Named(
                NamedTypeAnnotation {
                    name: Identifier {
                        span: 104:110,
                        token: Token {
                            span: 104:110,
                            kind: Identifier,
                        },
                        value: "String",
                    },
                },
            ),
            arguments: None,
            directives: [],
            description: None,
            hack_source: None,
            span: 79:83,
        },
        type_: WithLocation {
            location: <generated>:273:276,
            item: "Cat",
        },
        root_fragment: None,
        deprecated: None,
        semantic_non_null: None,
        live: None,
        location: Cat-name.js:79:83,
        fragment_arguments: None,
        source_hash: ResolverSourceHash(
            "b4f1a8f1551cd4c93a9b61b8c25d2e61",
        ),
    },
)
extend type Cat {
  name: String @relay_resolver(import_path: "Cat-name.js", fragment_name: "Cat____relay_model_instance", generated_fragment: true, inject_fragment_data: "__relay_model_instance", has_output_type: true, import_name: "name") @resolver_source_hash(value: "b4f1a8f1551cd4c93a9b61b8c25d2e61")
}


TerseRelayResolver(
    TerseRelayResolverIr {
        field: FieldDefinition {
            name: Identifier {
                span: 174:179,
                token: Token {
                    span: 174:179,
                    kind: Identifier,
                },
                value: "names",
            },
            type_: NonNull(
                NonNullTypeAnnotation {
                    span: 205:212,
                    type_: List(
                        ListTypeAnnotation {
                            span: 205:212,
                            open: Token {
                                span: 0:0,
                                kind: Empty,
                            },
                            type_: Named(
                                NamedTypeAnnotation {
                                    name: Identifier {
                                        span: 206:212,
                                        token: Token {
                                            span: 206:212,
                                            kind: Identifier,
                                        },
                                        value: "String",
                                    },
                                },
                            ),
                            close: Token {
                                span: 0:0,
                                kind: Empty,
                            },
                        },
                    ),
                    exclamation: Token {
                        span: 0:0,
                        kind: Empty,
                    },
                },
            ),
            arguments: None,
            directives: [],
            description: None,
            hack_source: None,
            span: 174:179,
        },
        type_: WithLocation {
            location: <generated>:273:276,
            item: "Cat",
        },
        root_fragment: None,
        deprecated: None,
        semantic_non_null: None,
        live: None,
        location: Cat-name.js:174:179,
        fragment_arguments: None,
        source_hash: ResolverSourceHash(
            "b4f1a8f1551cd4c93a9b61b8c25d2e61",
        ),
    },
)
extend type Cat {
  names: [String]! @relay_resolver(import_path: "Cat-name.js", fragment_name: "Cat____relay_model_instance", generated_fragment: true, inject_fragment_data: "__relay_model_instance", has_output_type: true, import_name: "names") @resolver_source_hash(value: "b4f1a8f1551cd4c93a9b61b8c25d2e61")
}
