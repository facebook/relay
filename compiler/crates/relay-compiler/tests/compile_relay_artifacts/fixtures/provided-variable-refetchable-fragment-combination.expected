==================================== INPUT ====================================
query providedVariableRefetchableFragmentCombination_Query {
  node(id: 4) {
    ...providedVariableRefetchableFragmentCombination_Fragment
  }
}

fragment providedVariableRefetchableFragmentCombination_Fragment on Node
@refetchable(queryName: "refetchableQuery")
@argumentDefinitions(
  includeName: {type: "Boolean!", provider: "includeName_RelayProvider"}
) {
  id
  name @include(if: $includeName)
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "providedVariableRefetchableFragmentCombination_Query",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": 4
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "providedVariableRefetchableFragmentCombination_Fragment"
          }
        ],
        "storageKey": "node(id:4)"
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "__relay_internal__pv__includeName_RelayProvider"
      }
    ],
    "kind": "Operation",
    "name": "providedVariableRefetchableFragmentCombination_Query",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": 4
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "kind": "TypeDiscriminator",
            "abstractKey": "__isNode"
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          },
          {
            "condition": "__relay_internal__pv__includeName_RelayProvider",
            "kind": "Condition",
            "passingValue": true,
            "selections": [
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "name",
                "storageKey": null
              }
            ]
          }
        ],
        "storageKey": "node(id:4)"
      }
    ]
  },
  "params": {
    "cacheID": "4fde8992106a76990bb849df8c53c930",
    "id": null,
    "metadata": {},
    "name": "providedVariableRefetchableFragmentCombination_Query",
    "operationKind": "query",
    "text": null,
    "providedVariables": {
      "__relay_internal__pv__includeName_RelayProvider": require('includeName_RelayProvider')
    }
  }
}

QUERY:

query providedVariableRefetchableFragmentCombination_Query(
  $__relay_internal__pv__includeName_RelayProvider: Boolean!
) {
  node(id: 4) {
    __typename
    ...providedVariableRefetchableFragmentCombination_Fragment
    id
  }
}

fragment providedVariableRefetchableFragmentCombination_Fragment on Node {
  __isNode: __typename
  id
  name @include(if: $__relay_internal__pv__includeName_RelayProvider)
}


{
  "fragment": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "id"
      },
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "includeName"
      }
    ],
    "kind": "Fragment",
    "metadata": null,
    "name": "refetchableQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "providedVariableRefetchableFragmentCombination_Fragment"
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "includeName"
      },
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "id"
      },
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "__relay_internal__pv__includeName_RelayProvider"
      }
    ],
    "kind": "Operation",
    "name": "refetchableQuery",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Variable",
            "name": "id",
            "variableName": "id"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "kind": "TypeDiscriminator",
            "abstractKey": "__isNode"
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          },
          {
            "condition": "__relay_internal__pv__includeName_RelayProvider",
            "kind": "Condition",
            "passingValue": true,
            "selections": [
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "name",
                "storageKey": null
              }
            ]
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "cacheID": "b8a7a02a0ee5dcbac23246959bda7f5a",
    "id": null,
    "metadata": {},
    "name": "refetchableQuery",
    "operationKind": "query",
    "text": null,
    "providedVariables": {
      "includeName": require('includeName_RelayProvider'),
      "__relay_internal__pv__includeName_RelayProvider": require('includeName_RelayProvider')
    }
  }
}

QUERY:

query refetchableQuery(
  $id: ID!
  $__relay_internal__pv__includeName_RelayProvider: Boolean!
) {
  node(id: $id) {
    __typename
    ...providedVariableRefetchableFragmentCombination_Fragment
    id
  }
}

fragment providedVariableRefetchableFragmentCombination_Fragment on Node {
  __isNode: __typename
  id
  name @include(if: $__relay_internal__pv__includeName_RelayProvider)
}


{
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "__relay_internal__pv__includeName_RelayProvider"
    }
  ],
  "kind": "Fragment",
  "metadata": {
    "refetch": {
      "connection": null,
      "fragmentPathInResult": [
        "node"
      ],
      "operation": require('refetchableQuery.graphql'),
      "identifierInfo": {
        "identifierField": "id",
        "identifierQueryVariableName": "id"
      }
    }
  },
  "name": "providedVariableRefetchableFragmentCombination_Fragment",
  "selections": [
    {
      "alias": null,
      "args": null,
      "kind": "ScalarField",
      "name": "id",
      "storageKey": null
    },
    {
      "condition": "__relay_internal__pv__includeName_RelayProvider",
      "kind": "Condition",
      "passingValue": true,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "name",
          "storageKey": null
        }
      ]
    }
  ],
  "type": "Node",
  "abstractKey": "__isNode"
}
