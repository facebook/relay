==================================== INPUT ====================================
query providedVariableDirectiveCommonjsRelativizeEnabledQuery {
  me {
    ...providedVariableDirectiveCommonjsRelativizeEnabledFragment
  }
}

fragment providedVariableDirectiveCommonjsRelativizeEnabledFragment on User
  @argumentDefinitions(
    condA: {type: "Boolean!", provider: "bareProvider" },
    condB: {type: "Boolean!", provider: "./relProvider" },
    condC: {type: "Boolean!", provider: "../parentProvider" },
  ) {
  username @include(if: $condA)
  name @include(if: $condB)
  alternate_name @include(if: $condC)
}

%project_config%
{
  "jsModuleFormat": "commonjs",
  "relativizeJsModulePaths": true,
  "language": "flow"
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "providedVariableDirectiveCommonjsRelativizeEnabledQuery",
    "selections": [
      {
        "alias": null,
        "args": null,
        "concreteType": "User",
        "kind": "LinkedField",
        "name": "me",
        "plural": false,
        "selections": [
          {
            "args": null,
            "kind": "FragmentSpread",
            "name": "providedVariableDirectiveCommonjsRelativizeEnabledFragment"
          }
        ],
        "storageKey": null
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "__relay_internal__pv__bareProvider"
      },
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "__relay_internal__pv__relProvider"
      },
      {
        "defaultValue": null,
        "kind": "LocalArgument",
        "name": "__relay_internal__pv__parentProvider"
      }
    ],
    "kind": "Operation",
    "name": "providedVariableDirectiveCommonjsRelativizeEnabledQuery",
    "selections": [
      {
        "alias": null,
        "args": null,
        "concreteType": "User",
        "kind": "LinkedField",
        "name": "me",
        "plural": false,
        "selections": [
          {
            "condition": "__relay_internal__pv__bareProvider",
            "kind": "Condition",
            "passingValue": true,
            "selections": [
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "username",
                "storageKey": null
              }
            ]
          },
          {
            "condition": "__relay_internal__pv__relProvider",
            "kind": "Condition",
            "passingValue": true,
            "selections": [
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "name",
                "storageKey": null
              }
            ]
          },
          {
            "condition": "__relay_internal__pv__parentProvider",
            "kind": "Condition",
            "passingValue": true,
            "selections": [
              {
                "alias": null,
                "args": null,
                "kind": "ScalarField",
                "name": "alternate_name",
                "storageKey": null
              }
            ]
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          }
        ],
        "storageKey": null
      }
    ]
  },
  "params": {
    "cacheID": "76e93fe5c27fdd1b1af17f4e3e9b4d0d",
    "id": null,
    "metadata": {},
    "name": "providedVariableDirectiveCommonjsRelativizeEnabledQuery",
    "operationKind": "query",
    "text": null,
    "providedVariables": {
      "__relay_internal__pv__bareProvider": require('../bareProvider'),
      "__relay_internal__pv__relProvider": require('.././relProvider'),
      "__relay_internal__pv__parentProvider": require('../../parentProvider')
    }
  }
}

QUERY:

query providedVariableDirectiveCommonjsRelativizeEnabledQuery(
  $__relay_internal__pv__bareProvider: Boolean!
  $__relay_internal__pv__relProvider: Boolean!
  $__relay_internal__pv__parentProvider: Boolean!
) {
  me {
    ...providedVariableDirectiveCommonjsRelativizeEnabledFragment
    id
  }
}

fragment providedVariableDirectiveCommonjsRelativizeEnabledFragment on User {
  username @include(if: $__relay_internal__pv__bareProvider)
  name @include(if: $__relay_internal__pv__relProvider)
  alternate_name @include(if: $__relay_internal__pv__parentProvider)
}


{
  "argumentDefinitions": [
    {
      "kind": "RootArgument",
      "name": "__relay_internal__pv__bareProvider"
    },
    {
      "kind": "RootArgument",
      "name": "__relay_internal__pv__parentProvider"
    },
    {
      "kind": "RootArgument",
      "name": "__relay_internal__pv__relProvider"
    }
  ],
  "kind": "Fragment",
  "metadata": null,
  "name": "providedVariableDirectiveCommonjsRelativizeEnabledFragment",
  "selections": [
    {
      "condition": "__relay_internal__pv__bareProvider",
      "kind": "Condition",
      "passingValue": true,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "username",
          "storageKey": null
        }
      ]
    },
    {
      "condition": "__relay_internal__pv__relProvider",
      "kind": "Condition",
      "passingValue": true,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "name",
          "storageKey": null
        }
      ]
    },
    {
      "condition": "__relay_internal__pv__parentProvider",
      "kind": "Condition",
      "passingValue": true,
      "selections": [
        {
          "alias": null,
          "args": null,
          "kind": "ScalarField",
          "name": "alternate_name",
          "storageKey": null
        }
      ]
    }
  ],
  "type": "User",
  "abstractKey": null
}
