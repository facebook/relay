==================================== INPUT ====================================
fragment ConditionField on Node {
  id @include(if: $condition)
}

fragment NestedCondition on Node {
  ... @include(if: $condition) {
    id
  }
}
==================================== OUTPUT ===================================
import { FragmentReference } from "relay-runtime";
export type ConditionField$ref = FragmentReference & { _: "ConditionField$ref" };
export type ConditionField$fragmentType = ConditionField$ref & { _: "ConditionField$fragmentType" };
export type ConditionField = {
  readonly id?: string,
  readonly $refType: ConditionField$ref,
};
export type ConditionField$data = ConditionField;
export type ConditionField$key = {
  readonly $data?: ConditionField$data,
  readonly $fragmentRefs: ConditionField$ref,
};
-------------------------------------------------------------------------------
import { FragmentReference } from "relay-runtime";
export type NestedCondition$ref = FragmentReference & { _: "NestedCondition$ref" };
export type NestedCondition$fragmentType = NestedCondition$ref & { _: "NestedCondition$fragmentType" };
export type NestedCondition = {
  readonly id?: string,
  readonly $refType: NestedCondition$ref,
};
export type NestedCondition$data = NestedCondition;
export type NestedCondition$key = {
  readonly $data?: NestedCondition$data,
  readonly $fragmentRefs: NestedCondition$ref,
};
