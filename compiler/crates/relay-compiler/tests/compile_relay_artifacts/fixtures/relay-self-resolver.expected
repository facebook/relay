==================================== INPUT ====================================
query relaySelfResolver_Query {
  node(id: "SOME_ID") {
    ... on User {
      self_user_name
    }
  }
}

# %extensions%

extend type User {
  __self: Int @relay_resolver(self_fragment_name: "User__selfFragment", import_path: "./path/to/UserSelfResolver.js")
}

extend type User {
  self_user_name: Int @relay_resolver(fragment_name: "User__selfFragment", import_path: "./path/to/UserSelfResolver.js")
}
==================================== OUTPUT ===================================
{
  "fragment": {
    "argumentDefinitions": [],
    "kind": "Fragment",
    "metadata": null,
    "name": "relaySelfResolver_Query",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": "SOME_ID"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "alias": null,
                "args": null,
                "fragment": {
                  "args": null,
                  "kind": "FragmentSpread",
                  "name": "User__selfFragment"
                },
                "kind": "RelayResolver",
                "name": "self_user_name",
                "resolverModule": require('UserSelfResolver'),
                "path": "node.self_user_name"
              }
            ],
            "type": "User",
            "abstractKey": null
          }
        ],
        "storageKey": "node(id:\"SOME_ID\")"
      }
    ],
    "type": "Query",
    "abstractKey": null
  },
  "kind": "Request",
  "operation": {
    "argumentDefinitions": [],
    "kind": "Operation",
    "name": "relaySelfResolver_Query",
    "selections": [
      {
        "alias": null,
        "args": [
          {
            "kind": "Literal",
            "name": "id",
            "value": "SOME_ID"
          }
        ],
        "concreteType": null,
        "kind": "LinkedField",
        "name": "node",
        "plural": false,
        "selections": [
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "__typename",
            "storageKey": null
          },
          {
            "kind": "InlineFragment",
            "selections": [
              {
                "kind": "ClientExtension",
                "selections": [
                  {
                    "alias": null,
                    "args": null,
                    "kind": "ScalarField",
                    "name": "__id",
                    "storageKey": null
                  }
                ]
              }
            ],
            "type": "User",
            "abstractKey": null
          },
          {
            "alias": null,
            "args": null,
            "kind": "ScalarField",
            "name": "id",
            "storageKey": null
          }
        ],
        "storageKey": "node(id:\"SOME_ID\")"
      }
    ]
  },
  "params": {
    "cacheID": "fc957ac97707cfa86ce34a5a6afb0e61",
    "id": null,
    "metadata": {},
    "name": "relaySelfResolver_Query",
    "operationKind": "query",
    "text": null
  }
}

QUERY:

query relaySelfResolver_Query {
  node(id: "SOME_ID") {
    __typename
    id
  }
}


{
  "argumentDefinitions": [],
  "kind": "Fragment",
  "metadata": null,
  "name": "User__selfFragment",
  "selections": [
    {
      "kind": "ClientExtension",
      "selections": [
        {
          "alias": null,
          "args": null,
          "fragment": null,
          "kind": "RelayResolver",
          "name": "__self",
          "resolverModule": require('UserSelfResolver'),
          "path": "__self"
        }
      ]
    }
  ],
  "type": "User",
  "abstractKey": null
}
