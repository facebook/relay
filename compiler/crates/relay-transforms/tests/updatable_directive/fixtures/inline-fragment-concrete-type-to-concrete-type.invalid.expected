==================================== INPUT ====================================
# expected-to-throw
query TestQuery @updatable {
  node(id: 4) {
    ... on Feedback {
      comments {
        edges {
          node {
            ... on Comment {
              id
            }
          }
        }
      }
    }
  }
}
==================================== ERROR ====================================
[31mâœ–ï¸Ž Within updatable operations, each inline fragment spread must contain an unaliased typename field. However, within node, there are inline fragments without typename fields.[0m

  [4minline-fragment-concrete-type-to-concrete-type.invalid.graphql[0m[2m:3:3[0m
[1m    2 â”‚ [0mquery TestQuery @updatable {
    3 â”‚   node(id: 4) {
      â”‚   ^^^^
    4 â”‚     ... on Feedback {


[31mâœ–ï¸Ž Within updatable operations, each inline fragment spread must contain an unaliased typename field. However, within node, there are inline fragments without typename fields.[0m

  [4minline-fragment-concrete-type-to-concrete-type.invalid.graphql[0m[2m:7:11[0m
    6 â”‚         edges {
    7 â”‚           node {
      â”‚           ^^^^
    8 â”‚             ... on Comment {


âœ–ï¸Ž Within updatable operations, inline fragments are only allowed on interfaces or unions, not on concrete types. In updatable queries, each inline fragment must have a type conditions, so no inline fragment would make sense here.

  inline-fragment-concrete-type-to-concrete-type.invalid.graphql:7:11
    6 â”‚         edges {
    7 â”‚           node {
      â”‚           ^^^^
    8 â”‚             ... on Comment {
