==================================== INPUT ====================================
# expected-to-throw
fragment EnabledFoo on Node {
  ... on User {
    ... on Actor {
      # Theoretically this _could_ be okay becuase User implements Actor,
      # But there is no reason to write something like this, so it should
      # be fine to just not allow it.
      name @required(action: LOG)
    }
  }
}
==================================== ERROR ====================================
✖︎ Unexpected @required within inline fragment on an abstract type. At runtime we cannot know if this field is null, or if it's missing beacuse the inline fragment did not match

  inline-fragment-on-interface-in-concrete.invalid.graphql:8:12
    7 │       # be fine to just not allow it.
    8 │       name @required(action: LOG)
      │            ^^^^^^^^^
    9 │     }
