# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

name: CI

on: [push, pull_request]

jobs:
  vscode-extension-lint:
    name: VSCode Extension Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./vscode-extension
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: ESLint
        run: yarn run lint
      - name: Prettier
        run: yarn run prettier-check
      - name: Typecheck
        run: yarn run typecheck

  js-tests:
    name: JS Tests (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn run jest

  js-lint:
    name: JS Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Test dependencies
        run: yarn run test-dependencies
      - name: Lint
        run: yarn run lint

  typecheck:
    name: Flow Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Flow
        run: yarn run typecheck

  rust-tests:
    name: Rust Tests (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.58.0
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          # add --locked back when we have a better way to ensure it's up to date
          args: --manifest-path=compiler/Cargo.toml
      - name: "Build test project"
        run: cargo run --manifest-path=../crates/relay-bin/Cargo.toml
        working-directory: ./compiler/test-project

  build-compiler:
    name: Build Rust Compiler (${{ matrix.target.os }})
    strategy:
      matrix:
        target:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            build-name: relay
            artifact-name: relay-bin-linux-x64
            packages: musl-tools
            features: vendored
          - target: x86_64-apple-darwin
            os: macos-latest
            build-name: relay
            artifact-name: relay-bin-macos-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            build-name: relay
            artifact-name: relay-bin-macos-arm64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            build-name: relay.exe
            artifact-name: relay-bin-win-x64
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.58.0
          override: true
          target: ${{ matrix.target.target }}
      - uses: actions/setup-node@v2
        if: github.event_name == 'push' && github.repository == 'facebook/relay' && github.ref == 'refs/heads/main'
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        if: github.event_name == 'push' && github.repository == 'facebook/relay' && github.ref == 'refs/heads/main'
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Set the compiler version when releasing the `main` branch
        if: github.event_name == 'push' && github.repository == 'facebook/relay' && github.ref == 'refs/heads/main'
        run: yarn gulp setCompilerMainVersion
        env:
          RELEASE_COMMIT_SHA: ${{ github.sha }}
      - name: Install packages
        if: matrix.target.os == 'ubuntu-latest' && matrix.target.packages
        run: sudo apt install ${{ matrix.target.packages }} -y
      - uses: actions-rs/cargo@v1
        with:
          command: build
          # add --locked back when we have a better way to ensure it's up to date
          args: --manifest-path=compiler/Cargo.toml --release --target ${{ matrix.target.target }} ${{ matrix.target.features && '--features' }} ${{ matrix.target.features }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target.artifact-name }}
          path: compiler/target/${{ matrix.target.target }}/release/${{ matrix.target.build-name }}

  main-release:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'facebook/relay'
    needs: [js-tests, js-lint, typecheck, rust-tests, build-compiler]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org/
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Download artifact relay-bin-linux-x64
        uses: actions/download-artifact@v2
        with:
          name: relay-bin-linux-x64
          path: artifacts/linux-x64
      - name: Download artifact relay-bin-macos-x64
        uses: actions/download-artifact@v2
        with:
          name: relay-bin-macos-x64
          path: artifacts/macos-x64
      - name: Download artifact relay-bin-macos-arm64
        uses: actions/download-artifact@v2
        with:
          name: relay-bin-macos-arm64
          path: artifacts/macos-arm64
      - name: Download artifact relay-bin-win-x64
        uses: actions/download-artifact@v2
        with:
          name: relay-bin-win-x64
          path: artifacts/win-x64
      - name: Mark binaries as executable
        working-directory: artifacts
        run: |
          chmod +x linux-x64/relay
          chmod +x macos-x64/relay
          chmod +x macos-arm64/relay

      - name: Build latest (main) version
        if: github.ref == 'refs/heads/main'
        run: yarn gulp mainrelease
        env:
          RELEASE_COMMIT_SHA: ${{ github.sha }}

      - name: Build release version
        if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        run: yarn gulp release

      - name: Publish to npm
        if: github.ref == 'refs/heads/main' || github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
        run: |
          for pkg in dist/*; do
            npm publish "$pkg" ${TAG}
          done
        env:
          TAG: ${{ github.ref == 'refs/heads/main' && '--tag=main' || ((contains(github.ref_name, '-rc.') && '--tag=dev') || '' )}}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
