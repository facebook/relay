==================================== INPUT ====================================
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @RelayResolver
 *
 * @onType User
 * @fieldName greeting(salutation: String!)
 * @rootFragment myRootFragment
 *
 */

graphql`
  fragment myRootFragment on User {
    name
  }
`
==================================== OUTPUT ===================================
RelayResolver(
    RelayResolverIr {
        field: FieldDefinitionStub {
            name: Identifier {
                span: 53:61,
                token: Token {
                    span: 53:61,
                    kind: Identifier,
                },
                value: "greeting",
            },
            arguments: Some(
                List {
                    span: 61:82,
                    start: Token {
                        span: 61:62,
                        kind: OpenParen,
                    },
                    items: [
                        InputValueDefinition {
                            name: Identifier {
                                span: 62:72,
                                token: Token {
                                    span: 62:72,
                                    kind: Identifier,
                                },
                                value: "salutation",
                            },
                            type_: NonNull(
                                NonNullTypeAnnotation {
                                    span: 74:81,
                                    type_: Named(
                                        NamedTypeAnnotation {
                                            name: Identifier {
                                                span: 74:80,
                                                token: Token {
                                                    span: 74:80,
                                                    kind: Identifier,
                                                },
                                                value: "String",
                                            },
                                        },
                                    ),
                                    exclamation: Token {
                                        span: 80:81,
                                        kind: Exclamation,
                                    },
                                },
                            ),
                            default_value: None,
                            directives: [],
                        },
                    ],
                    end: Token {
                        span: 81:82,
                        kind: CloseParen,
                    },
                },
            ),
        },
        on: Type(
            PopulatedIrField {
                key_location: /path/to/test/fixture/relay-resolver-with-field-args.js:27:33,
                value: WithLocation {
                    location: /path/to/test/fixture/relay-resolver-with-field-args.js:34:38,
                    item: "User",
                },
            },
        ),
        root_fragment: Some(
            WithLocation {
                location: /path/to/test/fixture/relay-resolver-with-field-args.js:100:114,
                item: FragmentDefinitionName(
                    "myRootFragment",
                ),
            },
        ),
        output_type: None,
        description: None,
        hack_source: None,
        deprecated: None,
        live: None,
        location: /path/to/test/fixture/relay-resolver-with-field-args.js:0:118,
        fragment_arguments: None,
    },
)
