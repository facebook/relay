==================================== INPUT ====================================
fragment NameRendererFragment on User {
  id
  nameRenderers @match {
    ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
    ...MarkdownUserNameRenderer_name
      @module(name: "MarkdownUserNameRenderer.react")
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
==================================== OUTPUT ===================================
fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}

fragment NameRendererFragment on User {
  id
  nameRenderers(supported: ["PlainUserNameRenderer", "MarkdownUserNameRenderer"]) {
    ... on PlainUserNameRenderer {
      ... on PlainUserNameRenderer @__ModuleMetadata
      # ModuleMetadata {
      #     location: relay-match-on-union-plural.graphql:104:111,
      #     key: "NameRendererFragment",
      #     module_id: "NameRendererFragment.nameRenderers",
      #     module_name: "PlainUserNameRenderer.react",
      #     source_document_name: FragmentDefinitionName(
      #         FragmentDefinitionName(
      #             "NameRendererFragment",
      #         ),
      #     ),
      #     fragment_name: FragmentDefinitionName(
      #         "PlainUserNameRenderer_name",
      #     ),
      #     fragment_source_location: relay-match-on-union-plural.graphql:256:282,
      #     no_inline: false,
      # }
       {
        ...PlainUserNameRenderer_name
        __module_operation_NameRendererFragment: js(module: "PlainUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderers")
        __module_component_NameRendererFragment: js(module: "PlainUserNameRenderer.react", id: "NameRendererFragment.nameRenderers")
      }
    }
    ... on MarkdownUserNameRenderer {
      ... on MarkdownUserNameRenderer @__ModuleMetadata
      # ModuleMetadata {
      #     location: relay-match-on-union-plural.graphql:192:199,
      #     key: "NameRendererFragment",
      #     module_id: "NameRendererFragment.nameRenderers",
      #     module_name: "MarkdownUserNameRenderer.react",
      #     source_document_name: FragmentDefinitionName(
      #         FragmentDefinitionName(
      #             "NameRendererFragment",
      #         ),
      #     ),
      #     fragment_name: FragmentDefinitionName(
      #         "MarkdownUserNameRenderer_name",
      #     ),
      #     fragment_source_location: relay-match-on-union-plural.graphql:356:385,
      #     no_inline: false,
      # }
       {
        ...MarkdownUserNameRenderer_name
        __module_operation_NameRendererFragment: js(module: "MarkdownUserNameRenderer_name$normalization.graphql", id: "NameRendererFragment.nameRenderers")
        __module_component_NameRendererFragment: js(module: "MarkdownUserNameRenderer.react", id: "NameRendererFragment.nameRenderers")
      }
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}
