==================================== INPUT ====================================
query UpdatableQuery @updatable {
  node(id: 4) {
    ... on User {
      __typename
      parents {
        ...Assignable_user
      }
    }
  }
}

fragment Assignable_user on User @assignable {
  __typename
}
==================================== OUTPUT ===================================
import type { Assignable_user$fragmentType } from "Assignable_user.graphql";
export type UpdatableQuery$variables = {||};
export type UpdatableQuery$data = {|
  get node(): ?({|
    +__typename: "User",
    get parents(): $ReadOnlyArray<{||}>,
    set parents(value: $ReadOnlyArray<{
      +__typename: "User",
      +__id: string,
      +$fragmentSpreads: Assignable_user$fragmentType,
      ...
    }>): void,
  |} | {|
    // This will never be '%other', but we need some
    // value in case none of the concrete values match.
    +__typename: "%other",
  |}),
  set node(value: null | void): void,
|};
export type UpdatableQuery = {|
  response: UpdatableQuery$data,
  variables: UpdatableQuery$variables,
|};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type Assignable_user$fragmentType: FragmentType;
