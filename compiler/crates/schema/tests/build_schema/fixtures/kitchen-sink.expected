==================================== INPUT ====================================
directive @source(schema: String!, name: String!) on ENUM | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

schema {
  query: Query
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node!]!
}

interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  name: String
}

type Page {
  id: ID
  type: PageType
}

enum PageType {
  DEAULT @deprecated(reason: "No longer supported")
  PUBLIC
  PRIVATE
}

union Actor = User | Page

scalar URL @source(schema: "facebook", name: "ID")

input Location @source(schema: "facebook", name: "Location") {
  lat: Float!
  lon: Float!
  city: String
  zip: Int
  previous_cities: [String!]
}

scalar Float

scalar Int

scalar String

# %extensions%

type ClientType {
  clientName: String
}
extend type User {
  nickname: String
  client: ClientType
}

interface HasName {
  name: String
}

extend interface Node implements HasName {
  name: String
}
extend type User implements HasName
==================================== OUTPUT ===================================
Text Schema:Schema {
  query_type: Some(
    ObjectID(0),
)
  mutation_type: None
  subscription_type: None
  directives: [
    Directive {
        name: WithLocation {
            location: <generated>:255:262,
            item: DirectiveName(
                "include",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:263:265,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
    Directive {
        name: WithLocation {
            location: <generated>:334:338,
            item: DirectiveName(
                "skip",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:339:341,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
    Directive {
        name: WithLocation {
            location: <generated>:11:17,
            item: DirectiveName(
                "source",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:18:24,
                    item: ArgumentName(
                        "schema",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(8),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:35:39,
                    item: ArgumentName(
                        "name",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(8),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Enum,
            InputObject,
            Interface,
            Object,
            Scalar,
            Union,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
]
  type_map: {
    "Actor": Union(0),
    "Boolean": Scalar(3),
    "ClientType": Object(3),
    "Float": Scalar(6),
    "HasName": Interface(1),
    "ID": Scalar(4),
    "Int": Scalar(7),
    "Location": InputObject(0),
    "Node": Interface(0),
    "Page": Object(2),
    "PageType": Enum(0),
    "Query": Object(0),
    "String": Scalar(8),
    "URL": Scalar(5),
    "User": Object(1),
}
  enums: [
    Enum {
        name: WithLocation {
            location: <generated>:340:348,
            item: EnumName(
                "PageType",
            ),
        },
        is_extension: false,
        values: [
            EnumValue {
                value: "DEAULT",
                directives: [
                    DirectiveValue {
                        name: DirectiveName(
                            "deprecated",
                        ),
                        arguments: [
                            ArgumentValue {
                                name: ArgumentName(
                                    "reason",
                                ),
                                value: String(
                                    StringNode {
                                        token: Token {
                                            span: 380:401,
                                            kind: StringLiteral,
                                        },
                                        value: "No longer supported",
                                    },
                                ),
                            },
                        ],
                    },
                ],
            },
            EnumValue {
                value: "PUBLIC",
                directives: [],
            },
            EnumValue {
                value: "PRIVATE",
                directives: [],
            },
        ],
        directives: [],
        description: None,
        hack_source: None,
    },
]
  fields: [
    Field {
        name: WithLocation {
            location: <generated>:154:158,
            item: "node",
        },
        is_extension: false,
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:159:161,
                    item: ArgumentName(
                        "id",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(4),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        type_: Named(
            Interface(0),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:176:181,
            item: "nodes",
        },
        is_extension: false,
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:182:185,
                    item: ArgumentName(
                        "ids",
                    ),
                },
                type_: NonNull(
                    List(
                        NonNull(
                            Named(
                                Scalar(4),
                            ),
                        ),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        type_: NonNull(
            List(
                NonNull(
                    Named(
                        Interface(0),
                    ),
                ),
            ),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:227:229,
            item: "id",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:268:270,
            item: "id",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: Some(
            Object(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:278:282,
            item: "name",
        },
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(8),
        ),
        directives: [],
        parent_type: Some(
            Object(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:308:310,
            item: "id",
        },
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(4),
        ),
        directives: [],
        parent_type: Some(
            Object(2),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:317:321,
            item: "type",
        },
        is_extension: false,
        arguments: [],
        type_: Named(
            Enum(0),
        ),
        directives: [],
        parent_type: Some(
            Object(2),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: kitchen-sink.graphql:730:740,
            item: "clientName",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(8),
        ),
        directives: [],
        parent_type: Some(
            Object(3),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: kitchen-sink.graphql:772:780,
            item: "nickname",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(8),
        ),
        directives: [],
        parent_type: Some(
            Object(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: kitchen-sink.graphql:791:797,
            item: "client",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Object(3),
        ),
        directives: [],
        parent_type: Some(
            Object(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: kitchen-sink.graphql:835:839,
            item: "name",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(8),
        ),
        directives: [],
        parent_type: Some(
            Interface(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: kitchen-sink.graphql:896:900,
            item: "name",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(8),
        ),
        directives: [],
        parent_type: Some(
            Interface(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "__typename",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(8),
            ),
        ),
        directives: [],
        parent_type: None,
        description: Some(
            "This object's GraphQL type. Provided by GraphQL type name introspection.",
        ),
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "__token",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: None,
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "__id",
        },
        is_extension: true,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(4),
            ),
        ),
        directives: [],
        parent_type: None,
        description: Some(
            "Relay's cache key for this object.",
        ),
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "strong_id__",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(4),
        ),
        directives: [],
        parent_type: None,
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "is_fulfilled__",
        },
        is_extension: true,
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "name",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(8),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        type_: NonNull(
            Named(
                Scalar(8),
            ),
        ),
        directives: [],
        parent_type: None,
        description: None,
        hack_source: None,
    },
]
  input_objects: [
    InputObject {
        name: WithLocation {
            location: <generated>:510:518,
            item: InputObjectName(
                "Location",
            ),
        },
        fields: [
            Argument {
                name: WithLocation {
                    location: <generated>:569:572,
                    item: ArgumentName(
                        "lat",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(6),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:583:586,
                    item: ArgumentName(
                        "lon",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(6),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:597:601,
                    item: ArgumentName(
                        "city",
                    ),
                },
                type_: Named(
                    Scalar(8),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:612:615,
                    item: ArgumentName(
                        "zip",
                    ),
                },
                type_: Named(
                    Scalar(7),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:623:638,
                    item: ArgumentName(
                        "previous_cities",
                    ),
                },
                type_: List(
                    NonNull(
                        Named(
                            Scalar(8),
                        ),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "source",
                ),
                arguments: [
                    ArgumentValue {
                        name: ArgumentName(
                            "schema",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 535:545,
                                    kind: StringLiteral,
                                },
                                value: "facebook",
                            },
                        ),
                    },
                    ArgumentValue {
                        name: ArgumentName(
                            "name",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 553:563,
                                    kind: StringLiteral,
                                },
                                value: "Location",
                            },
                        ),
                    },
                ],
            },
        ],
        description: None,
        hack_source: None,
    },
]
  interfaces: [
    Interface {
        name: WithLocation {
            location: <generated>:218:222,
            item: InterfaceName(
                "Node",
            ),
        },
        is_extension: false,
        implementing_interfaces: [],
        implementing_objects: [
            ObjectID(1),
        ],
        fields: [
            FieldID(2),
            FieldID(11),
        ],
        directives: [],
        interfaces: [
            InterfaceID(1),
        ],
        description: None,
        hack_source: None,
    },
    Interface {
        name: WithLocation {
            location: kitchen-sink.graphql:823:830,
            item: InterfaceName(
                "HasName",
            ),
        },
        is_extension: true,
        implementing_interfaces: [],
        implementing_objects: [],
        fields: [
            FieldID(10),
        ],
        directives: [],
        interfaces: [],
        description: None,
        hack_source: None,
    },
]
  objects: [
    Object {
        name: WithLocation {
            location: <generated>:144:149,
            item: ObjectName(
                "Query",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(0),
            FieldID(1),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
    Object {
        name: WithLocation {
            location: <generated>:243:247,
            item: ObjectName(
                "User",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(3),
            FieldID(4),
            FieldID(8),
            FieldID(9),
        ],
        interfaces: [
            InterfaceID(0),
            InterfaceID(1),
        ],
        directives: [],
        description: None,
        hack_source: None,
    },
    Object {
        name: WithLocation {
            location: <generated>:299:303,
            item: ObjectName(
                "Page",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(5),
            FieldID(6),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
    Object {
        name: WithLocation {
            location: kitchen-sink.graphql:715:725,
            item: ObjectName(
                "ClientType",
            ),
        },
        is_extension: true,
        fields: [
            FieldID(7),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
]
  scalars: [
    Scalar {
        name: WithLocation {
            location: <generated>:187:190,
            item: ScalarName(
                "Int",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:198:203,
            item: ScalarName(
                "Float",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:211:217,
            item: ScalarName(
                "String",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:225:232,
            item: ScalarName(
                "Boolean",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:240:242,
            item: ScalarName(
                "ID",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:459:462,
            item: ScalarName(
                "URL",
            ),
        },
        is_extension: false,
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "source",
                ),
                arguments: [
                    ArgumentValue {
                        name: ArgumentName(
                            "schema",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 479:489,
                                    kind: StringLiteral,
                                },
                                value: "facebook",
                            },
                        ),
                    },
                    ArgumentValue {
                        name: ArgumentName(
                            "name",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 497:501,
                                    kind: StringLiteral,
                                },
                                value: "ID",
                            },
                        ),
                    },
                ],
            },
        ],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:660:665,
            item: ScalarName(
                "Float",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:674:677,
            item: ScalarName(
                "Int",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:686:692,
            item: ScalarName(
                "String",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
]
  unions: [
    Union {
        name: WithLocation {
            location: <generated>:431:436,
            item: UnionName(
                "Actor",
            ),
        },
        is_extension: false,
        members: [
            ObjectID(1),
            ObjectID(2),
        ],
        directives: [],
        description: None,
        hack_source: None,
    },
]
  }

FlatBuffer Schema:FB Schema {
directives: [
    Directive {
        name: WithLocation {
            location: <generated>:0:0,
            item: DirectiveName(
                "include",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(2),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
    Directive {
        name: WithLocation {
            location: <generated>:0:0,
            item: DirectiveName(
                "skip",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "if",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(2),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Field,
            FragmentSpread,
            InlineFragment,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
    Directive {
        name: WithLocation {
            location: <generated>:0:0,
            item: DirectiveName(
                "source",
            ),
        },
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "schema",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(1),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "name",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(1),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        locations: [
            Enum,
            InputObject,
            Interface,
            Object,
            Scalar,
            Union,
        ],
        repeatable: false,
        is_extension: false,
        description: None,
        hack_source: None,
    },
]
enums: [
    Enum {
        name: WithLocation {
            location: <generated>:0:0,
            item: EnumName(
                "PageType",
            ),
        },
        is_extension: false,
        values: [
            EnumValue {
                value: "DEAULT",
                directives: [
                    DirectiveValue {
                        name: DirectiveName(
                            "deprecated",
                        ),
                        arguments: [
                            ArgumentValue {
                                name: ArgumentName(
                                    "reason",
                                ),
                                value: String(
                                    StringNode {
                                        token: Token {
                                            span: 0:0,
                                            kind: EndOfFile,
                                        },
                                        value: "No longer supported",
                                    },
                                ),
                            },
                        ],
                    },
                ],
            },
            EnumValue {
                value: "PUBLIC",
                directives: [],
            },
            EnumValue {
                value: "PRIVATE",
                directives: [],
            },
        ],
        directives: [],
        description: None,
        hack_source: None,
    },
]
fields: [
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "clientName",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(1),
        ),
        directives: [],
        parent_type: Some(
            Object(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "name",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(1),
        ),
        directives: [],
        parent_type: Some(
            Interface(1),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "id",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(0),
            ),
        ),
        directives: [],
        parent_type: Some(
            Interface(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "name",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(1),
        ),
        directives: [],
        parent_type: Some(
            Interface(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "id",
        },
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(0),
        ),
        directives: [],
        parent_type: Some(
            Object(2),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "type",
        },
        is_extension: false,
        arguments: [],
        type_: Named(
            Enum(0),
        ),
        directives: [],
        parent_type: Some(
            Object(2),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "node",
        },
        is_extension: false,
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "id",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(0),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        type_: Named(
            Interface(0),
        ),
        directives: [],
        parent_type: Some(
            Object(3),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "nodes",
        },
        is_extension: false,
        arguments: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "ids",
                    ),
                },
                type_: NonNull(
                    List(
                        NonNull(
                            Named(
                                Scalar(0),
                            ),
                        ),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        type_: NonNull(
            List(
                NonNull(
                    Named(
                        Interface(0),
                    ),
                ),
            ),
        ),
        directives: [],
        parent_type: Some(
            Object(3),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "id",
        },
        is_extension: false,
        arguments: [],
        type_: NonNull(
            Named(
                Scalar(0),
            ),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "name",
        },
        is_extension: false,
        arguments: [],
        type_: Named(
            Scalar(1),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "nickname",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Scalar(1),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
    Field {
        name: WithLocation {
            location: <generated>:0:0,
            item: "client",
        },
        is_extension: true,
        arguments: [],
        type_: Named(
            Object(1),
        ),
        directives: [],
        parent_type: Some(
            Object(0),
        ),
        description: None,
        hack_source: None,
    },
]
input_objects: [
    InputObject {
        name: WithLocation {
            location: <generated>:0:0,
            item: InputObjectName(
                "Location",
            ),
        },
        fields: [
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "lat",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "lon",
                    ),
                },
                type_: NonNull(
                    Named(
                        Scalar(3),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "city",
                    ),
                },
                type_: Named(
                    Scalar(1),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "zip",
                    ),
                },
                type_: Named(
                    Scalar(4),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
            Argument {
                name: WithLocation {
                    location: <generated>:0:0,
                    item: ArgumentName(
                        "previous_cities",
                    ),
                },
                type_: List(
                    NonNull(
                        Named(
                            Scalar(1),
                        ),
                    ),
                ),
                default_value: None,
                description: None,
                directives: [],
            },
        ],
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "source",
                ),
                arguments: [
                    ArgumentValue {
                        name: ArgumentName(
                            "schema",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 0:0,
                                    kind: EndOfFile,
                                },
                                value: "facebook",
                            },
                        ),
                    },
                    ArgumentValue {
                        name: ArgumentName(
                            "name",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 0:0,
                                    kind: EndOfFile,
                                },
                                value: "Location",
                            },
                        ),
                    },
                ],
            },
        ],
        description: None,
        hack_source: None,
    },
]
interfaces: [
    Interface {
        name: WithLocation {
            location: <generated>:0:0,
            item: InterfaceName(
                "HasName",
            ),
        },
        is_extension: true,
        implementing_interfaces: [],
        implementing_objects: [],
        fields: [
            FieldID(7),
        ],
        directives: [],
        interfaces: [],
        description: None,
        hack_source: None,
    },
    Interface {
        name: WithLocation {
            location: <generated>:0:0,
            item: InterfaceName(
                "Node",
            ),
        },
        is_extension: false,
        implementing_interfaces: [],
        implementing_objects: [
            ObjectID(0),
        ],
        fields: [
            FieldID(5),
            FieldID(6),
        ],
        directives: [],
        interfaces: [
            InterfaceID(1),
        ],
        description: None,
        hack_source: None,
    },
]
objects: [
    Object {
        name: WithLocation {
            location: <generated>:0:0,
            item: ObjectName(
                "ClientType",
            ),
        },
        is_extension: true,
        fields: [
            FieldID(3),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
    Object {
        name: WithLocation {
            location: <generated>:0:0,
            item: ObjectName(
                "Page",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(8),
            FieldID(9),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
    Object {
        name: WithLocation {
            location: <generated>:0:0,
            item: ObjectName(
                "Query",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(10),
            FieldID(11),
        ],
        interfaces: [],
        directives: [],
        description: None,
        hack_source: None,
    },
    Object {
        name: WithLocation {
            location: <generated>:0:0,
            item: ObjectName(
                "User",
            ),
        },
        is_extension: false,
        fields: [
            FieldID(0),
            FieldID(1),
            FieldID(2),
            FieldID(4),
        ],
        interfaces: [
            InterfaceID(0),
            InterfaceID(1),
        ],
        directives: [],
        description: None,
        hack_source: None,
    },
]
scalars: [
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "Boolean",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "Float",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "ID",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "Int",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "String",
            ),
        },
        is_extension: false,
        directives: [],
        description: None,
        hack_source: None,
    },
    Scalar {
        name: WithLocation {
            location: <generated>:0:0,
            item: ScalarName(
                "URL",
            ),
        },
        is_extension: false,
        directives: [
            DirectiveValue {
                name: DirectiveName(
                    "source",
                ),
                arguments: [
                    ArgumentValue {
                        name: ArgumentName(
                            "schema",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 0:0,
                                    kind: EndOfFile,
                                },
                                value: "facebook",
                            },
                        ),
                    },
                    ArgumentValue {
                        name: ArgumentName(
                            "name",
                        ),
                        value: String(
                            StringNode {
                                token: Token {
                                    span: 0:0,
                                    kind: EndOfFile,
                                },
                                value: "ID",
                            },
                        ),
                    },
                ],
            },
        ],
        description: None,
        hack_source: None,
    },
]
unions: [
    Union {
        name: WithLocation {
            location: <generated>:0:0,
            item: UnionName(
                "Actor",
            ),
        },
        is_extension: false,
        members: [
            ObjectID(0),
            ObjectID(2),
        ],
        directives: [],
        description: None,
        hack_source: None,
    },
]
}
