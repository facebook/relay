Input:
var Relay = require('react-relay');
var x = Relay.QL`
  fragment on NewsFeedConnection{
    edges {
      node {
        id
      }
    }
  }
`;

Output:
var Relay = require('react-relay');
var x = (function () {
  var GraphQL = Relay.QL.__GraphQL;
  return new GraphQL.QueryFragment('MetadataDynamic', 'NewsFeedConnection', [new GraphQL.Field('edges', [new GraphQL.Field('node', [new GraphQL.Field('id', null, null, null, null, null, {
    parentType: 'Node',
    requisite: true
  }), new GraphQL.Field('__typename', null, null, null, null, null, {
    parentType: 'Node',
    generated: true,
    requisite: true
  })], null, null, null, null, {
    parentType: 'NewsFeedConnectionEdge',
    rootCall: 'node',
    pk: 'id',
    dynamic: true,
    requisite: true
  }), new GraphQL.Field('cursor', null, null, null, null, null, {
    parentType: 'NewsFeedConnectionEdge',
    generated: true,
    requisite: true
  })], null, null, null, null, {
    parentType: 'NewsFeedConnection',
    plural: true
  }), new GraphQL.Field('pageInfo', [new GraphQL.Field('hasNextPage', null, null, null, null, null, {
    parentType: 'PageInfo',
    generated: true,
    requisite: true
  }), new GraphQL.Field('hasPreviousPage', null, null, null, null, null, {
    parentType: 'PageInfo',
    generated: true,
    requisite: true
  })], null, null, null, null, {
    parentType: 'NewsFeedConnection',
    generated: true,
    requisite: true
  })]);
})();