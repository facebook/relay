==================================== INPUT ====================================
fragment FragmentSpread on Node {
  id
  ...OtherFragment
  justFrag: profilePicture {
    ...PictureFragment
  }
  fragAndField: profilePicture {
    uri
    ...PictureFragment
  }
  ... on User {
    ...UserFrag1
    ...UserFrag2
  }
}

fragment ConcreateTypes on Viewer {
  actor {
    __typename
    ... on Page {
      id
      ...PageFragment
    }
    ... on User {
      name
    }
  }
}

fragment PictureFragment on Image {
  __typename
}

fragment OtherFragment on Node {
  __typename
}

fragment PageFragment on Page {
  __typename
}

fragment UserFrag1 on User {
  __typename
}

fragment UserFrag2 on User {
  __typename
}
==================================== OUTPUT ===================================
import type { PageFragment$fragmentType } from "PageFragment.graphql";
import type { FragmentType } from "relay-runtime";
declare export opaque type ConcreateTypes$fragmentType: FragmentType;
export type ConcreateTypes$data = {|
  +actor: ?({|
    +__typename: "Page",
    +id: string,
    +$fragmentSpreads: PageFragment$fragmentType,
  |} | {|
    +__typename: "User",
    +name: ?string,
  |} | {|
    // This will never be '%other', but we need some
    // value in case none of the concrete values match.
    +__typename: "%other",
  |}),
  +$fragmentType: ConcreateTypes$fragmentType,
|};
export type ConcreateTypes$key = {
  +$data?: ConcreateTypes$data,
  +$fragmentSpreads: ConcreateTypes$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { OtherFragment$fragmentType } from "OtherFragment.graphql";
import type { PictureFragment$fragmentType } from "PictureFragment.graphql";
import type { UserFrag1$fragmentType } from "UserFrag1.graphql";
import type { UserFrag2$fragmentType } from "UserFrag2.graphql";
import type { FragmentType } from "relay-runtime";
declare export opaque type FragmentSpread$fragmentType: FragmentType;
export type FragmentSpread$data = {|
  +fragAndField: ?{|
    +uri: ?string,
    +$fragmentSpreads: PictureFragment$fragmentType,
  |},
  +id: string,
  +justFrag: ?{|
    +$fragmentSpreads: PictureFragment$fragmentType,
  |},
  +$fragmentSpreads: OtherFragment$fragmentType & UserFrag1$fragmentType & UserFrag2$fragmentType,
  +$fragmentType: FragmentSpread$fragmentType,
|};
export type FragmentSpread$key = {
  +$data?: FragmentSpread$data,
  +$fragmentSpreads: FragmentSpread$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type OtherFragment$fragmentType: FragmentType;
export type OtherFragment$data = {|
  +__typename: string,
  +$fragmentType: OtherFragment$fragmentType,
|};
export type OtherFragment$key = {
  +$data?: OtherFragment$data,
  +$fragmentSpreads: OtherFragment$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type PageFragment$fragmentType: FragmentType;
export type PageFragment$data = {|
  +__typename: "Page",
  +$fragmentType: PageFragment$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  +$fragmentType: PageFragment$fragmentType,
|};
export type PageFragment$key = {
  +$data?: PageFragment$data,
  +$fragmentSpreads: PageFragment$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type PictureFragment$fragmentType: FragmentType;
export type PictureFragment$data = {|
  +__typename: "Image",
  +$fragmentType: PictureFragment$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  +$fragmentType: PictureFragment$fragmentType,
|};
export type PictureFragment$key = {
  +$data?: PictureFragment$data,
  +$fragmentSpreads: PictureFragment$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type UserFrag1$fragmentType: FragmentType;
export type UserFrag1$data = {|
  +__typename: "User",
  +$fragmentType: UserFrag1$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  +$fragmentType: UserFrag1$fragmentType,
|};
export type UserFrag1$key = {
  +$data?: UserFrag1$data,
  +$fragmentSpreads: UserFrag1$fragmentType,
  ...
};
-------------------------------------------------------------------------------
import type { FragmentType } from "relay-runtime";
declare export opaque type UserFrag2$fragmentType: FragmentType;
export type UserFrag2$data = {|
  +__typename: "User",
  +$fragmentType: UserFrag2$fragmentType,
|} | {|
  // This will never be '%other', but we need some
  // value in case none of the concrete values match.
  +__typename: "%other",
  +$fragmentType: UserFrag2$fragmentType,
|};
export type UserFrag2$key = {
  +$data?: UserFrag2$data,
  +$fragmentSpreads: UserFrag2$fragmentType,
  ...
};
