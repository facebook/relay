==================================== INPUT ====================================
query NameRendererQuery {
  me {
    nameRenderer @match {
      ...PlainUserNameRenderer_name @module(name: "PlainUserNameRenderer.react")
      ...MarkdownUserNameRenderer_name
        @module(name: "MarkdownUserNameRenderer.react")
    }
  }
}

fragment PlainUserNameRenderer_name on PlainUserNameRenderer {
  plaintext
  data {
    text
  }
}

fragment MarkdownUserNameRenderer_name on MarkdownUserNameRenderer {
  markdown
  data {
    markup
  }
}
==================================== OUTPUT ===================================
import type { MarkdownUserNameRenderer_name$ref } from "MarkdownUserNameRenderer_name.graphql";
import type { PlainUserNameRenderer_name$ref } from "PlainUserNameRenderer_name.graphql";
export type NameRendererQueryVariables = {};
export type NameRendererQueryResponse = {
  readonly me?: {
    readonly nameRenderer?: {
      readonly __fragmentPropName?: string,
      readonly __module_component?: string,
      readonly $fragmentRefs: PlainUserNameRenderer_name$ref & MarkdownUserNameRenderer_name$ref,
    }
  }
};
export type NameRendererQuery = {
  variables: NameRendererQueryVariables,
  response: NameRendererQueryResponse,
};
-------------------------------------------------------------------------------
import { FragmentReference } from "relay-runtime";
export type MarkdownUserNameRenderer_name$ref = FragmentReference & { _: "MarkdownUserNameRenderer_name$ref" };
export type MarkdownUserNameRenderer_name$fragmentType = MarkdownUserNameRenderer_name$ref & { _: "MarkdownUserNameRenderer_name$fragmentType" };
export type MarkdownUserNameRenderer_name = {
  readonly markdown?: string,
  readonly data?: {
    readonly markup?: string
  },
  readonly $refType: MarkdownUserNameRenderer_name$ref,
};
export type MarkdownUserNameRenderer_name$data = MarkdownUserNameRenderer_name;
export type MarkdownUserNameRenderer_name$key = {
  readonly $data?: MarkdownUserNameRenderer_name$data,
  readonly $fragmentRefs: MarkdownUserNameRenderer_name$ref,
};
-------------------------------------------------------------------------------
import { FragmentReference } from "relay-runtime";
export type PlainUserNameRenderer_name$ref = FragmentReference & { _: "PlainUserNameRenderer_name$ref" };
export type PlainUserNameRenderer_name$fragmentType = PlainUserNameRenderer_name$ref & { _: "PlainUserNameRenderer_name$fragmentType" };
export type PlainUserNameRenderer_name = {
  readonly plaintext?: string,
  readonly data?: {
    readonly text?: string
  },
  readonly $refType: PlainUserNameRenderer_name$ref,
};
export type PlainUserNameRenderer_name$data = PlainUserNameRenderer_name;
export type PlainUserNameRenderer_name$key = {
  readonly $data?: PlainUserNameRenderer_name$data,
  readonly $fragmentRefs: PlainUserNameRenderer_name$ref,
};
