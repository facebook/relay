/**
 * Copyright 2004-present Facebook. All Rights Reserved.
 *
 * @providesModule RefetchExample
 */

const React = require('React');
const { createRefetchContainer, graphql } = require('Relay');

class RefetchExample extends React.Component {
  render() {
    return <div>{this.props.user.name}</div>;
  }
}

module.exports = createRefetchContainer(RefetchExample, {
  user: {
    modern: function () {
      return require('./__generated__/RefetchExample_user.graphql');
    },
    classic: function () {
      const RelayQL_GENERATED = require('react-relay/classic').QL;

      return {
        kind: 'FragmentDefinition',
        argumentDefinitions: [],
        node: function () {
          return {
            children: [{
              fieldName: 'name',
              kind: 'Field',
              metadata: {},
              type: 'String'
            }, {
              fieldName: 'id',
              kind: 'Field',
              metadata: {
                isGenerated: true,
                isRequisite: true
              },
              type: 'ID'
            }],
            id: RelayQL_GENERATED.__id(),
            kind: 'Fragment',
            metadata: {},
            name: 'RefetchExample_user',
            type: 'User'
          };
        }()
      };
    }
  }
}, {
  modern: function () {
    return require('./__generated__/RefetchExampleRefetchQuery.graphql');
  },
  classic: function () {
    const RelayQL_GENERATED = require('react-relay/classic').QL,
          RefetchExample_user = (RefetchExample.__container__ || RefetchExample).getFragment('user');

    return {
      kind: 'OperationDefinition',
      argumentDefinitions: [],
      name: 'RefetchExampleRefetchQuery',
      operation: 'query',
      node: function () {
        return {
          children: [{
            children: [{
              children: [].concat.apply([], [{
                fieldName: 'id',
                kind: 'Field',
                metadata: {
                  isGenerated: true,
                  isRequisite: true
                },
                type: 'ID'
              }, {
                fieldName: '__typename',
                kind: 'Field',
                metadata: {
                  isGenerated: true,
                  isRequisite: true
                },
                type: 'String'
              }, RelayQL_GENERATED.__frag(RefetchExample_user)]),
              fieldName: 'actor',
              kind: 'Field',
              metadata: {
                canHaveSubselections: true,
                inferredRootCallName: 'node',
                inferredPrimaryKey: 'id',
                isAbstract: true
              },
              type: 'Actor'
            }],
            fieldName: 'viewer',
            kind: 'Field',
            metadata: {
              canHaveSubselections: true
            },
            type: 'Viewer'
          }],
          id: RelayQL_GENERATED.__id(),
          kind: 'Fragment',
          metadata: {},
          name: 'RefetchExampleRefetchQuery',
          type: 'Query'
        };
      }()
    };
  }
});
