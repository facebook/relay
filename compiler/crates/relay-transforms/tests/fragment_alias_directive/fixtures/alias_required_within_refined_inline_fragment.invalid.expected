==================================== INPUT ====================================
# expected-to-throw
fragment RelayReaderNamedFragmentsTest_user on User {
  name
}

query RelayReaderNamedFragmentsTest2Query {
  node {
    # Relay is not reliable in modeling this as a discriminated union in its
    # typescript/flow types. To be safe we need the user to supply an alias.
    ... on User {
      # This might not match!
      ...RelayReaderNamedFragmentsTest_user
    }
  }
}
==================================== ERROR ====================================
✖︎ Expected `@alias` directive. `RelayReaderNamedFragmentsTest_user` is defined on `User` which might not match this selection type of `Node`. Add `@alias` to this spread to expose the fragment reference as a nullable property. NOTE: The selection type inferred here does not include inline fragments because Relay does not always model inline fragment type refinements in its generated types.

  alias_required_within_refined_inline_fragment.invalid.graphql:12:10
   11 │       # This might not match!
   12 │       ...RelayReaderNamedFragmentsTest_user
      │          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   13 │     }
